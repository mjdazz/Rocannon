SYNOPSIS                   *gcp_cloudtasks_queue*

     • A named resource to which messages are sent by publishers.

REQUIREMENTS                   *gcp_cloudtasks_queue-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_cloudtasks_queue-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   app_engine_routing_override                    Overrides for task-level appEngineRouting. These settings apply only to App Engine tasks in this queue .
   dictionary
     instance                                     App instance.
     string                                       By default, the task is sent to an instance which is available when the task is attempted.
     service                                      App service.
     string                                       By default, the task is sent to the service which is the default service when the task is attempted.
     version                                      App version.
     string                                       By default, the task is sent to the version which is the default version when the task is attempted.
                                 Choices:
   auth_kind                     • application    The type of credential used.
   string / required             • machineaccount
                                 • serviceaccount
   env_type                                       Specifies which Ansible environment you're running this module within.
   string                                         This should not be set unless you know what you're doing.
                                                  This only alters the User Agent string for any API requests.
   location                                       The location of the queue.
   string / required
   name                                           The queue name.
   string
   project                                        The Google Cloud Platform project to use.
   string
                                                  Rate limits for task dispatches. The queue's actual dispatch rate is the result of: " Number of tasks in the queue " User-specified throttling:
   rate_limits                                    rateLimits, retryConfig, and the queue's state.
   dictionary                                     " System throttling due to 429 (Too Many Requests) or 503 (Service Unavailable) responses from the worker, high error rates, or to smooth sudden
                                                  large traffic spikes.
     max_concurrent_dispatches                    The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched for this queue. After this threshold has been reached, Cloud Tasks
     integer                                      stops dispatching tasks until the number of concurrent requests decreases.
     max_dispatches_per_second                    The maximum rate at which tasks are dispatched from this queue.
     integer                                      If unspecified when the queue is created, Cloud Tasks will pick the default.
   retry_config                                   Settings that determine the retry behavior.
   dictionary
                                                  Number of attempts per task.
     max_attempts                                 Cloud Tasks will attempt the task maxAttempts times (that is, if the first attempt fails, then there will be maxAttempts - 1 retries). Must be >=
     integer                                      -1.
                                                  If unspecified when the queue is created, Cloud Tasks will pick the default.
                                                  -1 indicates unlimited attempts.
     max_backoff                                  A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task
     string                                       should be retried.
     max_doublings                                The time between retries will double maxDoublings times.
     integer                                      A task's retry interval starts at minBackoff, then doubles maxDoublings times, then increases linearly, and finally retries retries at intervals of
                                                  maxBackoff up to maxAttempts times.
     max_retry_duration                           If positive, maxRetryDuration specifies the time limit for retrying a failed task, measured from when the task was first attempted. Once
     string                                       maxRetryDuration time has passed and the task has been attempted maxAttempts times, no further attempts will be made and the task will be deleted.
                                                  If zero, then the task age is unlimited.
     min_backoff                                  A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task
     string                                       should be retried.
   scopes                                         Array of scopes to be used.
   list
   service_account_contents                       The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                          An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                           The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                         Choices:
   string                        • present ←      Whether the given object should exist in GCP
                                 • absent
   status                                         The current state of the queue.
   string                                         Some valid choices include: "RUNNING", "PAUSED", "DISABLED"

NOTES                   *gcp_cloudtasks_queue-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_cloudtasks_queue-examples*

 - name: create a queue
   gcp_cloudtasks_queue:
     name: test_object
     location: us-central1
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_cloudtasks_queue-return values*

   Common return values are documented here, the following are the fields unique to this module:

              Key            Returned                                                                           Description
   appEngineRoutingOverride  success  Overrides for task-level appEngineRouting. These settings apply only to App Engine tasks in this queue .
   complex
     host                    success  The host that the task is sent to.
     string
     instance                success  App instance.
     string                           By default, the task is sent to an instance which is available when the task is attempted.
     service                 success  App service.
     string                           By default, the task is sent to the service which is the default service when the task is attempted.
     version                 success  App version.
     string                           By default, the task is sent to the version which is the default version when the task is attempted.
   location                  success  The location of the queue.
   string
   name                      success  The queue name.
   string
                                      Rate limits for task dispatches. The queue's actual dispatch rate is the result of: " Number of tasks in the queue " User-specified throttling: rateLimits,
   rateLimits                success  retryConfig, and the queue's state.
   complex                            " System throttling due to 429 (Too Many Requests) or 503 (Service Unavailable) responses from the worker, high error rates, or to smooth sudden large traffic
                                      spikes.
     maxBurstSize                     The max burst size.
     integer                 success  Max burst size limits how fast tasks in queue are processed when many tasks are in the queue and the rate is high. This field allows the queue to have a high
                                      rate so processing starts shortly after a task is enqueued, but still limits resource usage when many tasks are enqueued in a short period of time.
     maxConcurrentDispatches success  The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched for this queue. After this threshold has been reached, Cloud Tasks stops
     integer                          dispatching tasks until the number of concurrent requests decreases.
     maxDispatchesPerSecond  success  The maximum rate at which tasks are dispatched from this queue.
     integer                          If unspecified when the queue is created, Cloud Tasks will pick the default.
   retryConfig               success  Settings that determine the retry behavior.
   complex
                                      Number of attempts per task.
     maxAttempts             success  Cloud Tasks will attempt the task maxAttempts times (that is, if the first attempt fails, then there will be maxAttempts - 1 retries). Must be >= -1.
     integer                          If unspecified when the queue is created, Cloud Tasks will pick the default.
                                      -1 indicates unlimited attempts.
     maxBackoff              success  A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task should be
     string                           retried.
     maxDoublings                     The time between retries will double maxDoublings times.
     integer                 success  A task's retry interval starts at minBackoff, then doubles maxDoublings times, then increases linearly, and finally retries retries at intervals of maxBackoff
                                      up to maxAttempts times.
     maxRetryDuration                 If positive, maxRetryDuration specifies the time limit for retrying a failed task, measured from when the task was first attempted. Once maxRetryDuration time
     string                  success  has passed and the task has been attempted maxAttempts times, no further attempts will be made and the task will be deleted.
                                      If zero, then the task age is unlimited.
     minBackoff              success  A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task should be
     string                           retried.
     purgeTime               success  The last time this queue was purged.
     string
   status                    success  The current state of the queue.
   string

STATUS                   *gcp_cloudtasks_queue-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_cloudtasks_queue-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_cloudtasks_queue_module.html
