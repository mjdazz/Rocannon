SYNOPSIS                   *ec2_eni*

     • Create and optionally attach an Elastic Network Interface (ENI) to an instance. If an ENI ID or private_ip is provided, the existing ENI (if any) will be modified. The ‘attached’ parameter
       controls the attachment status of the network interface.

REQUIREMENTS                   *ec2_eni-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • boto

PARAMETERS                   *ec2_eni-parameters*

                Parameter               Choices/Defaults                                                                   Comments
   allow_reassignment                     Choices:       Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified
   boolean                                • no ←         network interface.
   added in 2.7                           • yes
   attached                               Choices:
   boolean                                • no           Specifies if network interface should be attached or detached from instance. If omitted, attachment status won't change
                                          • yes
   aws_access_key                                        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                                aliases: ec2_access_key, access_key
   aws_secret_key                                        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                                aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs           Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to
   boolean                                • no ←         the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                           • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   delete_on_termination                  Choices:       Delete the interface when the instance it is attached to is terminated. You can only specify this flag when the interface is being modified,
   boolean                                • no           not on creation.
                                          • yes
   description                                           Optional description of the ENI.
   -
   device_index                         Default:         The index of the device for the network interface attachment on the instance.
   -                                    0
   ec2_url                                               Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is
   string                                                required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if
                                                         any, is used.
   eni_id                                                The ID of the ENI (to modify); if null and state is present, a new eni will be created.
   -
   force_detach                           Choices:       Force detachment of the interface. This applies either when explicitly detaching the interface by setting instance_id to None or when
   boolean                                • no ←         deleting an interface with state=absent.
                                          • yes
   instance_id                                           Instance ID that you wish to attach ENI to. Since version 2.2, use the 'attached' parameter to attach or detach an ENI. Prior to 2.2, to
   -                                                     detach an ENI from an instance, use 'None'.
   private_ip_address                                    Private IP address.
   -
   profile                                               Uses a boto profile. Only works with boto >= 2.24.0.
   string
   purge_secondary_private_ip_addresses   Choices:       To be used with secondary_private_ip_addresses to determine whether or not to remove any secondary IP addresses other than those specified.
   boolean                                • no ←         Set secondary_private_ip_addresses to an empty list to purge all secondary addresses.
   added in 2.5                           • yes
   region                                                The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                                http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                         aliases: aws_region, ec2_region
   secondary_private_ip_address_count                    The number of secondary IP addresses to assign to the network interface. This option is mutually exclusive of secondary_private_ip_addresses
   -
   secondary_private_ip_addresses                        A list of IP addresses to assign as secondary IP addresses to the network interface. This option is mutually exclusive of
   -                                                     secondary_private_ip_address_count
   security_groups                                       List of security groups associated with the interface. Only used when state=present. Since version 2.2, you can specify security groups by
   -                                                     ID or by name or a combination of both. Prior to 2.2, you can specify only by ID.
   security_token                                        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                                aliases: access_token
   source_dest_check                      Choices:       By default, interfaces perform source/destination checks. NAT instances however need this check to be disabled. You can only specify this
   boolean                                • no           flag when the interface is being modified, not on creation.
                                          • yes
   state                                  Choices:
   -                                      • present ←    Create or delete ENI
                                          • absent
   subnet_id                                             ID of subnet in which to create the ENI.
   -
   validate_certs                         Choices:
   boolean                                • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                          • yes ←

NOTES                   *ec2_eni-notes*

   Note

     • This module identifies and ENI based on either the eni_id, a combination of private_ip_address and subnet_id, or a combination of instance_id and device_id. Any of these options will let you
       specify a particular ENI.
     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_eni-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 # Create an ENI. As no security group is defined, ENI will be created in default security group
 - ec2_eni:
     private_ip_address: 172.31.0.20
     subnet_id: subnet-xxxxxxxx
     state: present

 # Create an ENI and attach it to an instance
 - ec2_eni:
     instance_id: i-xxxxxxx
     device_index: 1
     private_ip_address: 172.31.0.20
     subnet_id: subnet-xxxxxxxx
     state: present

 # Create an ENI with two secondary addresses
 - ec2_eni:
     subnet_id: subnet-xxxxxxxx
     state: present
     secondary_private_ip_address_count: 2

 # Assign a secondary IP address to an existing ENI
 # This will purge any existing IPs
 - ec2_eni:
     subnet_id: subnet-xxxxxxxx
     eni_id: eni-yyyyyyyy
     state: present
     secondary_private_ip_addresses:
       - 172.16.1.1

 # Remove any secondary IP addresses from an existing ENI
 - ec2_eni:
     subnet_id: subnet-xxxxxxxx
     eni_id: eni-yyyyyyyy
     state: present
     secondary_private_ip_address_count: 0

 # Destroy an ENI, detaching it from any instance if necessary
 - ec2_eni:
     eni_id: eni-xxxxxxx
     force_detach: yes
     state: absent

 # Update an ENI
 - ec2_eni:
     eni_id: eni-xxxxxxx
     description: "My new description"
     state: present

 # Update an ENI identifying it by private_ip_address and subnet_id
 - ec2_eni:
     subnet_id: subnet-xxxxxxx
     private_ip_address: 172.16.1.1
     description: "My new description"

 # Detach an ENI from an instance
 - ec2_eni:
     eni_id: eni-xxxxxxx
     instance_id: None
     state: present

 ### Delete an interface on termination
 # First create the interface
 - ec2_eni:
     instance_id: i-xxxxxxx
     device_index: 1
     private_ip_address: 172.31.0.20
     subnet_id: subnet-xxxxxxxx
     state: present
   register: eni

 # Modify the interface to enable the delete_on_terminaton flag
 - ec2_eni:
     eni_id: "{{ eni.interface.id }}"
     delete_on_termination: true

RETURN VALUES                   *ec2_eni-return values*

   Common return values are documented here, the following are the fields unique to this module:

            Key                 Returned                                                                            Description
   interface              when state != absent Network interface attributes
   complex
     description                               interface description
     string                                    Sample:
                                               Firewall network interface
     groups                                    list of security groups
     list of dictionaries                      Sample:
                                               [{'sg-f8a8a9da': 'default'}]
     id                                        network interface id
     string                                    Sample:
                                               eni-1d889198
     mac_address                               interface's physical address
     string                                    Sample:
                                               00:00:5E:00:53:23
     owner_id                                  aws account id
     string                                    Sample:
                                               812381371
     private_ip_address                        primary ip address of this interface
     string                                    Sample:
                                               10.20.30.40
     private_ip_addresses                      list of all private ip addresses associated to this interface
     list of dictionaries                      Sample:
                                               [{'primary_address': True, 'private_ip_address': '10.20.30.40'}]
     source_dest_check                         value of source/dest check flag
     boolean                                   Sample:
                                               True
     status                                    network interface status
     string                                    Sample:
                                               pending
     subnet_id                                 which vpc subnet the interface is bound
     string                                    Sample:
                                               subnet-b0a0393c
     vpc_id                                    which vpc this network interface is bound
     string                                    Sample:
                                               vpc-9a9a9da

STATUS                   *ec2_eni-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Rob White (@wimnat)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_eni-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_eni_module.html
