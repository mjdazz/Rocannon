SYNOPSIS                   *proxmox_template*

     • allows you to upload/delete templates in Proxmox VE cluster

REQUIREMENTS                   *proxmox_template-requirements*

   The below requirements are needed on the host that executes this module.

     • proxmoxer
     • requests

PARAMETERS                   *proxmox_template-parameters*

     Parameter    Choices/Defaults                                                                              Comments
   api_host                        the host of the Proxmox VE cluster
   - / required
   api_password                    the password to authenticate with
   -                               you can use PROXMOX_PASSWORD environment variable
   api_user                        the user to authenticate with
   - / required
   content_type     Choices:       content type
   -                • vztmpl ←     required only for state=present
                    • iso
   force            Choices:
   boolean          • no ←         can be used only with state=present, exists template will be overwritten
                    • yes
   node                            Proxmox VE node, when you will operate with template
   - / required
   src                             path to uploaded file
   -                               required only for state=present
                                   aliases: path
   state            Choices:
   -                • present ←    Indicate desired state of the template
                    • absent
   storage        Default:         target storage
   -              "local"
   template                        the template name
   -                               required only for states absent, info
   timeout        Default:         timeout for operations
   -              30
   validate_certs   Choices:
   boolean          • no ←         enable / disable https certificate verification
                    • yes

NOTES                   *proxmox_template-notes*

   Note

     • Requires proxmoxer and requests modules on host. This modules can be installed with pip.

EXAMPLES                   *proxmox_template-examples*

 # Upload new openvz template with minimal options
 - proxmox_template:
     node: uk-mc02
     api_user: [email protected]
     api_password: 1q2w3e
     api_host: node1
     src: ~/ubuntu-14.04-x86_64.tar.gz

 # Upload new openvz template with minimal options use environment PROXMOX_PASSWORD variable(you should export it before)
 - proxmox_template:
     node: uk-mc02
     api_user: [email protected]
     api_host: node1
     src: ~/ubuntu-14.04-x86_64.tar.gz

 # Upload new openvz template with all options and force overwrite
 - proxmox_template:
     node: uk-mc02
     api_user: [email protected]
     api_password: 1q2w3e
     api_host: node1
     storage: local
     content_type: vztmpl
     src: ~/ubuntu-14.04-x86_64.tar.gz
     force: yes

 # Delete template with minimal options
 - proxmox_template:
     node: uk-mc02
     api_user: [email protected]
     api_password: 1q2w3e
     api_host: node1
     template: ubuntu-14.04-x86_64.tar.gz
     state: absent

STATUS                   *proxmox_template-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Sergei Antipov (@UnderGreen)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *proxmox_template-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/proxmox_template_module.html
