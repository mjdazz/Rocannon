SYNOPSIS                   *rax_scaling_policy*

     • Manipulate Rackspace Cloud Autoscale Scaling Policy

REQUIREMENTS                   *rax_scaling_policy-requirements*

   The below requirements are needed on the host that executes this module.

     • pyrax
     • python >= 2.6

PARAMETERS                   *rax_scaling_policy-parameters*

      Parameter                    Choices/Defaults                                                                             Comments
   api_key                                                          Rackspace API key, overrides credentials.
   string                                                           aliases: password
   at                                                               The UTC time when this policy will be executed. The time must be formatted according to yyyy-MM-dd'T'HH:mm:ss.SSS such as
   -                                                                2013-05-19T08:07:08Z
   auth_endpoint    Default:                                        The URI of the authentication service.
   -                "https://identity.api.rackspacecloud.com/v2.0/"
   change                                                           The change, either as a number of servers or as a percentage, to make in the scaling group. If this is a percentage, you must set
   -                                                                is_percent to true also.
   cooldown                                                         The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer
   -                                                                between 0 and 86400 (24 hrs).
   credentials                                                      File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   path                                                             aliases: creds_file
   cron                                                             The time when the policy will be executed, as a cron entry. For example, if this is parameter is set to 1 0 " " "
   -
   desired_capacity                                                 The desired server capacity of the scaling the group; that is, how many servers should be in the scaling group.
   -
   env                                                              Environment as configured in ~/.pyrax.cfg, see
   string                                                           https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type    Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -                "rackspace"
   is_percent         Choices:
   boolean            • no ←                                        Whether the value in change is a percent value
                      • yes
   name                                                             Name to give the policy
   - / required
   policy_type        Choices:
   - / required       • webhook                                     The type of policy that will be executed for the current release.
                      • schedule
   region           Default:                                        Region to create an instance in.
   string           "DFW"
   scaling_group                                                    Name of the scaling group that this policy will be added to
   - / required
   state              Choices:
   -                  • present ←                                   Indicate desired state of the resource
                      • absent
   tenant_id                                                        The tenant ID used for authentication.
   -
   tenant_name                                                      The tenant name used for authentication.
   -
   username                                                         Rackspace username, overrides credentials.
   string
   validate_certs     Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean            • no                                          aliases: verify_ssl
                      • yes

NOTES                   *rax_scaling_policy-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)
     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_scaling_policy-examples*

 ---
 - hosts: localhost
   gather_facts: false
   connection: local
   tasks:
     - rax_scaling_policy:
         credentials: ~/.raxpub
         region: ORD
         at: '2013-05-19T08:07:08Z'
         change: 25
         cooldown: 300
         is_percent: true
         name: ASG Test Policy - at
         policy_type: schedule
         scaling_group: ASG Test
       register: asps_at

     - rax_scaling_policy:
         credentials: ~/.raxpub
         region: ORD
         cron: '1 0 " " "'
         change: 25
         cooldown: 300
         is_percent: true
         name: ASG Test Policy - cron
         policy_type: schedule
         scaling_group: ASG Test
       register: asp_cron

     - rax_scaling_policy:
         credentials: ~/.raxpub
         region: ORD
         cooldown: 300
         desired_capacity: 5
         name: ASG Test Policy - webhook
         policy_type: webhook
         scaling_group: ASG Test
       register: asp_webhook

STATUS                   *rax_scaling_policy-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Matt Martz (@sivel)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_scaling_policy-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_scaling_policy_module.html
