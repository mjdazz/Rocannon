SYNOPSIS                   *cnos_backup*

     • This module allows you to work with switch configurations. It provides a way to back up the running or startup configurations of a switch to a remote server. This is achieved by periodically
       saving a copy of the startup or running configuration of the network device to a remote server using FTP, SFTP, TFTP, or SCP. The first step is to create a directory from where the remote
       server can be reached. The next step is to provide the full file path of the location where the configuration will be backed up. Authentication details required by the remote server must be
       provided as well. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named ‘results’ that must be created by the user in
       their local directory to where the playbook is run.

PARAMETERS                   *cnos_backup-parameters*

     Parameter     Choices/Defaults                                                                              Comments
                    Choices:
                    • running-config
   configType       • startup-config This specifies what type of configuration will be backed up. The choices are the running or startup configurations. There is no default value, so it will result
   - / required                      in an error if the input is incorrect.
                  Default:
                  null
                    Choices:
                    • g8272_cnos
                    • g8296_cnos
   deviceType       • g8332_cnos
   string /         • NE0152T        This specifies the type of device where the method is executed. The choices NE1072T,NE1032,NE1032T,NE10032,NE2572 are added since Ansible 2.4. The choice
   required         • NE1072T        NE0152T is added since 2.8
                    • NE1032
                    • NE1032T
                    • NE10032
                    • NE2572
   enablePassword                    Configures the password used to enter Global Configuration command mode on the switch. If the switch does not request this password, the parameter is
   string                            ignored.While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not
                                     specified, no default value will be used.
   host                              This is the variable used to search the hosts file at /etc/ansible/hosts and identify the IP address of the device on which the template is going to be applied.
   string /                          Usually the Ansible keyword {{ inventory_hostname }} is specified in the playbook as an abstraction of the group of network elements that need to be configured.
   required
   outputfile                        This specifies the file path where the output of each command execution is saved. Each command that is specified in the merged template file and each response
   string /                          from the device are saved here. Usually the location is the results folder, but you can choose another location based on your write permission.
   required
   password                          Configures the password used to authenticate the connection to the remote device. The value of the password parameter is used to authenticate the SSH session.
   string /                          While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not specified, no
   required                          default value will be used.
                    Choices:
                    • SFTP
                    • SCP
   protocol         • FTP            This refers to the protocol used by the network device to interact with the remote server to where to upload the backup configuration. The choices are FTP,
   - / required     • TFTP           SFTP, TFTP, or SCP. Any other protocols will result in error. If this parameter is not specified, there is no default value to be used.

                  Default:
                  null
   rcpath         Default:           This specifies the full file path where the configuration file will be copied on the remote server. In case the relative path is used as the variable value, the
   - / required   null               root folder for the user of the server needs to be specified.
   rcserverip     Default:           -This specifies the IP Address of the remote server to where the configuration will be backed up.
   - / required   null
   serverpassword Default:           Specify the password for the server relating to the protocol used.
   - / required   null
   serverusername Default:           Specify the username for the server relating to the protocol used.
   - / required   null
   username                          Configures the username used to authenticate the connection to the remote device. The value of the username parameter is used to authenticate the SSH session.
   string /                          While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not specified, no
   required                          default value will be used.

NOTES                   *cnos_backup-notes*

   Note

     • For more information on using Ansible to manage Lenovo Network devices see https://www.ansible.com/ansible-lenovo.

EXAMPLES                   *cnos_backup-examples*

 Tasks : The following are examples of using the module cnos_backup.
  These are written in the main.yml file of the tasks directory.
 ---
 - name: Test Running Config Backup
   cnos_backup:
       deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
       outputfile: "./results/test_backup_{{ inventory_hostname }}_output.txt"
       configType: running-config
       protocol: "sftp"
       serverip: "10.241.106.118"
       rcpath: "/root/cnos/G8272-running-config.txt"
       serverusername: "root"
       serverpassword: "root123"

 - name: Test Startup Config Backup
   cnos_backup:
       deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
       outputfile: "./results/test_backup_{{ inventory_hostname }}_output.txt"
       configType: startup-config
       protocol: "sftp"
       serverip: "10.241.106.118"
       rcpath: "/root/cnos/G8272-startup-config.txt"
       serverusername: "root"
       serverpassword: "root123"

 - name: Test Running Config Backup -TFTP
   cnos_backup:
       deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
       outputfile: "./results/test_backup_{{ inventory_hostname }}_output.txt"
       configType: running-config
       protocol: "tftp"
       serverip: "10.241.106.118"
       rcpath: "/anil/G8272-running-config.txt"
       serverusername: "root"
       serverpassword: "root123"

 - name: Test Startup Config Backup - TFTP
   cnos_backup:
       deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
       outputfile: "./results/test_backup_{{ inventory_hostname }}_output.txt"
       configType: startup-config
       protocol: "tftp"
       serverip: "10.241.106.118"
       rcpath: "/anil/G8272-startup-config.txt"
       serverusername: "root"
       serverpassword: "root123"

RETURN VALUES                   *cnos_backup-return values*

   Common return values are documented here, the following are the fields unique to this module:

    Key   Returned                                                                                    Description
   msg             Success or failure message
   string always   Sample:
                   Config file transferred to server

STATUS                   *cnos_backup-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Anil Kumar Muraleedharan (@amuraleedhar)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *cnos_backup-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/cnos_backup_module.html
