SYNOPSIS                   *openssh_keypair*

     • This module allows one to (re)generate OpenSSH private and public keys. It uses ssh-keygen to generate keys. One can generate rsa, dsa, rsa1, ed25519 or ecdsa private keys.

REQUIREMENTS                   *openssh_keypair-requirements*

   The below requirements are needed on the host that executes this module.

     • ssh-keygen

PARAMETERS                   *openssh_keypair-parameters*

     Parameter   Choices/Defaults                                                                              Comments
                                  The attributes the resulting file or directory should have.
   attributes                     To get supported flags look at the man page for chattr on the target system.
   string                         This string should contain the attributes in the same order as the one displayed by lsattr.
                                  The = operator is assumed as default, otherwise + or - operators need to be included in the string.
                                  aliases: attr
   comment
   string                         Provides a new comment to the public key. When checking if the key is in the correct state this will be ignored.
   added in 2.9
   force           Choices:
   boolean         • no ←         Should the key be regenerated even if it already exists
                   • yes
   group                          Name of the group that should own the file/directory, as would be fed to chown.
   string
                                  The permissions the resulting file or directory should have.
                                  For those used to /usr/bin/chmod remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an
   mode                           octal number (like 0644 or 01777) or quote it (like '644' or '1777') so Ansible receives a string and can do its own conversion from string into number.
   string                         Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
                                  As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r).
                                  As of Ansible 2.6, the mode may also be the special string preserve.
                                  When set to preserve the file will be given the same permissions as the source file.
   owner                          Name of the user that should own the file/directory, as would be fed to chown.
   string
   path
   path /                         Name of the files containing the public and private key. The file containing the public key will have the extension .pub.
   required
   selevel       Default:         The level part of the SELinux file context.
   string        "s0"             This is the MLS/MCS attribute, sometimes known as the range.
                                  When set to _default, it will use the level portion of the policy if available.
   serole                         The role part of the SELinux file context.
   string                         When set to _default, it will use the role portion of the policy if available.
   setype                         The type part of the SELinux file context.
   string                         When set to _default, it will use the type portion of the policy if available.
   seuser                         The user part of the SELinux file context.
   string                         By default it uses the system policy, where applicable.
                                  When set to _default, it will use the user portion of the policy if available.
                                  Specifies the number of bits in the private key to create. For RSA keys, the minimum size is 1024 bits and the default is 4096 bits. Generally, 2048 bits is
   size                           considered sufficient. DSA keys must be exactly 1024 bits as specified by FIPS 186-2. For ECDSA keys, size determines the key length by selecting from one of three
   integer                        elliptic curve sizes: 256, 384 or 521 bits. Attempting to use bit lengths other than these three values for ECDSA keys will cause this module to fail. Ed25519 keys
                                  have a fixed length and the size will be ignored.
   state           Choices:
   string          • present ←    Whether the private and public keys should exist or not, taking action if the state is different from what is stated.
                   • absent
                   Choices:
                   • rsa ←
   type            • dsa          The algorithm used to generate the SSH private key. rsa1 is for protocol version 1. rsa1 is deprecated and may not be supported by every version of ssh-keygen.
   string          • rsa1
                   • ecdsa
                   • ed25519
                                  Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
                                  By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just
   unsafe_writes   Choices:       broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an
   boolean         • no ←         unsafe manner.
                   • yes          This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe
                                  writes).
                                  IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.

EXAMPLES                   *openssh_keypair-examples*

 # Generate an OpenSSH keypair with the default values (4096 bits, rsa)
 - openssh_keypair:
     path: /tmp/id_ssh_rsa

 # Generate an OpenSSH rsa keypair with a different size (2048 bits)
 - openssh_keypair:
     path: /tmp/id_ssh_rsa
     size: 2048

 # Force regenerate an OpenSSH keypair if it already exists
 - openssh_keypair:
     path: /tmp/id_ssh_rsa
     force: True

 # Generate an OpenSSH keypair with a different algorithm (dsa)
 - openssh_keypair:
     path: /tmp/id_ssh_dsa
     type: dsa

RETURN VALUES                   *openssh_keypair-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key          Returned                                                                                  Description
   comment                        The comment of the generated key
   string      changed or success Sample:
                                  [email protected]
   filename                       Path to the generated SSH private key file
   string      changed or success Sample:
                                  /tmp/id_ssh_rsa
   fingerprint                    The fingerprint of the key.
   string      changed or success Sample:
                                  SHA256:r4YCZxihVjedH2OlfjVGI6Y5xAYtdCwk8VxKyzVyYfM
   public_key                     The public key of the generated SSH private key
   string      changed or success Sample:
                                  ssh-rsa AAAAB3Nza(...omitted...)veL4E3Xcw== test_key
   size                           Size (in bits) of the SSH private key
   integer     changed or success Sample:
                                  4096
   type                           Algorithm used to generate the SSH private key
   string      changed or success Sample:
                                  rsa

STATUS                   *openssh_keypair-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • David Kainz (@lolcube)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *openssh_keypair-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/openssh_keypair_module.html
