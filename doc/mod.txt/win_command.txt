SYNOPSIS                   *win_command*

     • The win_command module takes the command name followed by a list of space-delimited arguments.
     • The given command will be executed on all selected nodes. It will not be processed through the shell, so variables like $env:HOME and operations like "<", ">", "|", and ";" will not work
       (use the win_shell module if you need these features).
     • For non-Windows targets, use the command module instead.

PARAMETERS                   *win_command-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   chdir                              Set the specified path as the current working directory before executing a command.
   path
   creates                            A path or path filter pattern; when the referenced path exists on the target host, the task will be skipped.
   path
   free_form                          The win_command module takes a free form command to run.
   string / required                  There is no parameter actually named 'free form'. See the examples!
   removes                            A path or path filter pattern; when the referenced path does not exist on the target host, the task will be skipped.
   path
   stdin
   string                             Set the stdin of the command directly to the specified value.
   added in 2.5

NOTES                   *win_command-notes*

   Note

     • If you want to run a command through a shell (say you are using <, >, |, etc), you actually want the win_shell module instead. The win_command module is much more secure as it’s not affected
       by the user’s environment.
     • creates, removes, and chdir can be specified after the command. For instance, if you only want to run a command if a certain file does not exist, use this.

SEE ALSO                   *win_command-see also*

   See also

   command – Execute commands on targets
   The official documentation on the command module.

   psexec – Runs commands on a remote Windows host based on the PsExec model
   The official documentation on the psexec module.

   raw – Executes a low-down and dirty command
   The official documentation on the raw module.

   win_psexec – Runs commands (remotely) as another (privileged) user
   The official documentation on the win_psexec module.

   win_shell – Execute shell commands on target hosts
   The official documentation on the win_shell module.

EXAMPLES                   *win_command-examples*

 - name: Save the result of 'whoami' in 'whoami_out'
   win_command: whoami
   register: whoami_out

 - name: Run command that only runs if folder exists and runs from a specific folder
   win_command: wbadmin -backupTarget:C:\backup\
   args:
     chdir: C:\somedir\
     creates: C:\backup\

 - name: Run an executable and send data to the stdin for the executable
   win_command: powershell.exe -
   args:
     stdin: Write-Host test

RETURN VALUES                   *win_command-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key      Returned                                                                                 Description
   cmd                   The command executed by the task
   string       always   Sample:
                         rabbitmqctl join_cluster [email protected]
   delta                 The command execution delta time
   string       always   Sample:
                         0:00:00.325771
   end                   The command execution end time
   string       always   Sample:
                         2016-02-25 09:18:26.755339
   msg                   changed
   boolean      always   Sample:
                         True
   rc           always   The command return code (0 means success)
   integer
   start                 The command execution start time
   string       always   Sample:
                         2016-02-25 09:18:26.429568
   stderr                The command standard error
   string       always   Sample:
                         ls: cannot access foo: No such file or directory
   stdout                The command standard output
   string       always   Sample:
                         Clustering node [email protected] with [email protected] ...
   stdout_lines          The command standard output split in lines
   list         always   Sample:
                         ["u'Clustering node [email protected] with [email protected] ...'"]

STATUS                   *win_command-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Core Team. [core]

RED HAT SUPPORT                   *win_command-red hat support*

     • Matt Davis (@nitzmahone)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *win_command-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/win_command_module.html
