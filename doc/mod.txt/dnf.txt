SYNOPSIS                   *dnf*

     • Installs, upgrade, removes, and lists packages and groups with the dnf package manager.

REQUIREMENTS                   *dnf-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • python-dnf
     • for the autoremove option you need dnf >= 2.0.1”

PARAMETERS                   *dnf-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   allow_downgrade     Choices:       Specify if the named package and version is allowed to downgrade a maybe already installed higher version of that package. Note that setting
   boolean             • no ←         allow_downgrade=True can make this module behave in a non-idempotent way. The task could end up with a set of packages that does not match the complete list of
   added in 2.7        • yes          specified packages to install (because dependencies between the downgraded package and others can cause changes to the packages which were in the earlier
                                      transaction).
   autoremove          Choices:       If yes, removes all "leaf" packages from the system that were originally installed as dependencies of user-installed packages but which are no longer required
   boolean             • no ←         by any such package. Should be used alone or when state is absent
   added in 2.4        • yes
   bugfix              Choices:
   boolean             • no ←         If set to yes, and state=latest then only installs updates that have been marked bugfix related.
   added in 2.7        • yes
   conf_file                          The remote dnf configuration file to use for the transaction.
   -
   disable_excludes                   Disable the excludes defined in DNF config files.
   -                                  If set to all, disables all excludes.
   added in 2.7                       If set to main, disable excludes defined in [main] in dnf.conf.
                                      If set to repoid, disable excludes defined for given repo id.
   disable_gpg_check   Choices:
   boolean             • no ←         Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is present or latest.
                       • yes
   disable_plugin
   -                                  Plugin name to disable for the install/update operation. The disabled plugins will not persist beyond the transaction.
   added in 2.7
   disablerepo                        Repoid of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos,
   -                                  separate them with a ",".
   download_dir                       Specifies an alternate directory to store packages.
   string                             Has an effect only if download_only is specified.
   added in 2.8
   download_only       Choices:
   boolean             • no ←         Only download the packages, do not install them.
   added in 2.7        • yes
   enable_plugin
   -                                  Plugin name to enable for the install/update operation. The enabled plugin will not persist beyond the transaction.
   added in 2.7
   enablerepo                         Repoid of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos,
   -                                  separate them with a ",".
   exclude
   -                                  Package name(s) to exclude when state=present, or latest. This can be a list or a comma separated string.
   added in 2.7
   install_repoquery   Choices:
   boolean             • no           This is effectively a no-op in DNF as it is not needed with DNF, but is an accepted parameter for feature parity/compatibility with the yum module.
   added in 2.7        • yes ←
   install_weak_deps   Choices:
   boolean             • no           Will also install all packages linked by a weak dependency relation.
   added in 2.8        • yes ←
   installroot       Default:         Specifies an alternative installroot, relative to which all packages will be installed.
   -                 "/"
   list                               Various (non-idempotent) commands for usage with /usr/bin/ansible and not playbooks. See examples.
   -
   lock_timeout      Default:
   integer           30               Amount of time to wait for the dnf lockfile to be freed.
   added in 2.8
   name                               A package name or package specifier with version, like name-1.0. When using state=latest, this can be '"' which means run: dnf -y update. You can also pass a
   list /                             url or a local path to a rpm file. To operate on several packages this can accept a comma separated string of packages or a list of packages.
   elements=string /                  aliases: pkg
   required
   releasever
   -                                  Specifies an alternative release from which all packages will be installed.
   added in 2.6
   security            Choices:
   boolean             • no ←         If set to yes, and state=latest then only installs updates that have been marked security related.
   added in 2.7        • yes
   skip_broken         Choices:
   boolean             • no ←         Skip packages with broken dependencies(devsolve) and are causing problems.
   added in 2.7        • yes
                       Choices:
                       • absent
   state               • present      Whether to install (present, latest), or remove (absent) a package.
   -                   • installed    Default is None, however in effect the default action is present unless the autoremove option is enabled for this module, then absent is inferred.
                       • removed
                       • latest
   update_cache        Choices:       Force dnf to check if cache is out of date and redownload if needed. Has an effect only if state is present or latest.
   boolean             • no ←         aliases: expire-cache
   added in 2.7        • yes
   update_only         Choices:       When using latest, only update installed packages. Do not install packages.
   boolean             • no ←         Has an effect only if state is latest
   added in 2.7        • yes
   validate_certs      Choices:       This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to no, the SSL certificates will not be validated.
   boolean             • no           This should only set to no used on personally controlled sites using self-signed certificates as it avoids verifying the source site.
   added in 2.7        • yes ←

NOTES                   *dnf-notes*

   Note

     • When used with a loop: each package will be processed individually, it is much more efficient to pass the list directly to the name option.
     • Group removal doesn’t work if the group was installed with Ansible because upstream dnf’s API doesn’t properly mark groups as installed, therefore upon removal the module is unable to detect
       that the group is installed (https://bugzilla.redhat.com/show_bug.cgi?id=1620324)

EXAMPLES                   *dnf-examples*

 - name: install the latest version of Apache
   dnf:
     name: httpd
     state: latest

 - name: install the latest version of Apache and MariaDB
   dnf:
     name:
       - httpd
       - mariadb-server
     state: latest

 - name: remove the Apache package
   dnf:
     name: httpd
     state: absent

 - name: install the latest version of Apache from the testing repo
   dnf:
     name: httpd
     enablerepo: testing
     state: present

 - name: upgrade all packages
   dnf:
     name: """
     state: latest

 - name: install the nginx rpm from a remote repo
   dnf:
     name: 'http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm'
     state: present

 - name: install nginx rpm from a local file
   dnf:
     name: /usr/local/src/nginx-release-centos-6-0.el6.ngx.noarch.rpm
     state: present

 - name: install the 'Development tools' package group
   dnf:
     name: '@Development tools'
     state: present

 - name: Autoremove unneeded packages installed as dependencies
   dnf:
     autoremove: yes

 - name: Uninstall httpd but keep its dependencies
   dnf:
     name: httpd
     state: absent
     autoremove: no

 - name: install a modularity appstream with defined stream and profile
   dnf:
     name: '@postgresql:9.6/client'
     state: present

 - name: install a modularity appstream with defined stream
   dnf:
     name: '@postgresql:9.6'
     state: present

 - name: install a modularity appstream with defined profile
   dnf:
     name: '@postgresql/client'
     state: present

STATUS                   *dnf-status*

     • This module is guaranteed to have backward compatible interface changes going forward. [stableinterface]
     • This module is maintained by the Ansible Core Team. [core]

RED HAT SUPPORT                   *dnf-red hat support*

     • Igor Gnatenko (@ignatenkobrain) <i.gnatenko.brain@gmail.com>
     • Cristian van Ee (@DJMuggs) <cristian at cvee.org>
     • Berend De Schouwer (@berenddeschouwer)
     • Adam Miller (@maxamillion) <admiller@redhat.com>

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *dnf-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/dnf_module.html
