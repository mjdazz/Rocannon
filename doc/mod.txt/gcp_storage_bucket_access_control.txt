SYNOPSIS                   *gcp_storage_bucket_access_control*

     • The BucketAccessControls resource represents the Access Control Lists (ACLs) for buckets within Google Cloud Storage. ACLs let you specify who has access to your data and to what extent.
     • There are three roles that can be assigned to an entity: READERs can get the bucket, though no acl property will be returned, and list the bucket’s objects. WRITERs are READERs, and they can
       insert objects into the bucket and delete the bucket’s objects. OWNERs are WRITERs, and they can get the acl property of a bucket, update a bucket, and call all BucketAccessControls methods
       on the bucket. For more information, see Access Control, with the caveat that this API uses READER, WRITER, and OWNER instead of READ, WRITE, and FULL_CONTROL.

REQUIREMENTS                   *gcp_storage_bucket_access_control-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_storage_bucket_access_control-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
                                               The name of the bucket.
   bucket                                      This field represents a link to a Bucket resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value
   dictionary / required                       of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_storage_bucket task and then set this bucket field to "{{
                                               name-of-resource }}"
                                               The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain
   entity                                      project-team-projectId allUsers allAuthenticatedUsers Examples: The user [email protected] would be [email protected]
   string / required                           The group [email protected] would be [email protected]
                                               To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
   entity_id                                   The ID for the entity.
   string
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
   project                                     The Google Cloud Platform project to use.
   string
   project_team                                The project team associated with the entity.
   dictionary
         project_number                        The project team associated with the entity.
         string
         team                                  The team.
         string                                Some valid choices include: "editors", "owners", "viewers"
   role                                        The access permission for the entity.
   string                                      Some valid choices include: "OWNER", "READER", "WRITER"
   scopes                                      Array of scopes to be used.
   list
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                      Choices:
   string                     • present ←      Whether the given object should exist in GCP
                              • absent

NOTES                   *gcp_storage_bucket_access_control-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_storage_bucket_access_control-examples*

 - name: create a bucket
   gcp_storage_bucket:
     name: "{{ resource_name }}"
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: bucket

 - name: create a bucket access control
   gcp_storage_bucket_access_control:
     bucket: "{{ bucket }}"
     entity: [email protected]
     role: WRITER
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_storage_bucket_access_control-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key       Returned                                                                                Description
   bucket          success  The name of the bucket.
   dictionary
   domain          success  The domain associated with the entity.
   string
   email           success  The email address associated with the entity.
   string
                            The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers
   entity          success  allAuthenticatedUsers Examples: The user [email protected] would be [email protected]
   string                   The group [email protected] would be [email protected]
                            To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
   entityId        success  The ID for the entity.
   string
   id              success  The ID of the access-control entry.
   string
   projectTeam     success  The project team associated with the entity.
   complex
     projectNumber success  The project team associated with the entity.
     string
     team          success  The team.
     string
   role            success  The access permission for the entity.
   string

STATUS                   *gcp_storage_bucket_access_control-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_storage_bucket_access_control-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_storage_bucket_access_control_module.html
