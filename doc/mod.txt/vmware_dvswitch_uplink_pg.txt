SYNOPSIS                   *vmware_dvswitch_uplink_pg*

     • This module can be used to configure the uplink portgroup of a Distributed Switch.

REQUIREMENTS                   *vmware_dvswitch_uplink_pg-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • PyVmomi

PARAMETERS                   *vmware_dvswitch_uplink_pg-parameters*

       Parameter               Choices/Defaults                                                                            Comments
                                                          Dictionary which configures the advanced policy settings for the uplink portgroup.
                     Default:                             Valid attributes are:
                     {"block_override": true,             - port_config_reset_at_disconnect (bool): indicates if the configuration of a port is reset automatically after disconnect. (default: true)
   advanced          "netflow_override": false,           - block_override (bool): indicates if the block policy can be changed per port. (default: true)
   dictionary        "port_config_reset_at_disconnect":   - netflow_override (bool): indicates if the NetFlow policy can be changed per port. (default: false)
                     true, "traffic_filter_override":     - traffic_filter_override (bool): indicates if the traffic filter can be changed per port. (default: false)
                     false, "vendor_config_override":     - vendor_config_override (bool): indicates if the vendor config can be changed per port. (default: false)
                     false, "vlan_override": false}       - vlan_override (bool): indicates if the vlan can be changed per port. (default: false)
                                                          aliases: port_policy
   block_all_ports     Choices:
   boolean             • no ←                             Indicates if all ports are blocked on the uplink portgroup.
                       • yes
   description                                            The description of the uplink portgroup.
   string
   hostname                                               The hostname or IP address of the vSphere vCenter or ESXi server.
   string                                                 If the value is not specified in the task, the value of environment variable VMWARE_HOST will be used instead.
                                                          Environment variable support added in Ansible 2.6.
                                                          Dictionary which configures the LACP settings for the uplink portgroup.
   lacp              Default:                             The options are only used if the LACP support mode is set to 'basic'.
   dictionary        {"mode": "passive", "status":        The following parameters are required:
                     "disabled"}                          - status (str): Indicates if LACP is enabled. (default: disabled)
                                                          - mode (str): The negotiating state of the uplinks/ports. (default: passive)
   name                                                   The name of the uplink portgroup.
   string                                                 The current name will be used if not specified.
   netflow_enabled     Choices:
   boolean             • no ←                             Indicates if NetFlow is enabled on the uplink portgroup.
                       • yes
                                                          The password of the vSphere vCenter or ESXi server.
   password                                               If the value is not specified in the task, the value of environment variable VMWARE_PASSWORD will be used instead.
   string                                                 Environment variable support added in Ansible 2.6.
                                                          aliases: pass, pwd
   port              Default:                             The port number of the vSphere vCenter or ESXi server.
   integer           443                                  If the value is not specified in the task, the value of environment variable VMWARE_PORT will be used instead.
   added in 2.5                                           Environment variable support added in Ansible 2.6.
   proxy_host                                             Address of a proxy that will receive all HTTPS requests and relay them.
   string                                                 The format is a hostname or a IP.
   added in 2.9                                           If the value is not specified in the task, the value of environment variable VMWARE_PROXY_HOST will be used instead.
                                                          This feature depends on a version of pyvmomi greater than v6.7.1.2018.12
   proxy_port                                             Port of the HTTP proxy that will receive all HTTPS requests and relay them.
   integer                                                If the value is not specified in the task, the value of environment variable VMWARE_PROXY_PORT will be used instead.
   added in 2.9
   switch                                                 The name of the Distributed Switch.
   string / required                                      aliases: dvswitch
                                                          The username of the vSphere vCenter or ESXi server.
   username                                               If the value is not specified in the task, the value of environment variable VMWARE_USER will be used instead.
   string                                                 Environment variable support added in Ansible 2.6.
                                                          aliases: admin, user
                       Choices:                           Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted.
   validate_certs      • no                               If the value is not specified in the task, the value of environment variable VMWARE_VALIDATE_CERTS will be used instead.
   boolean             • yes ←                            Environment variable support added in Ansible 2.6.
                                                          If set to yes, please make sure Python >= 2.7.9 is installed on the given machine.
   vlan_trunk_range  Default:                             The VLAN trunk range that should be configured with the uplink portgroup.
   list              ["0-4094"]                           This can be a combination of multiple ranges and numbers, example: [ 2-3967, 4049-4092 ].

NOTES                   *vmware_dvswitch_uplink_pg-notes*

   Note

     • Tested on vSphere 6.5 and 6.7

EXAMPLES                   *vmware_dvswitch_uplink_pg-examples*

 - name: Configure Uplink portgroup
   vmware_dvswitch_uplink_pg:
     hostname: '{{ inventory_hostname }}'
     username: '{{ vcsa_username }}'
     password: '{{ vcsa_password }}'
     switch: dvSwitch
     name: dvSwitch-DVUplinks
     advanced:
       port_config_reset_at_disconnect: True
       block_override: True
       vendor_config_override: False
       vlan_override: False
       netflow_override: False
       traffic_filter_override: False
     vlan_trunk_range:
       - '0-4094'
     netflow_enabled: False
     block_all_ports: False
   delegate_to: localhost

 - name: Enabled LACP on Uplink portgroup
   vmware_dvswitch_uplink_pg:
     hostname: '{{ inventory_hostname }}'
     username: '{{ vcsa_username }}'
     password: '{{ vcsa_password }}'
     switch: dvSwitch
     lacp:
       status: enabled
       mode: active
   delegate_to: localhost

RETURN VALUES                   *vmware_dvswitch_uplink_pg-return values*

   Common return values are documented here, the following are the fields unique to this module:

    Key   Returned                                                                                    Description
                   information about performed operation
   result          Sample:
   string always   {'adv_block_ports': True, 'adv_netflow': False, 'adv_reset_at_disconnect': True, 'adv_traffic_filtering': False, 'adv_vendor_conf': False, 'adv_vlan': False, 'block_all_ports':
                   False, 'changed': False, 'description': None, 'dvswitch': 'dvSwitch', 'lacp_status': 'disabled', 'lacp_status_previous': 'enabled', 'name': 'dvSwitch-DVUplinks',
                   'netflow_enabled': False, 'result': 'Uplink portgroup already configured properly', 'vlan_trunk_range': ['2-3967', '4049-4092']}

STATUS                   *vmware_dvswitch_uplink_pg-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Christian Kotte (@ckotte)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *vmware_dvswitch_uplink_pg-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/vmware_dvswitch_uplink_pg_module.html
