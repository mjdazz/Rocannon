SYNOPSIS                   *rax_meta*

     • Manipulate metadata for Rackspace Cloud Servers

REQUIREMENTS                   *rax_meta-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • pyrax

PARAMETERS                   *rax_meta-parameters*

     Parameter                   Choices/Defaults                                                                              Comments
   address                                                        Server IP address to modify metadata for, will match any IP assigned to the server
   -
   api_key                                                        Rackspace API key, overrides credentials.
   -                                                              aliases: password
   auth_endpoint  Default:                                        The URI of the authentication service.
   -              "https://identity.api.rackspacecloud.com/v2.0/"
   credentials                                                    File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   -                                                              aliases: creds_file
   env                                                            Environment as configured in ~/.pyrax.cfg, see
   -                                                              https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   id                                                             Server ID to modify metadata for
   -
   identity_type  Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -              "rackspace"
   meta                                                           A hash of metadata to associate with the instance
   -
   name                                                           Server name to modify metadata for
   -
   region         Default:                                        Region to create an instance in.
   -              "DFW"
   tenant_id                                                      The tenant ID used for authentication.
   -
   tenant_name                                                    The tenant name used for authentication.
   -
   username                                                       Rackspace username, overrides credentials.
   -
   validate_certs   Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean          • no                                          aliases: verify_ssl
                    • yes

NOTES                   *rax_meta-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_meta-examples*

 - name: Set metadata for a server
   hosts: all
   gather_facts: False
   tasks:
     - name: Set metadata
       local_action:
         module: rax_meta
         credentials: ~/.raxpub
         name: "{{ inventory_hostname }}"
         region: DFW
         meta:
           group: primary_group
           groups:
             - group_two
             - group_three
           app: my_app

     - name: Clear metadata
       local_action:
         module: rax_meta
         credentials: ~/.raxpub
         name: "{{ inventory_hostname }}"
         region: DFW

STATUS                   *rax_meta-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Matt Martz (@sivel)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_meta-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_meta_module.html
