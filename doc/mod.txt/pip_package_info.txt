SYNOPSIS                   *pip_package_info*

     • Return information about installed pip packages

REQUIREMENTS                   *pip_package_info-requirements*

   The below requirements are needed on the host that executes this module.

     • The requested pip executables must be installed on the target.

PARAMETERS                   *pip_package_info-parameters*

   Parameter Choices/Defaults                                                                                Comments
   clients   Default:         A list of the pip executables that will be used to get the packages. They can be supplied with the full path or just the executable name, i.e `pip3.7`.
   list      ["pip"]

EXAMPLES                   *pip_package_info-examples*

 - name: Just get the list from default pip
   pip_package_info:

 - name: get the facts for default pip, pip2 and pip3.6
   pip_package_info:
     clients: ['pip', 'pip2', 'pip3.6']

 - name: get from specific paths (virtualenvs?)
   pip_package_info:
     clients: '/home/me/projec42/python/pip3.5'

RETURN VALUES                   *pip_package_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key      Returned                                                                                 Description
   packages     always   a dictionary of installed package data
   dictionary
                         A dictionary with each pip client which then contains a list of dicts with python package information
     python     always   Sample:
     dictionary          {'packages': {'pip': {'Babel': [{'name': 'Babel', 'source': 'pip', 'version': '2.6.0'}], 'Flask': [{'name': 'Flask', 'source': 'pip', 'version': '1.0.2'}],
                         'Flask-SQLAlchemy': [{'name': 'Flask-SQLAlchemy', 'source': 'pip', 'version': '2.3.2'}], 'Jinja2': [{'name': 'Jinja2', 'source': 'pip', 'version': '2.10'}]}}}

STATUS                   *pip_package_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Matthew Jones (@matburt)
     • Brian Coca (@bcoca)
     • Adam Miller (@maxamillion)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *pip_package_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/pip_package_info_module.html
