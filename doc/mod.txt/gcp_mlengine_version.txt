SYNOPSIS                   *gcp_mlengine_version*

     • Each version is a trained model deployed in the cloud, ready to handle prediction requests. A model can have multiple versions .

REQUIREMENTS                   *gcp_mlengine_version-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_mlengine_version-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   auto_scaling                                Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up
   dictionary                                  traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes.
            min_nodes                          The minimum number of nodes to allocate for this mode.
            integer
   deployment_uri                              The Cloud Storage location of the trained model used to create the version.
   string / required
   description                                 The description specified for the version when it was created.
   string
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
   framework                                   The machine learning framework AI Platform uses to train this version of the model.
   string                                      Some valid choices include: "FRAMEWORK_UNSPECIFIED", "TENSORFLOW", "SCIKIT_LEARN", "XGBOOST"
   is_default                 Choices:         If true, this version will be used to handle prediction requests that do not specify a version.
   boolean                    • no             aliases: default
                              • yes
   labels                                      One or more labels that you can add, to organize your model versions.
   dictionary
   machine_type                                The type of machine on which to serve the model. Currently only applies to online prediction service.
   string                                      Some valid choices include: "mls1-c1-m2", "mls1-c4-m2"
   manual_scaling                              Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this
   dictionary                                  option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of
                                               the system to serve it based on the selected number of nodes.
            nodes                              The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed.
            integer
                                               The model that this version belongs to.
   model                                       This field represents a link to a Model resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value
   dictionary / required                       of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_mlengine_model task and then set this model field to "{{
                                               name-of-resource }}"
   name                                        The name specified for the version when it was created.
   string / required                           The version name must be unique within the model it is created in.
   prediction_class                            The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module
   string                                      containing this class should be included in a package provided to the packageUris field.
   project                                     The Google Cloud Platform project to use.
   string
   python_version                              The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and
   string                                      above. Python '2.7' works with all supported runtime versions.
                                               Some valid choices include: "2.7", "3.5"
   runtime_version                             The AI Platform runtime version to use for this deployment.
   string
   scopes                                      Array of scopes to be used.
   list
   service_account                             Specifies the service account for resource access control.
   string
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                      Choices:
   string                     • present ←      Whether the given object should exist in GCP
                              • absent

NOTES                   *gcp_mlengine_version-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_mlengine_version-examples*

 - name: create a model
   gcp_mlengine_model:
     name: model_version
     description: My model
     regions:
     - us-central1
     online_prediction_logging: 'true'
     online_prediction_console_logging: 'true'
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: model

 - name: create a version
   gcp_mlengine_version:
     name: "{{ resource_name | replace('-', '_') }}"
     model: "{{ model }}"
     runtime_version: 1.13
     python_version: 3.5
     is_default: 'true'
     deployment_uri: gs://ansible-cloudml-bucket/
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_mlengine_version-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key       Returned                                                                                Description
   autoScaling     success  Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to
   complex                  the model's ability to scale or you will start seeing increases in latency and 429 response codes.
        minNodes   success  The minimum number of nodes to allocate for this mode.
        integer
   createTime      success  The time the version was created.
   string
   deploymentUri   success  The Cloud Storage location of the trained model used to create the version.
   string
   description     success  The description specified for the version when it was created.
   string
   errorMessage    success  The details of a failure or cancellation.
   string
   framework       success  The machine learning framework AI Platform uses to train this version of the model.
   string
   isDefault       success  If true, this version will be used to handle prediction requests that do not specify a version.
   boolean
   labels          success  One or more labels that you can add, to organize your model versions.
   dictionary
   lastUseTime     success  The time the version was last used for prediction.
   string
   machineType     success  The type of machine on which to serve the model. Currently only applies to online prediction service.
   string
   manualScaling            Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is available
   complex         success  if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the
                            selected number of nodes.
        nodes      success  The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed.
        integer
   model           success  The model that this version belongs to.
   dictionary
   name            success  The name specified for the version when it was created.
   string                   The version name must be unique within the model it is created in.
   packageUris     success  Cloud Storage paths (gs://…) of packages for custom prediction routines or scikit-learn pipelines with custom code.
   list
   predictionClass success  The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class
   string                   should be included in a package provided to the packageUris field.
   pythonVersion   success  The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python '2.7'
   string                   works with all supported runtime versions.
   runtimeVersion  success  The AI Platform runtime version to use for this deployment.
   string
   serviceAccount  success  Specifies the service account for resource access control.
   string
   state           success  The state of a version.
   string

STATUS                   *gcp_mlengine_version-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_mlengine_version-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_mlengine_version_module.html
