SYNOPSIS                   *ec2_eip_info*

     • List details of EC2 Elastic IP addresses.
     • This module was called ec2_eip_facts before Ansible 2.9. The usage did not change.

   Aliases: ec2_eip_facts

REQUIREMENTS                   *ec2_eip_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • boto

PARAMETERS                   *ec2_eip_info-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   filters                      Default:         A dict of filters to apply. Each dict item consists of a filter key and filter value. See
   -                            {}               https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-addresses.html#options for possible filters. Filter names and values are case
                                                 sensitive.
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *ec2_eip_info-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_eip_info-examples*

 # Note: These examples do not set authentication details or the AWS region,
 # see the AWS Guide for details.

 # List all EIP addresses in the current region.
 - ec2_eip_info:
   register: regional_eip_addresses

 # List all EIP addresses for a VM.
 - ec2_eip_info:
     filters:
        instance-id: i-123456789
   register: my_vm_eips

 - debug: msg="{{ my_vm_eips.addresses | json_query("[?private_ip_address=='10.0.0.5']") }}"

 # List all EIP addresses for several VMs.
 - ec2_eip_info:
     filters:
        instance-id:
          - i-123456789
          - i-987654321
   register: my_vms_eips

 # List all EIP addresses using the 'Name' tag as a filter.
 - ec2_eip_info:
     filters:
       tag:Name: www.example.com
   register: my_vms_eips

 # List all EIP addresses using the Allocation-id as a filter
 - ec2_eip_info:
     filters:
       allocation-id: eipalloc-64de1b01
   register: my_vms_eips

 # Set the variable eip_alloc to the value of the first allocation_id
 # and set the variable my_pub_ip to the value of the first public_ip
 - set_fact:
     eip_alloc: my_vms_eips.addresses[0].allocation_id
     my_pub_ip: my_vms_eips.addresses[0].public_ip

RETURN VALUES                   *ec2_eip_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key    Returned                                                                                   Description
                      Properties of all Elastic IP addresses matching the provided filters. Each element is a dict with all the information related to an EIP.
   addresses on       Sample:
   list      success  [{'allocation_id': 'eipalloc-64de1b01', 'association_id': 'eipassoc-0fe9ce90d6e983e97', 'domain': 'vpc', 'instance_id': 'i-01020cfeb25b0c84f', 'network_interface_id':
                      'eni-02fdeadfd4beef9323b', 'network_interface_owner_id': '0123456789', 'private_ip_address': '10.0.0.1', 'public_ip': '54.81.104.1', 'tags': {'Name': 'test-vm-54.81.104.1'}}]

STATUS                   *ec2_eip_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Brad Macpherson (@iiibrad)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_eip_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_eip_info_module.html
