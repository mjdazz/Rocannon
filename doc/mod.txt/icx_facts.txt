SYNOPSIS                   *icx_facts*

     • Collects a base set of device facts from a remote device that is running ICX. This module prepends all of the base network fact keys with ansible_net_<fact>. The facts module will always
       collect a base set of facts from the device and can enable or disable collection of additional facts.

PARAMETERS                   *icx_facts-parameters*

     Parameter   Choices/Defaults                                                                              Comments
   gather_subset Default:         When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all, hardware, config, and interfaces.
   list          "!config"        Can specify a list of values to include a larger subset. Values can also be used with an initial ! to specify that a specific subset should not be collected.

NOTES                   *icx_facts-notes*

   Note

     • Tested against ICX 10.1.
     • For information on using ICX platform, see the ICX OS Platform Options guide.

EXAMPLES                   *icx_facts-examples*

 # Collect all facts from the device
 - icx_facts:
     gather_subset: all

 # Collect only the config and default facts
 - icx_facts:
     gather_subset:
       - config

 # Do not collect hardware facts
 - icx_facts:
     gather_subset:
       - "!hardware"

RETURN VALUES                   *icx_facts-return values*

   Common return values are documented here, the following are the fields unique to this module:

                Key                                  Returned                                                                         Description
   ansible_net_all_ipv4_addresses when interfaces is configured                   All IPv4 addresses configured on the device
   list
   ansible_net_all_ipv6_addresses when interfaces is configured                   All IPv6 addresses configured on the device
   list
   ansible_net_config             when config is configured                       The current active config from the device
   string
   ansible_net_filesystems        when hardware is configured                     All file system names available on the device
   list
   ansible_net_filesystems_info   when hardware is configured                     A hash of all file systems containing info about each file system (e.g. free and total space)
   dictionary
   ansible_net_gather_subset      always                                          The list of fact subsets collected from the device
   list
   ansible_net_hostname           always                                          The configured hostname of the device
   string
   ansible_net_image              always                                          The image file the device is running
   string
   ansible_net_interfaces         when interfaces is configured                   A hash of all interfaces running on the system
   dictionary
   ansible_net_memfree_mb         when hardware is configured                     The available free memory on the remote device in Mb
   integer
   ansible_net_memtotal_mb        when hardware is configured                     The total memory on the remote device in Mb
   integer
   ansible_net_model              always                                          The model name returned from the device
   string
   ansible_net_neighbors          when interfaces is configured                   The list of LLDP neighbors from the remote device
   dictionary
   ansible_net_serialnum          always                                          The serial number of the remote device
   string
   ansible_net_stacked_models     when multiple devices are configured in a stack The model names of each device in the stack
   list
   ansible_net_stacked_serialnums when multiple devices are configured in a stack The serial numbers of each device in the stack
   list
   ansible_net_version            always                                          The operating system version running on the remote device
   string

STATUS                   *icx_facts-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ruckus Wireless (@Commscope)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *icx_facts-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/icx_facts_module.html
