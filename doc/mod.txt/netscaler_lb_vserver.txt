SYNOPSIS                   *netscaler_lb_vserver*

     • Manage load balancing vserver configuration
     • This module is intended to run either on the ansible control node or a bastion (jumpserver) with access to the actual netscaler instance

REQUIREMENTS                   *netscaler_lb_vserver-requirements*

   The below requirements are needed on the host that executes this module.

     • nitro python sdk

PARAMETERS                   *netscaler_lb_vserver-parameters*

               Parameter                Choices/Defaults                                                                    Comments
   appflowlog                           Choices:
   -                                    • enabled           Apply AppFlow logging to the virtual server.
                                        • disabled
   authentication                       Choices:
   boolean                              • no                Enable or disable user authentication.
                                        • yes
                                                            Fully qualified domain name (FQDN) of the authentication virtual server to which the user must be redirected for authentication. Make
   authenticationhost                                       sure that the Authentication parameter is set to yes.
   -                                                        Minimum length = 3
                                                            Maximum length = 252
   authn401                             Choices:
   boolean                              • no                Enable or disable user authentication with HTTP 401 responses.
                                        • yes
   authnprofile                                             Name of the authentication profile to be used when authentication is turned on.
   -
   authnvsname                                              Name of an authentication virtual server with which to authenticate users.
   -                                                        Minimum length = 1
                                                            Maximum length = 252
                                        Choices:
                                        • ROUNDROBIN
                                        • LEASTCONNECTION   Backup load balancing method. Becomes operational if the primary load balancing me
   backuplbmethod                       • LEASTRESPONSETIME thod fails or cannot be used.
   -                                    • SOURCEIPHASH      Valid only if the primary method is based on static proximity.
                                        • LEASTBANDWIDTH
                                        • LEASTPACKETS
                                        • CUSTOMLOAD
   backuppersistencetimeout                                 Time period for which backup persistence is in effect.
   -                                                        Minimum value = 2
                                                            Maximum value = 1440
   bypassaaaa                           Choices:
   boolean                              • no                If this option is enabled while resolving DNS64 query AAAA queries are not sent to back end dns server.
                                        • yes
   cacheable                            Choices:            Route cacheable requests to a cache redirection virtual server. The load balancing virtual server can forward requests only to a
   boolean                              • no                transparent cache redirection virtual server that has an IP address and port combination of ":80, so such a cache redirection virtual
                                        • yes               server must be configured on the appliance.
   clttimeout                                               Idle time, in seconds, after which a client connection is terminated.
   -                                                        Minimum value = 0
                                                            Maximum value = 31536000
   comment                                                  Any comments that you might want to associate with the virtual server.
   -
                                                            Mode in which the connection failover feature must operate for the virtual server. After a failover, established TCP connections and UDP
                                                            packet flows are kept active and resumed on the secondary appliance. Clients remain connected to the same servers. Available settings
                                        Choices:            function as follows:
   connfailover                         • DISABLED          " STATEFUL - The primary appliance shares state information with the secondary appliance, in real time, resulting in some runtime
   -                                    • STATEFUL          processing overhead.
                                        • STATELESS         " STATELESS - State information is not shared, and the new primary appliance tries to re-create the packet flow on the basis of the
                                                            information contained in the packets it receives.
                                                            " DISABLED - Connection failover does not occur.
   cookiename                                               Use this parameter to specify the cookie name for COOKIE persistence type. It specifies the name of cookie with a maximum of 32
   -                                                        characters. If not specified, cookie name is internally generated.
                                                            Length of the token to be extracted from the data segment of an incoming packet, for use in the token method of load balancing. The
   datalength                                               length of the token, specified in bytes, must not be greater than 24 KB. Applicable to virtual servers of type TCP.
   -                                                        Minimum value = 1
                                                            Maximum value = 100
                                                            Offset to be considered when extracting a token from the TCP payload. Applicable to virtual servers, of type TCP, using the token method
   dataoffset                                               of load balancing. Must be within the first 24 KB of the TCP payload.
   -                                                        Minimum value = 0
                                                            Maximum value = 25400
   dbprofilename                                            Name of the DB profile whose settings are to be applied to the virtual server.
   -                                                        Minimum length = 1
                                                            Maximum length = 127
   dbslb                                Choices:
   -                                    • enabled           Enable database specific load balancing for MySQL and MSSQL service types.
                                        • disabled
                                        Choices:            When set to yes the lb vserver will be disabled.
   disabled                             • no ←              When set to no the lb vserver will be enabled.
   boolean                              • yes               Note that due to limitations of the underlying NITRO API a disabled state change alone does not cause the module result to report a
                                                            changed status.
   disableprimaryondown                 Choices:
   -                                    • enabled           If the primary virtual server goes down, do not allow it to return to primary status until manually enabled.
                                        • disabled
   dns64                                Choices:
   -                                    • enabled           This argument is for enabling/disabling the dns64 on lbvserver.
                                        • disabled
                                                            Name of the DNS profile to be associated with the VServer. DNS profile properties will be applied to the transactions processed by a
   dnsprofilename                                           VServer. This parameter is valid only for DNS and DNS-TCP VServers.
   -                                                        Minimum length = 1
                                                            Maximum length = 127
   downstateflush                       Choices:            Flush all active transactions associated with a virtual server whose state transitions from UP to DOWN. Do not enable this option for
   -                                    • enabled           applications that must complete their transactions.
                                        • disabled
   hashlength                                               Number of bytes to consider for the hash value used in the URLHASH and DOMAINHASH load balancing methods.
   -                                                        Minimum value = 1
                                                            Maximum value = 4096
                                                            Threshold in percent of active services below which vserver state is made down. If this threshold is 0, vserver state will be up even if
   healththreshold                                          one bound service is up.
   -                                                        Minimum value = 0
                                                            Maximum value = 100
   httpprofilename                                          Name of the HTTP profile whose settings are to be applied to the virtual server.
   -                                                        Minimum length = 1
                                                            Maximum length = 127
                                                            How the NetScaler appliance responds to ping requests received for an IP address that is common to one or more virtual servers. Available
                                                            settings function as follows:
                                                            " If set to PASSIVE on all the virtual servers that share the IP address, the appliance always responds to the ping requests.
   icmpvsrresponse                      Choices:            " If set to ACTIVE on all the virtual servers that share the IP address, the appliance responds to the ping requests if at least one of
   -                                    • PASSIVE           the virtual servers is UP. Otherwise, the appliance does not respond.
                                        • ACTIVE            " If set to ACTIVE on some virtual servers and PASSIVE on the others, the appliance responds if at least one virtual server with the
                                                            ACTIVE setting is UP. Otherwise, the appliance does not respond.
                                                            Note: This parameter is available at the virtual server level. A similar parameter, ICMP Response, is available at the IP address level,
                                                            for IPv4 addresses of type VIP. To set that parameter, use the add ip command in the CLI or the Create IP dialog box in the GUI.
                                                            Insert an HTTP header, whose value is the IP address and port number of the virtual server, before forwarding a request to the server.
                                                            The format of the header is <vipHeader>: <virtual server IP address>_<port number >, where vipHeader is the name that you specify for the
                                                            header. If the virtual server has an IPv6 address, the address in the header is enclosed in brackets ([ and ]) to separate it from the
                                        Choices:            port number. If you have mapped an IPv4 address to a virtual server's IPv6 address, the value of this parameter determines which IP
   insertvserveripport                  • OFF               address is inserted in the header, as follows:
   -                                    • VIPADDR           " VIPADDR - Insert the IP address of the virtual server in the HTTP header regardless of whether the virtual server has an IPv4 address
                                        • V6TOV4MAPPING     or an IPv6 address. A mapped IPv4 address, if configured, is ignored.
                                                            " V6TOV4MAPPING - Insert the IPv4 address that is mapped to the virtual server's IPv6 address. If a mapped IPv4 address is not
                                                            configured, insert the IPv6 address.
                                                            " OFF - Disable header insertion.
                                                            IP mask, in dotted decimal notation, for the IP Pattern parameter. Can have leading or trailing non-zero octets (for example,
   ipmask                                                   255.255.240.0 or 0.0.255.255). Accordingly, the mask specifies whether the first n bits or the last n bits of the destination IP address
   -                                                        in a client request are to be matched with the corresponding bits in the IP pattern. The former is called a forward mask. The latter is
                                                            called a reverse mask.
                                                            IP address pattern, in dotted decimal notation, for identifying packets to be accepted by the virtual server. The IP Mask parameter
                                                            specifies which part of the destination IP address is matched against the pattern. Mutually exclusive with the IP Address parameter.
                                                            For example, if the IP pattern assigned to the virtual server is 198.51.100.0 and the IP mask is 255.255.240.0 (a forward mask), the
                                                            first 20 bits in the destination IP addresses are matched with the first 20 bits in the pattern. The virtual server accepts requests with
   ippattern                                                IP addresses that range from 198.51.96.1 to 198.51.111.254. You can also use a pattern such as 0.0.2.2 and a mask such as 0.0.255.255 (a
   -                                                        reverse mask).
                                                            If a destination IP address matches more than one IP pattern, the pattern with the longest match is selected, and the associated virtual
                                                            server processes the request. For example, if virtual servers vs1 and vs2 have the same IP pattern, 0.0.100.128, but different IP masks
                                                            of 0.0.255.255 and 0.0.224.255, a destination IP address of 198.51.100.128 has the longest match with the IP pattern of vs1. If a
                                                            destination IP address matches two or more virtual servers to the same extent, the request is processed by the virtual server whose port
                                                            number matches the port number in the request.
   ipv46                                                    IPv4 or IPv6 address to assign to the virtual server.
   -
   l2conn                               Choices:            Use Layer 2 parameters (channel number, MAC address, and VLAN ID) in addition to the 4-tuple (<source IP>:<source port>::<destination
   boolean                              • no                IP>:<destination port>) that is used to identify a connection. Allows multiple TCP and non-TCP connections with the same 4-tuple to
                                        • yes               co-exist on the NetScaler appliance.
                                                            Load balancing method. The available settings function as follows:
                                                            " ROUNDROBIN - Distribute requests in rotation, regardless of the load. Weights can be assigned to services to enforce weighted round
                                                            robin distribution.
                                        Choices:            " LEASTCONNECTION (default) - Select the service with the fewest connections.
                                        • ROUNDROBIN        " LEASTRESPONSETIME - Select the service with the lowest average response time.
                                        • LEASTCONNECTION   " LEASTBANDWIDTH - Select the service currently handling the least traffic.
                                        • LEASTRESPONSETIME " LEASTPACKETS - Select the service currently serving the lowest number of packets per second.
                                        • URLHASH           " CUSTOMLOAD - Base service selection on the SNMP metrics obtained by custom load monitors.
                                        • DOMAINHASH        " LRTM - Select the service with the lowest response time. Response times are learned through monitoring probes. This method also takes
                                        • DESTINATIONIPHASH the number of active connections into account.
                                        • SOURCEIPHASH      Also available are a number of hashing methods, in which the appliance extracts a predetermined portion of the request, creates a hash of
   lbmethod                             • SRCIPDESTIPHASH   the portion, and then checks whether any previous requests had the same hash value. If it finds a match, it forwards the request to the
   -                                    • LEASTBANDWIDTH    service that served those previous requests. Following are the hashing methods:
                                        • LEASTPACKETS      " URLHASH - Create a hash of the request URL (or part of the URL).
                                        • TOKEN             " DOMAINHASH - Create a hash of the domain name in the request (or part of the domain name). The domain name is taken from either the URL
                                        • SRCIPSRCPORTHASH  or the Host header. If the domain name appears in both locations, the URL is preferred. If the request does not contain a domain name,
                                        • LRTM              the load balancing method defaults to LEASTCONNECTION.
                                        • CALLIDHASH        " DESTINATIONIPHASH - Create a hash of the destination IP address in the IP header.
                                        • CUSTOMLOAD        " SOURCEIPHASH - Create a hash of the source IP address in the IP header.
                                        • LEASTREQUEST      " TOKEN - Extract a token from the request, create a hash of the token, and then select the service to which any previous requests with
                                        • AUDITLOGHASH      the same token hash value were sent.
                                        • STATICPROXIMITY   " SRCIPDESTIPHASH - Create a hash of the string obtained by concatenating the source IP address and destination IP address in the IP
                                                            header.
                                                            " SRCIPSRCPORTHASH - Create a hash of the source IP address and source port in the IP header.
                                                            " CALLIDHASH - Create a hash of the SIP Call-ID header.
   listenpolicy                                             Default syntax expression identifying traffic accepted by the virtual server. Can be either an expression (for example,
   -                                                        CLIENT.IP.DST.IN_SUBNET(192.0.2.0/24) or the name of a named expression. In the above example, the virtual server accepts all requests
                                                            whose destination IP address is in the 192.0.2.0/24 subnet.
                                                            Integer specifying the priority of the listen policy. A higher number specifies a lower priority. If a request matches the listen
   listenpriority                                           policies of more than one virtual server the virtual server whose listen policy has the highest priority (the lowest priority number)
   -                                                        accepts the request.
                                                            Minimum value = 0
                                                            Maximum value = 101
                                                            Redirection mode for load balancing. Available settings function as follows:
                                                            " IP - Before forwarding a request to a server, change the destination IP address to the server's IP address.
                                        Choices:            " MAC - Before forwarding a request to a server, change the destination MAC address to the server's MAC address. The destination IP
   m                                    • IP                address is not changed. MAC-based redirection mode is used mostly in firewall load balancing deployments.
   -                                    • MAC               " IPTUNNEL - Perform IP-in-IP encapsulation for client IP packets. In the outer IP headers, set the destination IP address to the IP
                                        • IPTUNNEL          address of the server and the source IP address to the subnet IP (SNIP). The client IP packets are not modified. Applicable to both IPv4
                                        • TOS               and IPv6 packets.
                                                            " TOS - Encode the virtual server's TOS ID in the TOS field of the IP header.
                                                            You can use either the IPTUNNEL or the TOS option to implement Direct Server Return (DSR).
   macmoderetainvlan                    Choices:
   -                                    • enabled           This option is used to retain vlan information of incoming packet when macmode is enabled.
                                        • disabled
   maxautoscalemembers                                      Maximum number of members expected to be present when vserver is used in Autoscale.
   -                                                        Minimum value = 0
                                                            Maximum value = 5000
   minautoscalemembers                                      Minimum number of members expected to be present when vserver is used in Autoscale.
   -                                                        Minimum value = 0
                                                            Maximum value = 5000
                                        Choices:
                                        • 70
                                        • 2000
   mssqlserverversion                   • 2000SP1           For a load balancing virtual server of type MSSQL, the Microsoft SQL Server version. Set this parameter if you expect some clients to run
   -                                    • 2005              a version different from the version of the database. This setting provides compatibility between the client-side and server-side
                                        • 2008              connections by ensuring that all communication conforms to the server's version.
                                        • 2008R2
                                        • 2012
                                        • 2014
   mysqlcharacterset                                        Character set that the virtual server advertises to clients.
   -
   mysqlprotocolversion                                     MySQL protocol version that the virtual server advertises to clients.
   -
   mysqlservercapabilities                                  Server capabilities that the virtual server advertises to clients.
   -
   mysqlserverversion                                       MySQL server version string that the virtual server advertises to clients.
   -                                                        Minimum length = 1
                                                            Maximum length = 31
                                                            Name for the virtual server. Must begin with an ASCII alphanumeric or underscore _ character, and must contain only ASCII alphanumeric,
   name                                                     underscore, hash #, period ., space  , colon :, at sign @, equal sign =, and hyphen - characters. Can be changed after the virtual server
   -                                                        is created.
                                                            Minimum length = 1
   netmask                                                  IPv4 subnet mask to apply to the destination IP address or source IP address when the load balancing method is DESTINATIONIPHASH or
   -                                                        SOURCEIPHASH.
                                                            Minimum length = 1
                                                            Name of the network profile to associate with the virtual server. If you set this parameter, the virtual server uses only the IP
   netprofile                                               addresses in the network profile as source IP addresses when initiating connections with servers.
   -                                                        Minimum length = 1
                                                            Maximum length = 127
                                                            Number of requests, or percentage of the load on existing services, by which to increase the load on a new service at each interval in
   newservicerequest                                        slow-start mode. A non-zero value indicates that slow-start is applicable. A zero value indicates that the global RR startup parameter is
   -                                                        applied. Changing the value to zero will cause services currently in slow start to take the full traffic as determined by the LB method.
                                                            Subsequently, any new services added will use the global RR factor.
                                                            Interval, in seconds, between successive increments in the load on a new service or a service whose state has just changed from DOWN to
   newservicerequestincrementinterval                       UP. A value of 0 (zero) specifies manual slow start.
   -                                                        Minimum value = 0
                                                            Maximum value = 3600
   newservicerequestunit                Choices:
   -                                    • PER_SECOND        Units in which to increment load at each interval in slow-start mode.
                                        • PERCENT
   nitro_pass                                               The password with which to authenticate to the netscaler node.
   string / required
   nitro_protocol                       Choices:
   string                               • http ←            Which protocol to use when accessing the nitro API objects.
                                        • https
   nitro_timeout                      Default:              Time in seconds until a timeout error is thrown when establishing a new session with Netscaler
   float                              310
   nitro_user                                               The username with which to authenticate to the netscaler node.
   string / required
   nsip                                                     The ip address of the netscaler appliance where the nitro API calls will be made.
   string / required                                        The port can be specified with the colon (:). E.g. 192.168.1.1:555.
   oracleserverversion                  Choices:
   -                                    • 10G               Oracle server version.
                                        • 11G
                                                            Persist AVP number for Diameter Persistency.
   persistavpno                                             In case this AVP is not defined in Base RFC 3588 and it is nested inside a Grouped AVP,
   -                                                        define a sequence of AVP numbers (max 3) in order of parent to child. So say persist AVP number X
                                                            is nested inside AVP Y which is nested in Z, then define the list as Z Y X.
                                                            Minimum value = 1
   persistencebackup                    Choices:
   -                                    • SOURCEIP          Backup persistence type for the virtual server. Becomes operational if the primary persistence mechanism fails.
                                        • NONE
                                                            Type of persistence for the virtual server. Available settings function as follows:
                                        Choices:            " SOURCEIP - Connections from the same client IP address belong to the same persistence session.
                                        • SOURCEIP          " COOKIEINSERT - Connections that have the same HTTP Cookie, inserted by a Set-Cookie directive from a server, belong to the same
                                        • COOKIEINSERT      persistence session.
                                        • SSLSESSION        " SSLSESSION - Connections that have the same SSL Session ID belong to the same persistence session.
                                        • RULE              " CUSTOMSERVERID - Connections with the same server ID form part of the same session. For this persistence type, set the Server ID
                                        • URLPASSIVE        (CustomServerID) parameter for each service and configure the Rule parameter to identify the server ID in a request.
   persistencetype                      • CUSTOMSERVERID    " RULE - All connections that match a user defined rule belong to the same persistence session.
   -                                    • DESTIP            " URLPASSIVE - Requests that have the same server ID in the URL query belong to the same persistence session. The server ID is the
                                        • SRCIPDESTIP       hexadecimal representation of the IP address and port of the service to which the request must be forwarded. This persistence type
                                        • CALLID            requires a rule to identify the server ID in the request.
                                        • RTSPSID           " DESTIP - Connections to the same destination IP address belong to the same persistence session.
                                        • DIAMETER          " SRCIPDESTIP - Connections that have the same source IP address and destination IP address belong to the same persistence session.
                                        • FIXSESSION        " CALLID - Connections that have the same CALL-ID SIP header belong to the same persistence session.
                                        • NONE              " RTSPSID - Connections that have the same RTSP Session ID belong to the same persistence session.
                                                            " FIXSESSION - Connections that have the same SenderCompID and TargetCompID values belong to the same persistence session.
   persistmask                                              Persistence mask for IP based persistence types, for IPv4 virtual servers.
   -                                                        Minimum length = 1
   port                                                     Port number for the virtual server.
   -                                                        Range 1 - 65535
                                                            " in CLI is represented as 65535 in NITRO API
   processlocal                         Choices:            By turning on this option packets destined to a vserver in a cluster will not under go any steering. Turn this option for single packet
   -                                    • enabled           request response mode or when the upstream device is performing a proper RSS for connection based distribution.
                                        • disabled
   push                                 Choices:
   -                                    • enabled           Process traffic with the push virtual server that is bound to this load balancing virtual server.
                                        • disabled
   pushlabel                                                Expression for extracting a label from the server's response. Can be either an expression or the name of a named expression.
   -
   pushmulticlients                     Choices:
   boolean                              • no                Allow multiple Web 2.0 connections from the same client to connect to the virtual server and expect updates.
                                        • yes
   pushvserver                                              Name of the load balancing virtual server, of type PUSH or SSL_PUSH, to which the server pushes updates received on the load balancing
   -                                                        virtual server that you are configuring.
                                                            Minimum length = 1
                                                            Number of IP addresses that the appliance must generate and assign to the virtual server. The virtual server then functions as a network
                                                            virtual server, accepting traffic on any of the generated IP addresses. The IP addresses are generated automatically, as follows:
                                                            " For a range of n, the last octet of the address specified by the IP Address parameter increments n-1 times.
   range                                                    " If the last octet exceeds 255, it rolls over to 0 and the third octet increments by 1.
   -                                                        Note: The Range parameter assigns multiple IP addresses to one virtual server. To generate an array of virtual servers, each of which
                                                            owns only one IP address, use brackets in the IP Address and Name parameters to specify the range. For example:
                                                            add lb vserver my_vserver[1-3] HTTP 192.0.2.[1-3] 80.
                                                            Minimum value = 1
                                                            Maximum value = 254
   recursionavailable                   Choices:            When set to YES, this option causes the DNS replies from this vserver to have the RA bit turned on. Typically one would set this option
   boolean                              • no                to YES, when the vserver is load balancing a set of DNS servers thatsupport recursive queries.
                                        • yes
   redirectportrewrite                  Choices:
   -                                    • enabled           Rewrite the port and change the protocol to ensure successful HTTP redirects from services.
                                        • disabled
                                                            URL to which to redirect traffic if the virtual server becomes unavailable.
   redirurl                                                 WARNING! Make sure that the domain in the URL does not match the domain specified for a content switching policy. If it does, requests
   -                                                        are continuously redirected to the unavailable virtual server.
                                                            Minimum length = 1
                                                            Default syntax expression specifying which part of a server's response to use for creating rule based persistence sessions (persistence
   resrule                                                  type RULE). Can be either an expression or the name of a named expression.
   -                                                        Example:
                                                            HTTP.RES.HEADER("setcookie".VALUE(0).TYPECAST_NVLIST_T('=',';').VALUE("server1")).
                                                            Route Health Injection (RHI) functionality of the NetSaler appliance for advertising the route of the VIP address associated with the
                                                            virtual server. When Vserver RHI Level (RHI) parameter is set to VSVR_CNTRLD, the following are different RHI behaviors for the VIP
                                        Choices:            address on the basis of RHIstate (RHI STATE) settings on the virtual servers associated with the VIP address:
   rhistate                             • PASSIVE           " If you set rhistate to PASSIVE on all virtual servers, the NetScaler ADC always advertises the route for the VIP address.
   -                                    • ACTIVE            " If you set rhistate to ACTIVE on all virtual servers, the NetScaler ADC advertises the route for the VIP address if at least one of the
                                                            associated virtual servers is in UP state.
                                                            " If you set rhistate to ACTIVE on some and PASSIVE on others, the NetScaler ADC advertises the route for the VIP address if at least one
                                                            of the associated virtual servers, whose rhistate set to ACTIVE, is in UP state.
   rtspnat                              Choices:
   boolean                              • no                Use network address translation (NAT) for RTSP data connections.
                                        • yes
   save_config                          Choices:            If yes the module will save the configuration on the netscaler node if it makes any changes.
   boolean                              • no                The module will not save the configuration on the netscaler node if it made no changes.
                                        • yes ←
   servicebindings                                          List of services along with the weights that are load balanced.
   -                                                        The following suboptions are available.
             servicename                                    Service to bind to the virtual server.
             -                                              Minimum length = 1
             weight                                         Weight to assign to the specified service.
             -                                              Minimum value = 1
                                                            Maximum value = 100
   servicegroupbindings                                     List of service groups along with the weights that are load balanced.
   -                                                        The following suboptions are available.
             servicegroupname                               The service group name bound to the selected load balancing virtual server.
             -
                                                            Integer specifying the weight of the service. A larger number specifies a greater weight. Defines the capacity of the service relative to
             weight                                         the other services in the load balancing configuration. Determines the priority given to the service in load balancing decisions.
             -                                              Minimum value = 1
                                                            Maximum value = 100
                                        Choices:
                                        • HTTP
                                        • FTP
                                        • TCP
                                        • UDP
                                        • SSL
                                        • SSL_BRIDGE
                                        • SSL_TCP
                                        • DTLS
                                        • NNTP
                                        • DNS
                                        • DHCPRA
                                        • ANY
                                        • SIP_UDP
                                        • SIP_TCP
   servicetype                          • SIP_SSL
   -                                    • DNS_TCP           Protocol used by the service (also called the service type).
                                        • RTSP
                                        • PUSH
                                        • SSL_PUSH
                                        • RADIUS
                                        • RDP
                                        • MYSQL
                                        • MSSQL
                                        • DIAMETER
                                        • SSL_DIAMETER
                                        • TFTP
                                        • ORACLE
                                        • SMPP
                                        • SYSLOGTCP
                                        • SYSLOGUDP
                                        • FIX
                                        • SSL_FIX
   sessionless                          Choices:            Perform load balancing on a per-packet basis, without establishing sessions. Recommended for load balancing of intrusion detection system
   -                                    • enabled           (IDS) servers and scenarios involving direct server return (DSR), where session information is unnecessary.
                                        • disabled
                                        Choices:
   skippersistency                      • Bypass            This argument decides the behavior incase the service which is selected from an existing persistence session has reached threshold.
   -                                    • ReLb
                                        • None
                                        Choices:
   sobackupaction                       • DROP              Action to be performed if spillover is to take effect, but no backup chain to spillover is usable or exists.
   -                                    • ACCEPT
                                        • REDIRECT
                                                            Type of threshold that, when exceeded, triggers spillover. Available settings function as follows:
                                                            " CONNECTION - Spillover occurs when the number of client connections exceeds the threshold.
                                        Choices:            " DYNAMICCONNECTION - Spillover occurs when the number of client connections at the virtual server exceeds the sum of the maximum client
                                        • CONNECTION        (Max Clients) settings for bound services. Do not specify a spillover threshold for this setting, because the threshold is implied by the
   somethod                             • DYNAMICCONNECTION Max Clients settings of bound services.
   -                                    • BANDWIDTH         " BANDWIDTH - Spillover occurs when the bandwidth consumed by the virtual server's incoming and outgoing traffic exceeds the threshold.
                                        • HEALTH            " HEALTH - Spillover occurs when the percentage of weights of the services that are UP drops below the threshold. For example, if
                                        • NONE              services svc1, svc2, and svc3 are bound to a virtual server, with weights 1, 2, and 3, and the spillover threshold is 50%, spillover
                                                            occurs if svc1 and svc3 or svc2 and svc3 transition to DOWN.
                                                            " NONE - Spillover does not occur.
   sopersistence                        Choices:
   -                                    • enabled           If spillover occurs, maintain source IP address based persistence for both primary and backup virtual servers.
                                        • disabled
   sopersistencetimeout                                     Timeout for spillover persistence, in minutes.
   -                                                        Minimum value = 2
                                                            Maximum value = 1440
                                                            Threshold at which spillover occurs. Specify an integer for the CONNECTION spillover method, a bandwidth value in kilobits per second for
   sothreshold                                              the BANDWIDTH method (do not enter the units), or a percentage for the HEALTH method (do not enter the percentage symbol).
   -                                                        Minimum value = 1
                                                            Maximum value = 4294967287
                                                            The name of the ssl certificate that is bound to this service.
   ssl_certkey                                              The ssl certificate must already exist.
   -                                                        Creating the certificate can be done with the netscaler_ssl_certkey module.
                                                            This option is only applicable only when servicetype is SSL.
   state                                Choices:            The state of the resource being configured by the module on the netscaler node.
   string                               • absent            When present the resource will be created if needed and configured according to the module's parameters.
                                        • present ←         When absent the resource will be deleted from the netscaler node.
   tcpprofilename                                           Name of the TCP profile whose settings are to be applied to the virtual server.
   -                                                        Minimum length = 1
                                                            Maximum length = 127
                                                            Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the
   td                                                       entity becomes part of the default traffic domain, which has an ID of 0.
   -                                                        Minimum value = 0
                                                            Maximum value = 4094
   timeout                                                  Time period for which a persistence session is in effect.
   -                                                        Minimum value = 0
                                                            Maximum value = 1440
   tosid                                                    TOS ID of the virtual server. Applicable only when the load balancing redirection mode is set to TOS.
   -                                                        Minimum value = 1
                                                            Maximum value = 63
                                                            Number of bits to consider in an IPv6 destination or source IP address, for creating the hash that is required by the DESTINATIONIPHASH
   v6netmasklen                                             and SOURCEIPHASH load balancing methods.
   -                                                        Minimum value = 1
                                                            Maximum value = 128
   v6persistmasklen                                         Persistence mask for IP based persistence types, for IPv6 virtual servers.
   -                                                        Minimum value = 1
                                                            Maximum value = 128
   validate_certs                       Choices:
   boolean                              • no                If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.
                                        • yes ←
   vipheader                                                Name for the inserted header. The default name is vip-header.
   -                                                        Minimum length = 1

NOTES                   *netscaler_lb_vserver-notes*

   Note

     • For more information on using Ansible to manage Citrix NetScaler Network devices see https://www.ansible.com/ansible-netscaler.

EXAMPLES                   *netscaler_lb_vserver-examples*

 # Netscaler services service-http-1, service-http-2 must have been already created with the netscaler_service module

 - name: Create a load balancing vserver bound to services
   delegate_to: localhost
   netscaler_lb_vserver:
     nsip: 172.18.0.2
     nitro_user: nsroot
     nitro_pass: nsroot
     validate_certs: no

     state: present

     name: lb_vserver_1
     servicetype: HTTP
     timeout: 12
     ipv46: 6.93.3.3
     port: 80
     servicebindings:
         - servicename: service-http-1
           weight: 80
         - servicename: service-http-2
           weight: 20

 # Service group service-group-1 must have been already created with the netscaler_servicegroup module

 - name: Create load balancing vserver bound to servicegroup
   delegate_to: localhost
   netscaler_lb_vserver:
     nsip: 172.18.0.2
     nitro_user: nsroot
     nitro_pass: nsroot
     validate_certs: no
     state: present

     name: lb_vserver_2
     servicetype: HTTP
     ipv46: 6.92.2.2
     port: 80
     timeout: 10
     servicegroupbindings:
         - servicegroupname: service-group-1

RETURN VALUES                   *netscaler_lb_vserver-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   diff                List of differences between the actual configured object and the configuration specified in the module
   dictionary failure  Sample:
                       {'clttimeout': 'difference. ours: (float) 10.0 other: (float) 20.0'}
   loglines            list of logged messages by the module
   list       always   Sample:
                       ['message 1', 'message 2']
   msg                 Message detailing the failure reason
   string     failure  Sample:
                       Action does not exist

STATUS                   *netscaler_lb_vserver-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • George Nikolopoulos (@giorgos-nikolopoulos)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *netscaler_lb_vserver-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/netscaler_lb_vserver_module.html
