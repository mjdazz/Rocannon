SYNOPSIS                   *ec2_vpc_nat_gateway*

     • Ensure the state of AWS VPC NAT Gateways based on their id, allocation and subnet ids.

REQUIREMENTS                   *ec2_vpc_nat_gateway-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • python >= 2.6

PARAMETERS                   *ec2_vpc_nat_gateway-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   allocation_id                                 The id of the elastic IP allocation. If this is not passed and the eip_address is not passed. An EIP is generated for this NAT Gateway.
   -
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   client_token                                  Optional unique token to be used during create to ensure idempotency. When specifying this option, ensure you specify the eip_address parameter as
   -                                             well otherwise any subsequent runs will fail.
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   eip_address                                   The elastic IP address of the EIP you want attached to this NAT Gateway. If this is not passed and the allocation_id is not passed, an EIP is
   -                                             generated for this NAT Gateway.
   if_exist_do_not_create         Choices:
   boolean                        • no ←         if a NAT Gateway exists already in the subnet_id, then do not create a new one.
                                  • yes
   nat_gateway_id                                The id AWS dynamically allocates to the NAT Gateway on creation. This is required when the absent option is present.
   -
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   release_eip                    Choices:       Deallocate the EIP from the VPC.
   boolean                        • no           Option is only valid with the absent state.
                                  • yes ←        You should use this with the wait option. Since you can not release an address while a delete operation is happening.
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:
   -                              • present ←    Ensure NAT Gateway is present or absent.
                                  • absent
   subnet_id                                     The id of the subnet to create the NAT Gateway in. This is required with the present option.
   -
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←
   wait                           Choices:
   boolean                        • no ←         Wait for operation to complete before returning.
                                  • yes
   wait_timeout                 Default:         How many seconds to wait for an operation to complete before timing out.
   -                            300

NOTES                   *ec2_vpc_nat_gateway-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_vpc_nat_gateway-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 - name: Create new nat gateway with client token.
   ec2_vpc_nat_gateway:
     state: present
     subnet_id: subnet-12345678
     eip_address: 52.1.1.1
     region: ap-southeast-2
     client_token: abcd-12345678
   register: new_nat_gateway

 - name: Create new nat gateway using an allocation-id.
   ec2_vpc_nat_gateway:
     state: present
     subnet_id: subnet-12345678
     allocation_id: eipalloc-12345678
     region: ap-southeast-2
   register: new_nat_gateway

 - name: Create new nat gateway, using an EIP address  and wait for available status.
   ec2_vpc_nat_gateway:
     state: present
     subnet_id: subnet-12345678
     eip_address: 52.1.1.1
     wait: yes
     region: ap-southeast-2
   register: new_nat_gateway

 - name: Create new nat gateway and allocate new EIP.
   ec2_vpc_nat_gateway:
     state: present
     subnet_id: subnet-12345678
     wait: yes
     region: ap-southeast-2
   register: new_nat_gateway

 - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
   ec2_vpc_nat_gateway:
     state: present
     subnet_id: subnet-12345678
     wait: yes
     region: ap-southeast-2
     if_exist_do_not_create: true
   register: new_nat_gateway

 - name: Delete nat gateway using discovered nat gateways from facts module.
   ec2_vpc_nat_gateway:
     state: absent
     region: ap-southeast-2
     wait: yes
     nat_gateway_id: "{{ item.NatGatewayId }}"
     release_eip: yes
   register: delete_nat_gateway_result
   loop: "{{ gateways_to_remove.result }}"

 - name: Delete nat gateway and wait for deleted status.
   ec2_vpc_nat_gateway:
     state: absent
     nat_gateway_id: nat-12345678
     wait: yes
     wait_timeout: 500
     region: ap-southeast-2

 - name: Delete nat gateway and release EIP.
   ec2_vpc_nat_gateway:
     state: absent
     nat_gateway_id: nat-12345678
     release_eip: yes
     wait: yes
     wait_timeout: 300
     region: ap-southeast-2

RETURN VALUES                   *ec2_vpc_nat_gateway-return values*

   Common return values are documented here, the following are the fields unique to this module:

            Key            Returned                                                                             Description
   create_time                         The ISO 8601 date time format in UTC.
   string                In all cases. Sample:
                                       2016-03-05T05:19:20.282000+00:00'
   nat_gateway_addresses               List of dictionaries containing the public_ip, network_interface_id, private_ip, and allocation_id.
   string                In all cases. Sample:
                                       [{'public_ip': '52.52.52.52', 'network_interface_id': 'eni-12345', 'private_ip': '10.0.0.100', 'allocation_id': 'eipalloc-12345'}]
   nat_gateway_id                      id of the VPC NAT Gateway
   string                In all cases. Sample:
                                       nat-0d1e3a878585988f8
   state                               The current state of the NAT Gateway.
   string                In all cases. Sample:
                                       available
   subnet_id                           id of the Subnet
   string                In all cases. Sample:
                                       subnet-12345
   vpc_id                              id of the VPC.
   string                In all cases. Sample:
                                       vpc-12345

STATUS                   *ec2_vpc_nat_gateway-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Allen Sanabria (@linuxdynasty)
     • Jon Hadfield (@jonhadfield)
     • Karen Cheng (@Etherdaemon)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_vpc_nat_gateway-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_vpc_nat_gateway_module.html
