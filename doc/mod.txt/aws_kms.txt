SYNOPSIS                   *aws_kms*

     • Manage role/user access to a KMS key. Not designed for encrypting/decrypting.

REQUIREMENTS                   *aws_kms-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • boto

PARAMETERS                   *aws_kms-parameters*

            Parameter           Choices/Defaults                                                                       Comments
                                                 An alias for a key. For safety, even though KMS does not require keys to have an alias, this module expects all new keys to be given an alias to
   alias                                         make them easier to manage. Existing keys without an alias may be referred to by key_id. Use aws_kms_info to find key ids. Required if key_id is not
   -                                             given. Note that passing a key_id and alias will only cause a new alias to be added, an alias will never be renamed. The 'alias/' prefix is
                                                 optional.
                                                 aliases: key_alias
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   description
   -                                             A description of the CMK. Use a description that helps you decide whether the CMK is appropriate for a task.
   added in 2.8
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   enabled                        Choices:
   boolean                        • no           Whether or not a key is enabled
   added in 2.8                   • yes ←
                                                 A list of grants to apply to the key. Each item must contain grantee_principal. Each item can optionally contain retiring_principal, operations,
                                                 constraints, name.
   grants                                        Valid operations are Decrypt, Encrypt, GenerateDataKey, GenerateDataKeyWithoutPlaintext, ReEncryptFrom, ReEncryptTo, CreateGrant, RetireGrant,
   -                                             DescribeKey, Verify and Sign
   added in 2.8                                  Constraints is a dict containing encryption_context_subset or encryption_context_equals, either or both being a dict specifying an encryption
                                                 context match. See https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html
                                                 grantee_principal and retiring_principal must be ARNs
   key_id                                        Key ID or ARN of the key. One of alias or key_id are required.
   -                                             aliases: key_arn
   policy                                        policy to apply to the KMS key
   -                                             See https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html
   added in 2.8
                                                 (deprecated) If adding/removing a role and invalid grantees are found, remove them. These entries will cause an update to fail in all known cases.
   policy_clean_invalid_entries   Choices:       Only cleans if changes are being made.
   boolean                        • no           Used for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.
                                  • yes ←        This option has been deprecated, and will be removed in 2.13. Use policy instead.
                                                 aliases: clean_invalid_entries
                                                 (deprecated) List of grants to give to user/role. Likely "role,role grant" or "role,role grant,admin". Required when policy_mode=grant.
   policy_grant_types                            Used for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.
   -                                             This option has been deprecated, and will be removed in 2.13. Use policy instead.
                                                 aliases: grant_types
                                  Choices:       (deprecated) Grant or deny access.
   policy_mode                    • grant ←      Used for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.
   -                              • deny         This option has been deprecated, and will be removed in 2.13. Use policy instead.
                                                 aliases: mode
                                                 (deprecated) ARN of role to allow/deny access. One of policy_role_name or policy_role_arn are required.
   policy_role_arn                               Used for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.
   -                                             This option has been deprecated, and will be removed in 2.13. Use policy instead.
                                                 aliases: role_arn
                                                 (deprecated) Role to allow/deny access. One of policy_role_name or policy_role_arn are required.
   policy_role_name                              Used for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.
   -                                             This option has been deprecated, and will be removed in 2.13. Use policy instead.
                                                 aliases: role_name
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   purge_grants                   Choices:
   boolean                        • no ←         Whether the grants argument should cause grants not in the list to be removed
   added in 2.8                   • yes
   purge_tags                     Choices:
   boolean                        • no ←         Whether the tags argument should cause tags not in the list to be removed
   added in 2.8                   • yes
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:       Whether a key should be present or absent. Note that making an existing key absent only schedules a key for deletion. Passing a key that is
   -                              • present ←    scheduled for deletion with state present will cancel key deletion.
   added in 2.8                   • absent
   tags
   -                                             A dictionary of tags to apply to a key.
   added in 2.8
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *aws_kms-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *aws_kms-examples*

 # Managing the KMS IAM Policy via policy_mode and policy_grant_types is fragile
 # and has been deprecated in favour of the policy option.
 - name: grant user-style access to production secrets
   aws_kms:
   args:
     alias: "alias/my_production_secrets"
     policy_mode: grant
     policy_role_name: "prod-appServerRole-1R5AQG2BSEL6L"
     policy_grant_types: "role,role grant"
 - name: remove access to production secrets from role
   aws_kms:
   args:
     alias: "alias/my_production_secrets"
     policy_mode: deny
     policy_role_name: "prod-appServerRole-1R5AQG2BSEL6L"

 # Create a new KMS key
 - aws_kms:
     alias: mykey
     tags:
       Name: myKey
       Purpose: protect_stuff

 # Update previous key with more tags
 - aws_kms:
     alias: mykey
     tags:
       Name: myKey
       Purpose: protect_stuff
       Owner: security_team

 # Update a known key with grants allowing an instance with the billing-prod IAM profile
 # to decrypt data encrypted with the environment: production, application: billing
 # encryption context
 - aws_kms:
     key_id: abcd1234-abcd-1234-5678-ef1234567890
     grants:
       - name: billing_prod
         grantee_principal: arn:aws:iam::1234567890123:role/billing_prod
         constraints:
           encryption_context_equals:
             environment: production
             application: billing
         operations:
           - Decrypt
           - RetireGrant

RETURN VALUES                   *aws_kms-return values*

   Common return values are documented here, the following are the fields unique to this module:

           Key          Returned                                                                             Description
   aliases                       list of aliases associated with the key
   list                 always   Sample:
                                 ['aws/acm', 'aws/ebs']
   aws_account_id                The AWS Account ID that the key belongs to
   string               always   Sample:
                                 1234567890123
   changes_needed                grant types that would be changed/were changed.
   dictionary           always   Sample:
                                 {'role': 'add', 'role grant': 'add'}
   creation_date                 Date of creation of the key
   string               always   Sample:
                                 2017-04-18T15:12:08.551000+10:00
   description                   Description of the key
   string               always   Sample:
                                 My Key for Protecting important stuff
   enabled              always   Whether the key is enabled. True if KeyState is true.
   string
   grants               always   list of grants associated with a key
   complex
     constraints                 Constraints on the encryption context that the grant allows. See https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html for further details
     dictionary         always   Sample:
                                 {'encryption_context_equals': {'aws:lambda:_function_arn': 'arn:aws:lambda:ap-southeast-2:012345678912:function:xyz'}}
     creation_date               Date of creation of the grant
     string             always   Sample:
                                 2017-04-18T15:12:08+10:00
     grant_id                    The unique ID for the grant
     string             always   Sample:
                                 abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234
     grantee_principal           The principal that receives the grant's permissions
     string             always   Sample:
                                 arn:aws:sts::0123456789012:assumed-role/lambda_xyz/xyz
     issuing_account             The AWS account under which the grant was issued
     string             always   Sample:
                                 arn:aws:iam::01234567890:root
     key_id                      The key ARN to which the grant applies.
     string             always   Sample:
                                 arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890
     name                        The friendly name that identifies the grant
     string             always   Sample:
                                 xyz
     operations                  The list of operations permitted by the grant
     list               always   Sample:
                                 ['Decrypt', 'RetireGrant']
     retiring_principal          The principal that can retire the grant
     string             always   Sample:
                                 arn:aws:sts::0123456789012:assumed-role/lambda_xyz/xyz
   had_invalid_entries  always   there are invalid (non-ARN) entries in the KMS entry. These don't count as a change, but will be removed if any changes are being made.
   boolean
   key_arn                       ARN of key
   string               always   Sample:
                                 arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890
   key_id                        ID of key
   string               always   Sample:
                                 abcd1234-abcd-1234-5678-ef1234567890
   key_state                     The state of the key
   string               always   Sample:
                                 PendingDeletion
   key_usage                     The cryptographic operations for which you can use the key.
   string               always   Sample:
                                 ENCRYPT_DECRYPT
                                 The source of the key's key material. When this value is AWS_KMS, AWS KMS created the key material. When this value is EXTERNAL, the key material was imported or
   origin               always   the CMK lacks key material.
   string                        Sample:
                                 AWS_KMS
                                 list of policy documents for the keys. Empty when access is denied even if there are policies.
                                 Sample:
   policies                      {'Version': '2012-10-17', 'Id': 'auto-ebs-2', 'Statement': [{'Sid': 'Allow access through EBS for all principals in the account that are authorized to use EBS',
   list                 always   'Effect': 'Allow', 'Principal': {'AWS': '"'}, 'Action': ['kms:Encrypt', 'kms:Decrypt', 'kms:ReEncrypt"', 'kms:GenerateDataKey"', 'kms:CreateGrant',
                                 'kms:DescribeKey'], 'Resource': '"', 'Condition': {'StringEquals': {'kms:CallerAccount': '111111111111', 'kms:ViaService': 'ec2.ap-southeast-2.amazonaws.com'}}},
                                 {'Sid': 'Allow direct access to key metadata to the account', 'Effect': 'Allow', 'Principal': {'AWS': 'arn:aws:iam::111111111111:root'}, 'Action': ['kms:Describe"',
                                 'kms:Get"', 'kms:List"', 'kms:RevokeGrant'], 'Resource': '"'}]}
   tags                          dictionary of tags applied to the key
   dictionary           always   Sample:
                                 {'Name': 'myKey', 'Purpose': 'protecting_stuff'}

STATUS                   *aws_kms-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ted Timmons (@tedder)
     • Will Thames (@willthames)
     • Mark Chappell (@tremble)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aws_kms-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aws_kms_module.html
