SYNOPSIS                   *nios_network*

     • Adds and/or removes instances of network objects from Infoblox NIOS servers. This module manages NIOS network objects using the Infoblox WAPI interface over REST.
     • Supports both IPV4 and IPV6 internet protocols

REQUIREMENTS                   *nios_network-requirements*

   The below requirements are needed on the host that executes this module.

     • infoblox-client

PARAMETERS                   *nios_network-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   comment                                Configures a text string comment to be associated with the instance of this object. The provided text string will be configured on the object instance.
   -
   container               Choices:
   boolean                 • no           If set to true it'll create the network container to be added or removed from the system.
   added in 2.8            • yes
   extattrs                               Allows for the configuration of Extensible Attributes on the instance of the object. This argument accepts a set of key / value pairs for configuration.
   -
   network                                Specifies the network to add or remove from the system. The value should use CIDR notation.
   - / required                           aliases: name, cidr
   network_view          Default:         Configures the name of the network view to associate with this configured instance.
   - / required          "default"
   options                                Configures the set of DHCP options to be included as part of the configured network instance. This argument accepts a list of values (see suboptions). When
   -                                      configuring suboptions at least one of name or num must be specified.
    name                                  The name of the DHCP option to configure. The standard options are router, router-templates, domain-name-servers, domain-name, broadcast-address,
    -                                     broadcast-address-offset, dhcp-lease-time, and dhcp6.name-servers.
    num                                   The number of the DHCP option to configure
    -
    use_option             Choices:
    boolean                • no           Only applies to a subset of options (see NIOS API documentation)
                           • yes ←
    value                                 The value of the DHCP option specified by name
    - / required
    vendor_class         Default:         The name of the space this DHCP option is associated to
    -                    "DHCP"
   provider                               A dict object containing connection details.
   dictionary
    host                                  Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST
    string / required                     Value can also be specified using INFOBLOX_HOST environment variable.
    http_request_timeout Default:         The amount of time before to wait before receiving a response
    integer              10               Value can also be specified using INFOBLOX_HTTP_REQUEST_TIMEOUT environment variable.
    max_results          Default:         Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects
    integer              1000             would exceed the setting.
                                          Value can also be specified using INFOBLOX_MAX_RESULTS environment variable.
    max_retries          Default:         Configures the number of attempted retries before the connection is declared usable
    integer              3                Value can also be specified using INFOBLOX_MAX_RETRIES environment variable.
    password                              Specifies the password to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_PASSWORD environment variable.
    username                              Configures the username to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_USERNAME environment variable.
    validate_certs         Choices:       Boolean value to enable or disable verifying SSL certificates
    boolean                • no ←         Value can also be specified using INFOBLOX_SSL_VERIFY environment variable.
                           • yes          aliases: ssl_verify
    wapi_version         Default:         Specifies the version of WAPI to use
    string               "2.1"            Value can also be specified using INFOBLOX_WAP_VERSION environment variable.
                                          Until ansible 2.8 the default WAPI was 1.4
   state                   Choices:       Configures the intended state of the instance of the object on the NIOS server. When this value is set to present, the object is configured on the device
   -                       • present ←    and when this value is set to absent the value is removed (if necessary) from the device.
                           • absent

NOTES                   *nios_network-notes*

   Note

     • This module must be run locally, which can be achieved by specifying connection: local.
     • Please read the Infoblox Guide for more detailed information on how to use Infoblox with Ansible.

EXAMPLES                   *nios_network-examples*

 - name: configure a network ipv4
   nios_network:
     network: 192.168.10.0/24
     comment: this is a test comment
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: configure a network ipv6
   nios_network:
     network: fe80::/64
     comment: this is a test comment
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: set dhcp options for a network ipv4
   nios_network:
     network: 192.168.10.0/24
     comment: this is a test comment
     options:
       - name: domain-name
         value: ansible.com
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: remove a network ipv4
   nios_network:
     network: 192.168.10.0/24
     state: absent
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: configure a ipv4 network container
   nios_network:
     network: 192.168.10.0/24
     container: true
     comment: test network container
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: configure a ipv6 network container
   nios_network:
     network: fe80::/64
     container: true
     comment: test network container
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: remove a ipv4 network container
   nios_network:
     networkr: 192.168.10.0/24
     container: true
     comment: test network container
     state: absent
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local

STATUS                   *nios_network-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Peter Sprygada (@privateip)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nios_network-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nios_network_module.html
