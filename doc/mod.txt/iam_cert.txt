SYNOPSIS                   *iam_cert*

     • Allows for the management of server certificates

REQUIREMENTS                   *iam_cert-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • python >= 2.6

PARAMETERS                   *iam_cert-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   cert                                          The path to, or content of the certificate body in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is assumed
   string                                        to be content.
   cert_chain                                    The path to, or content of the CA certificate chain in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is
   string                                        assumed to be content.
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   dup_ok                         Choices:       By default the module will not upload a certificate that is already uploaded into AWS. If set to True, it will upload the certificate as long as the
   boolean                        • no ←         name is unique.
                                  • yes
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   key                                           The path to, or content of the private key in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is assumed to be
   string                                        content.
   name                                          Name of certificate to add, update or remove.
   string / required
   new_name                                      When state is present, this will update the name of the cert.
   string                                        The cert, key and cert_chain parameters will be ignored if this is defined.
   new_path                                      When state is present, this will update the path of the cert.
   string                                        The cert, key and cert_chain parameters will be ignored if this is defined.
   path                         Default:         When creating or updating, specify the desired path of the certificate.
   string                       "/"
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:       Whether to create(or update) or delete certificate.
   string / required              • present      If new_path or new_name is defined, specifying present will attempt to make an update these.
                                  • absent
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *iam_cert-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *iam_cert-examples*

 # Basic server certificate upload from local file
 - iam_cert:
     name: very_ssl
     state: present
     cert: "{{ lookup('file', 'path/to/cert') }}"
     key: "{{ lookup('file', 'path/to/key') }}"
     cert_chain: "{{ lookup('file', 'path/to/certchain') }}"

 # Basic server certificate upload
 - iam_cert:
     name: very_ssl
     state: present
     cert: path/to/cert
     key: path/to/key
     cert_chain: path/to/certchain

 # Server certificate upload using key string
 - iam_cert:
     name: very_ssl
     state: present
     path: "/a/cert/path/"
     cert: body_of_somecert
     key: vault_body_of_privcertkey
     cert_chain: body_of_myverytrustedchain

 # Basic rename of existing certificate
 - iam_cert:
     name: very_ssl
     new_name: new_very_ssl
     state: present

STATUS                   *iam_cert-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Jonathan I. Davila (@defionscode)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *iam_cert-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/iam_cert_module.html
