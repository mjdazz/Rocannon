SYNOPSIS                   *gitlab_user*

     • When the user does not exist in GitLab, it will be created.
     • When the user does exists and state=absent, the user will be deleted.
     • When changes are made to user, the user will be updated.

REQUIREMENTS                   *gitlab_user-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • python-gitlab python module <= 1.12.1
     • administrator rights on the GitLab server

PARAMETERS                   *gitlab_user-parameters*

       Parameter     Choices/Defaults                                                                            Comments
                       Choices:       The access level to the group. One of the following can be used.
                       • guest ←      guest
   access_level        • reporter     reporter
   string              • developer    developer
                       • master       master (alias for maintainer)
                       • maintainer   maintainer
                       • owner        owner
   api_password                       The password to use for authentication against the API
   string
   api_token                          GitLab token for logging in.
   string                             aliases: login_token
   api_url                            The resolvable endpoint for the API
   string
   api_username                       The username to use for authentication against the API
   string
   confirm             Choices:
   boolean             • no           Require confirmation.
   added in 2.4        • yes ←
   email                              The email that belongs to the user.
   string / required
   external            Choices:
   boolean             • no ←         Define external parameter for this user
   added in 2.8        • yes
   group                              Id or Full path of parent group in the form of group/name
   string                             Add user as an member to this group.
   isadmin             Choices:
   boolean             • no ←         Grant admin privileges to the user
   added in 2.8        • yes
   login_password                     GitLab password for login_user
   string
   login_user                         GitLab user name.
   string
   name                               Name of the user you want to create
   string / required
   password                           The password of the user.
   string / required                  GitLab server enforces minimum password length to 8, set this value with 8 or more characters.
   server_url                         The URL of the GitLab server, with protocol (i.e. http or https).
   string
   sshkey_file                        The ssh key itself.
   string
   sshkey_name                        The name of the sshkey
   string
   state               Choices:       create or delete group.
   string              • present ←    Possible values are present and absent.
                       • absent
   username                           The username of the user.
   string / required
   validate_certs      Choices:
   boolean             • no           Whether or not to validate SSL certs when supplying a https endpoint.
                       • yes ←

EXAMPLES                   *gitlab_user-examples*

 - name: "Delete GitLab User"
   gitlab_user:
     api_url: https://gitlab.example.com/
     api_token: "{{ access_token }}"
     validate_certs: False
     username: myusername
     state: absent
   delegate_to: localhost

 - name: "Create GitLab User"
   gitlab_user:
     api_url: https://gitlab.example.com/
     validate_certs: True
     api_username: dj-wasabi
     api_password: "MySecretPassword"
     name: My Name
     username: myusername
     password: mysecretpassword
     email: [email protected]
     sshkey_name: MySSH
     sshkey_file: ssh-rsa AAAAB3NzaC1yc...
     state: present
     group: super_group/mon_group
     access_level: owner
   delegate_to: localhost

RETURN VALUES                   *gitlab_user-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   error               the error message returned by the GitLab API
   string     failed   Sample:
                       400: path is already in use
   msg                 Success or failure message
   string     always   Sample:
                       Success
   result     always   json parsed response from the server
   dictionary
   user       always   API object
   dictionary

STATUS                   *gitlab_user-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Werner Dijkerman (@dj-wasabi)
     • Guillaume Martinez (@Lunik)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gitlab_user-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gitlab_user_module.html
