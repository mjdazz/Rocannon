SYNOPSIS                   *os_user_info*

     • Retrieve information about a one or more OpenStack users
     • This module was called os_user_facts before Ansible 2.9, returning ansible_facts. Note that the os_user_info module no longer returns ansible_facts!

   Aliases: os_user_facts

REQUIREMENTS                   *os_user_info-requirements*

   The below requirements are needed on the host that executes this module.

     • openstacksdk
     • openstacksdk >= 0.12.0
     • python >= 2.7

PARAMETERS                   *os_user_info-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   api_timeout                        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library.
   integer
                                      Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default password plugin, this would contain auth_url, username,
   auth                               password, project_name and any information about domains (for example, os_user_domain_name or os_project_domain_name) if the cloud supports them. For other
   dictionary                         plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack
                                      OS_" environment variables are present.
   auth_type                          Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the
   string                             contents of the auth parameter should be updated accordingly.
   availability_zone                  Ignored. Present for backwards compatibility
   -
   ca_cert                            A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
   string                             aliases: cacert
   client_cert                        A path to a client certificate to use as part of the SSL transaction.
   string                             aliases: cert
   client_key                         A path to a client key to use as part of the SSL transaction.
   string                             aliases: key
   cloud                              Named cloud or cloud config to operate against. If cloud is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides
   raw                                default values for auth and auth_type. This parameter is not needed if auth is provided or if OpenStack OS_" environment variables are present. If cloud is a
                                      dict, it contains a complete cloud configuration like would be in a section of clouds.yaml.
   domain                             Name or ID of the domain containing the user if the cloud supports domains
   -
   filters                            A dictionary of meta data to use for further filtering. Elements of this dictionary may be additional dictionaries.
   -
                       Choices:
   interface           • admin        Endpoint URL type to fetch from the service catalog.
   string              • internal     aliases: endpoint_type
                       • public ←
   name                               Name or ID of the user
   - / required
   region_name                        Name of the region.
   string
   timeout           Default:         How long should ansible wait for the requested resource.
   integer           180
   validate_certs      Choices:       Whether or not SSL API requests should be verified.
   boolean             • no ←         Before Ansible 2.3 this defaulted to yes.
                       • yes          aliases: verify
   wait                Choices:
   boolean             • no           Should ansible wait until the requested resource is complete.
                       • yes ←

NOTES                   *os_user_info-notes*

   Note

     • The standard OpenStack environment variables, such as OS_USERNAME may be used instead of providing explicit values.
     • Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or
       ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at
       https://docs.openstack.org/openstacksdk/

EXAMPLES                   *os_user_info-examples*

 # Gather information about previously created users
 - os_user_info:
     cloud: awesomecloud
   register: result
 - debug:
     msg: "{{ result.openstack_users }}"

 # Gather information about a previously created user by name
 - os_user_info:
     cloud: awesomecloud
     name: demouser
   register: result
 - debug:
     msg: "{{ result.openstack_users }}"

 # Gather information about a previously created user in a specific domain
 - os_user_info:
     cloud: awesomecloud
     name: demouser
     domain: admindomain
   register: result
 - debug:
     msg: "{{ result.openstack_users }}"

 # Gather information about a previously created user in a specific domain with filter
 - os_user_info:
     cloud: awesomecloud
     name: demouser
     domain: admindomain
     filters:
       enabled: False
   register: result
 - debug:
     msg: "{{ result.openstack_users }}"

RETURN VALUES                   *os_user_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

           Key                 Returned                                                                              Description
   openstack_users      always, but can be null has all the OpenStack information about users
   complex
     default_project_id success                 Default project ID of the user
     string
     domain_id          success                 Domain ID containing the user
     string
     email              success                 Email of the user
     string
     enabled            success                 Flag to indicate if the user is enabled
     boolean
     id                 success                 Unique UUID.
     string
     name               success                 Name given to the user.
     string
     username           success                 Username of the user
     string

STATUS                   *os_user_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ricardo Carrillo Cruz (@rcarrillocruz)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *os_user_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/os_user_info_module.html
