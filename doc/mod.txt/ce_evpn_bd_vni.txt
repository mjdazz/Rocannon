SYNOPSIS                   *ce_evpn_bd_vni*

     • Manages Ethernet Virtual Private Network (EVPN) VXLAN Network Identifier (VNI) configurations on HUAWEI CloudEngine switches.

PARAMETERS                   *ce_evpn_bd_vni-parameters*

        Parameter      Choices/Defaults                                                                           Comments
   bridge_domain_id                     Specify an existed bridge domain (BD).The value is an integer ranging from 1 to 16777215.
   - / required
   evpn                  Choices:
   -                     • enable ←     Create or delete an EVPN instance for a VXLAN in BD view.
                         • disable
                                        Configures a route distinguisher (RD) for a BD EVPN instance. The format of an RD can be as follows
                                        1) 2-byte AS number:4-byte user-defined number, for example, 1:3. An AS number is an integer ranging from 0 to 65535, and a user-defined number is an integer
                                        ranging from 0 to 4294967295. The AS and user-defined numbers cannot be both 0s. This means that an RD cannot be 0:0.
                                        2) Integral 4-byte AS number:2-byte user-defined number, for example, 65537:3. An AS number is an integer ranging from 65536 to 4294967295, and a
   route_distinguisher                  user-defined number is an integer ranging from 0 to 65535.
   -                                    3) 4-byte AS number in dotted notation:2-byte user-defined number, for example, 0.0:3 or 0.1:0. A 4-byte AS number in dotted notation is in the format of
                                        x.y, where x and y are integers ranging from 0 to 65535.
                                        4) A user-defined number is an integer ranging from 0 to 65535. The AS and user-defined numbers cannot be both 0s. This means that an RD cannot be 0.0:0.
                                        5) 32-bit IP address:2-byte user-defined number. For example, 192.168.122.15:1. An IP address ranges from 0.0.0.0 to 255.255.255.255, and a user-defined
                                        number is an integer ranging from 0 to 65535.
                                        6) 'auto' specifies the RD that is automatically generated.
   state                 Choices:
   -                     • present ←    Manage the state of the resource.
                         • absent
   vpn_target_both                      Add VPN targets to both the import and export VPN target lists of a BD EVPN instance. The format is the same as route_distinguisher.
   -
   vpn_target_export                    Add VPN targets to the export VPN target list of a BD EVPN instance. The format is the same as route_distinguisher.
   -
   vpn_target_import                    Add VPN targets to the import VPN target list of a BD EVPN instance. The format is the same as route_distinguisher.
   - / required

NOTES                   *ce_evpn_bd_vni-notes*

   Note

     • Ensure that EVPN has been configured to serve as the VXLAN control plane when state is present.
     • Ensure that a bridge domain (BD) has existed when state is present.
     • Ensure that a VNI has been created and associated with a broadcast domain (BD) when state is present.
     • If you configure evpn:false to delete an EVPN instance, all configurations in the EVPN instance are deleted.
     • After an EVPN instance has been created in the BD view, you can configure an RD using route_distinguisher parameter in BD-EVPN instance view.
     • Before configuring VPN targets for a BD EVPN instance, ensure that an RD has been configured for the BD EVPN instance
     • If you unconfigure route_distinguisher, all VPN target attributes for the BD EVPN instance will be removed at the same time.
     • When using state:absent, evpn is not supported and it will be ignored.
     • When using state:absent to delete VPN target attributes, ensure the configuration of VPN target attributes has existed and otherwise it will report an error.
     • This module requires the netconf system service be enabled on the remote device being managed.
     • Recommended connection is netconf.
     • This module also works with local connections for legacy playbooks.

EXAMPLES                   *ce_evpn_bd_vni-examples*

 - name: EVPN BD VNI test
   hosts: cloudengine
   connection: local
   gather_facts: no
   vars:
     cli:
       host: "{{ inventory_hostname }}"
       port: "{{ ansible_ssh_port }}"
       username: "{{ username }}"
       password: "{{ password }}"
       transport: cli

   tasks:

   - name: "Configure an EVPN instance for a VXLAN in BD view"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       evpn: enable
       provider: "{{ cli }}"

   - name: "Configure a route distinguisher (RD) for a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       route_distinguisher: '22:22'
       provider: "{{ cli }}"

   - name: "Configure VPN targets to both the import and export VPN target lists of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_both: 22:100,22:101
       provider: "{{ cli }}"

   - name: "Configure VPN targets to the import VPN target list of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_import: 22:22,22:23
       provider: "{{ cli }}"

   - name: "Configure VPN targets to the export VPN target list of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_export: 22:38,22:39
       provider: "{{ cli }}"

   - name: "Unconfigure VPN targets to both the import and export VPN target lists of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_both: '22:100'
       state: absent
       provider: "{{ cli }}"

   - name: "Unconfigure VPN targets to the import VPN target list of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_import: '22:22'
       state: absent
       provider: "{{ cli }}"

   - name: "Unconfigure VPN targets to the export VPN target list of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       vpn_target_export: '22:38'
       state: absent
       provider: "{{ cli }}"

   - name: "Unconfigure a route distinguisher (RD) of a BD EVPN instance"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       route_distinguisher: '22:22'
       state: absent
       provider: "{{ cli }}"

   - name: "Unconfigure an EVPN instance for a VXLAN in BD view"
     ce_evpn_bd_vni:
       bridge_domain_id: 20
       evpn: disable
       provider: "{{ cli }}"

RETURN VALUES                   *ce_evpn_bd_vni-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   changed             check to see if a change was made on the device
   boolean    always   Sample:
                       True
                       k/v pairs of end attributes on the device
   end_state  always   Sample:
   dictionary          {'bridge_domain_id': '2', 'evpn': 'enable', 'route_distinguisher': '22:22', 'vpn_target_both': ['22:100', '22:101'], 'vpn_target_export': ['22:38', '22:39'],
                       'vpn_target_import': ['22:22', '22:23']}
   existing            k/v pairs of existing attributes on the device
   dictionary always   Sample:
                       {'bridge_domain_id': '2', 'evpn': 'disable', 'route_distinguisher': None, 'vpn_target_both': [], 'vpn_target_export': [], 'vpn_target_import': []}
                       k/v pairs of parameters passed into module
   proposed   always   Sample:
   dictionary          {'bridge_domain_id': '2', 'evpn': 'enable', 'route_distinguisher': '22:22', 'state': 'present', 'vpn_target_both': ['22:100', '22:101'], 'vpn_target_export': ['22:38',
                       '22:39'], 'vpn_target_import': ['22:22', '22:23']}
                       command list sent to the device
   updates             Sample:
   list       always   ['bridge-domain 2', ' evpn', ' route-distinguisher 22:22', ' vpn-target 22:38 export-extcommunity', ' vpn-target 22:39 export-extcommunity', ' vpn-target 22:100
                       export-extcommunity', ' vpn-target 22:101 export-extcommunity', ' vpn-target 22:22 import-extcommunity', ' vpn-target 22:23 import-extcommunity', ' vpn-target 22:100
                       import-extcommunity', ' vpn-target 22:101 import-extcommunity']

STATUS                   *ce_evpn_bd_vni-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Zhijin Zhou (@QijunPan)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ce_evpn_bd_vni-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ce_evpn_bd_vni_module.html
