SYNOPSIS                   *nxos_interface_ospf*

     • Manages configuration of an OSPF interface instance.

PARAMETERS                   *nxos_interface_ospf-parameters*

             Parameter             Choices/Defaults                                                                      Comments
   area                                              Ospf area associated with this cisco_interface_ospf instance. Valid values are a string, formatted as an IP address (i.e. "0.0.0.0") or as an
   - / required                                      integer.
   bfd                              Choices:         Enables bfd at interface level. This overrides the bfd variable set at the ospf router level.
   string                           • enable         Valid values are 'enable', 'disable' or 'default'.
   added in 2.9                     • disable        Dependency: 'feature bfd'
                                    • default
   cost                                              The cost associated with this cisco_interface_ospf instance.
   -
   dead_interval                                     Time interval an ospf neighbor waits for a hello packet before tearing down adjacencies. Valid values are an integer or the keyword 'default'.
   -
   hello_interval                                    Time between sending successive hello packets. Valid values are an integer or the keyword 'default'.
   -
   interface                                         Name of this cisco_interface resource. Valid value is a string.
   - / required
   message_digest                   Choices:
   boolean                          • no             Enables or disables the usage of message digest authentication.
                                    • yes
   message_digest_algorithm_type    Choices:
   -                                • md5            Algorithm used for authentication among neighboring routers within an area. Valid values are 'md5' and 'default'.
                                    • default
                                    Choices:
   message_digest_encryption_type   • cisco_type_7   Specifies the scheme used for encrypting message_digest_password. Valid values are '3des' or 'cisco_type_7' encryption or 'default'.
   -                                • 3des
                                    • default
   message_digest_key_id                             Md5 authentication key-id associated with the ospf instance. If this is present, message_digest_encryption_type, message_digest_algorithm_type
   -                                                 and message_digest_password are mandatory. Valid value is an integer and 'default'.
   message_digest_password                           Specifies the message_digest password. Valid value is a string.
   -
   network                          Choices:
   -                                • point-to-point Specifies interface ospf network type. Valid values are 'point-to-point' or 'broadcast'.
   added in 2.8                     • broadcast
   ospf                                              Name of the ospf instance.
   - / required
   passive_interface                Choices:         Enable or disable passive-interface state on this interface. true - (enable) Prevent OSPF from establishing an adjacency or sending routing
   boolean                          • no             updates on this interface. false - (disable) Override global 'passive-interface default' for this interface.
                                    • yes
                                                     Deprecated
                                                     Starting with Ansible 2.5 we recommend using connection: network_cli.
                                                     This option is only required if you are using NX-API.
   provider                                          For more information please see the NXOS Platform Options guide.
   dictionary
                                                     ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                                     A dict object containing connection details.
           auth_pass                                 Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing.
           string                                    If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
           added in 2.5.3
           authorize                Choices:         Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to
           boolean                  • no ←           execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE
           added in 2.5.3           • yes            will be used instead.
           host                                      Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the
           string / required                         destination address for the transport.
           password                                  Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or nxapi
           string                                    transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
           port                   Default:           Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port value will
           integer                "0 (use common     default to the appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                                  port)"
           ssh_keyfile                               Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli transport. If the value
           string                                    is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
           timeout                Default:           Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded
           integer                10                 before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc).
           transport                Choices:         Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to the device over
           string / required        • cli ←          cli (ssh) or nxapi.
                                    • nxapi
           use_proxy                Choices:
           boolean                  • no             If no, the environment variables http_proxy and https_proxy will be ignored.
           added in 2.5             • yes ←
           use_ssl                  Choices:
           boolean                  • no ←           Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                                    • yes
           username                                  Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or
           string                                    the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable
                                                     ANSIBLE_NET_USERNAME will be used instead.
           validate_certs           Choices:         If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the
           boolean                  • no             transport argument is not nxapi, this value is ignored.
                                    • yes ←
   state                            Choices:
   -                                • present ←      Determines whether the config should be present or not on the device.
                                    • absent

NOTES                   *nxos_interface_ospf-notes*

   Note

     • Tested against NXOSv 7.3.(0)D1(1) on VIRL
     • Default, where supported, restores params default value.
     • To remove an existing authentication configuration you should use message_digest_key_id=default plus all other options matching their existing values.
     • Loopback interfaces only support ospf network type ‘point-to-point’.
     • state=absent removes the whole OSPF interface configuration.
     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_interface_ospf-examples*

 - nxos_interface_ospf:
     interface: ethernet1/32
     ospf: 1
     area: 1
     bfd: disable
     cost: default

 - nxos_interface_ospf:
     interface: loopback0
     ospf: prod
     area: 0.0.0.0
     bfd: enable
     network: point-to-point
     state: present

RETURN VALUES                   *nxos_interface_ospf-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          commands sent to the device
   list     always   Sample:
                     ['interface Ethernet1/32', 'ip router ospf 1 area 0.0.0.1', 'ip ospf bfd disable']

STATUS                   *nxos_interface_ospf-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_interface_ospf-red hat support*

     • Gabriele Gerbino (@GGabriele)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_interface_ospf-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_interface_ospf_module.html
