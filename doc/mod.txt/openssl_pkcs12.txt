SYNOPSIS                   *openssl_pkcs12*

     • This module allows one to (re-)generate PKCS#12.

REQUIREMENTS                   *openssl_pkcs12-requirements*

   The below requirements are needed on the host that executes this module.

     • python-pyOpenSSL

PARAMETERS                   *openssl_pkcs12-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   action                  Choices:
   string                  • export ←     export or parse a PKCS#12.
                           • parse
                                          The attributes the resulting file or directory should have.
   attributes                             To get supported flags look at the man page for chattr on the target system.
   string                                 This string should contain the attributes in the same order as the one displayed by lsattr.
                                          The = operator is assumed as default, otherwise + or - operators need to be included in the string.
                                          aliases: attr
   backup                  Choices:
   boolean                 • no ←         Create a backup file including a timestamp so you can get the original output file back if you overwrote it with a new one by accident.
   added in 2.8            • yes
   certificate_path                       The path to read certificates and private keys from.
   path                                   Must be in PEM format.
   force                   Choices:
   boolean                 • no ←         Should the file be regenerated even if it already exists.
                           • yes
   friendly_name                          Specifies the friendly name for the certificate and private key.
   string                                 aliases: name
   group                                  Name of the group that should own the file/directory, as would be fed to chown.
   string
   iter_size             Default:         Number of times to repeat the encryption step.
   integer               2048
   maciter_size          Default:         Number of times to repeat the MAC step.
   integer               1
                                          The permissions the resulting file or directory should have.
                                          For those used to /usr/bin/chmod remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it
                                          is an octal number (like 0644 or 01777) or quote it (like '644' or '1777') so Ansible receives a string and can do its own conversion from string into
   mode                                   number.
   string                                 Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
                                          As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r).
                                          As of Ansible 2.6, the mode may also be the special string preserve.
                                          When set to preserve the file will be given the same permissions as the source file.
   other_certificates                     List of other certificates to include. Pre 2.8 this parameter was called ca_certificates
   list / elements=path                   aliases: ca_certificates
   owner                                  Name of the user that should own the file/directory, as would be fed to chown.
   string
   passphrase                             The PKCS#12 password.
   string
   path                                   Filename to write the PKCS#12 file to.
   path / required
   privatekey_passphrase                  Passphrase source to decrypt any input private keys with.
   string
   privatekey_path                        File to read private key from.
   path
   selevel               Default:         The level part of the SELinux file context.
   string                "s0"             This is the MLS/MCS attribute, sometimes known as the range.
                                          When set to _default, it will use the level portion of the policy if available.
   serole                                 The role part of the SELinux file context.
   string                                 When set to _default, it will use the role portion of the policy if available.
   setype                                 The type part of the SELinux file context.
   string                                 When set to _default, it will use the type portion of the policy if available.
   seuser                                 The user part of the SELinux file context.
   string                                 By default it uses the system policy, where applicable.
                                          When set to _default, it will use the user portion of the policy if available.
   src                                    PKCS#12 file path to parse.
   path
   state                   Choices:
   string                  • absent       Whether the file should exist or not. All parameters except path are ignored when state is absent.
                           • present ←
                                          Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
                                          By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured
   unsafe_writes           Choices:       or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be
   boolean                 • no ←         written in an unsafe manner.
                           • yes          This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform
                                          unsafe writes).
                                          IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.

SEE ALSO                   *openssl_pkcs12-see also*

   See also

   openssl_certificate – Generate and/or check OpenSSL certificates
   The official documentation on the openssl_certificate module.

   openssl_csr – Generate OpenSSL Certificate Signing Request (CSR)
   The official documentation on the openssl_csr module.

   openssl_dhparam – Generate OpenSSL Diffie-Hellman Parameters
   The official documentation on the openssl_dhparam module.

   openssl_privatekey – Generate OpenSSL private keys
   The official documentation on the openssl_privatekey module.

   openssl_publickey – Generate an OpenSSL public key from its private key
   The official documentation on the openssl_publickey module.

EXAMPLES                   *openssl_pkcs12-examples*

 - name: Generate PKCS#12 file
   openssl_pkcs12:
     action: export
     path: /opt/certs/ansible.p12
     friendly_name: raclette
     privatekey_path: /opt/certs/keys/key.pem
     certificate_path: /opt/certs/cert.pem
     other_certificates: /opt/certs/ca.pem
     state: present

 - name: Change PKCS#12 file permission
   openssl_pkcs12:
     action: export
     path: /opt/certs/ansible.p12
     friendly_name: raclette
     privatekey_path: /opt/certs/keys/key.pem
     certificate_path: /opt/certs/cert.pem
     other_certificates: /opt/certs/ca.pem
     state: present
     mode: '0600'

 - name: Regen PKCS#12 file
   openssl_pkcs12:
     action: export
     src: /opt/certs/ansible.p12
     path: /opt/certs/ansible.p12
     friendly_name: raclette
     privatekey_path: /opt/certs/keys/key.pem
     certificate_path: /opt/certs/cert.pem
     other_certificates: /opt/certs/ca.pem
     state: present
     mode: '0600'
     force: yes

 - name: Dump/Parse PKCS#12 file
   openssl_pkcs12:
     action: parse
     src: /opt/certs/ansible.p12
     path: /opt/certs/ansible.pem
     state: present

 - name: Remove PKCS#12 file
   openssl_pkcs12:
     path: /opt/certs/ansible.p12
     state: absent

RETURN VALUES                   *openssl_pkcs12-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key               Returned                                                                                  Description
   backup_file                              Name of backup file created.
   string      changed and if backup is yes Sample:
                                            /path/to/[email protected]:22~
   filename                                 Path to the generate PKCS#12 file.
   string      changed or success           Sample:
                                            /opt/certs/ansible.p12
   privatekey                               Path to the TLS/SSL private key the public key was generated from.
   string      changed or success           Sample:
                                            /etc/ssl/private/ansible.com.pem

STATUS                   *openssl_pkcs12-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Guillaume Delpierre (@gdelpierre)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *openssl_pkcs12-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/openssl_pkcs12_module.html
