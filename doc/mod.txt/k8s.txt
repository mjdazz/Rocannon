SYNOPSIS                   *k8s*

     • Use the OpenShift Python client to perform CRUD operations on K8s objects.
     • Pass the object definition from a source file or inline. See examples for reading files and using Jinja templates or vault-encrypted files.
     • Access to the full range of K8s APIs.
     • Use the k8s_info module to obtain a list of items about an object of type kind
     • Authenticate using either a config file, certificates, password or token.
     • Supports check mode.

   Aliases: openshift_raw,k8s_raw

REQUIREMENTS                   *k8s-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • openshift >= 0.6
     • PyYAML >= 3.11

PARAMETERS                   *k8s-parameters*

        Parameter       Choices/Defaults                                                                            Comments
   api_key                                 Token used to authenticate with the API. Can also be specified via K8S_AUTH_API_KEY environment variable.
   string
                                           Use to specify the API version. Use to create, delete, or discover an object without providing a full resource definition. Use in conjunction with kind,
   api_version         Default:            name, and namespace to identify a specific object. If resource definition is provided, the apiVersion from the resource_definition will override this
   string              "v1"                option.
                                           aliases: api, version
                                           Whether to append a hash to a resource name for immutability purposes
   append_hash           Choices:          Applies only to ConfigMap and Secret resources
   boolean               • no              The parameter will be silently ignored for other resource kinds
   added in 2.8          • yes             The full definition of an object is needed to generate the hash - this means that deleting an object created with append_hash will only work if the same
                                           object is passed with state=absent (alternatively, just use state=absent with the name including the generated hash and append_hash=no)
                                           Requires openshift >= 0.7.2
   apply                 Choices:          apply compares the desired resource definition with the previously supplied resource definition, ignoring properties that are automatically generated
   boolean               • no              apply works better with Services than 'force=yes'
   added in 2.9          • yes             Requires openshift >= 0.9.2
                                           mutually exclusive with merge_type
   ca_cert                                 Path to a CA certificate used to authenticate with the API. The full certificate chain must be provided to avoid certificate validation errors. Can also
   path                                    be specified via K8S_AUTH_SSL_CA_CERT environment variable.
                                           aliases: ssl_ca_cert
   client_cert                             Path to a certificate used to authenticate with the API. Can also be specified via K8S_AUTH_CERT_FILE environment variable.
   path                                    aliases: cert_file
   client_key                              Path to a key file used to authenticate with the API. Can also be specified via K8S_AUTH_KEY_FILE environment variable.
   path                                    aliases: key_file
   context                                 The name of a context found in the config file. Can also be specified via K8S_AUTH_CONTEXT environment variable.
   string
   force                 Choices:
   boolean               • no ←            If set to yes, and state is present, an existing object will be replaced.
                         • yes
   host                                    Provide a URL for accessing the API. Can also be specified via K8S_AUTH_HOST environment variable.
   string
   kind                                    Use to specify an object model. Use to create, delete, or discover an object without providing a full resource definition. Use in conjunction with
   string                                  api_version, name, and namespace to identify a specific object. If resource definition is provided, the kind from the resource_definition will override
                                           this option.
   kubeconfig                              Path to an existing Kubernetes config file. If not provided, and no other connection options are provided, the openshift client will attempt to load the
   path                                    default configuration file from ~/.kube/config.json. Can also be specified via K8S_AUTH_KUBECONFIG environment variable.
                                           Whether to override the default patch merge approach with a specific type. By default, the strategic merge will typically be used.
                                           For example, Custom Resource Definitions typically aren't updatable by the usual strategic merge. You may want to use merge if you see "strategic merge
                         Choices:          patch format is not supported"
   merge_type            • json            See https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment
   list                  • merge           Requires openshift >= 0.6.2
   added in 2.7          • strategic-merge If more than one merge_type is given, the merge_types will be tried in order
                                           If openshift >= 0.6.2, this defaults to ['strategic-merge', 'merge'], which is ideal for using the same parameters on resource kinds that combine Custom
                                           Resources and built-in resources. For openshift < 0.6.2, the default is simply strategic-merge.
                                           mutually exclusive with apply
   name                                    Use to specify an object name. Use to create, delete, or discover an object without providing a full resource definition. Use in conjunction with
   string                                  api_version, kind and namespace to identify a specific object. If resource definition is provided, the metadata.name value from the resource_definition
                                           will override this option.
   namespace                               Use to specify an object namespace. Useful when creating, deleting, or discovering an object without providing a full resource definition. Use in
   string                                  conjunction with api_version, kind, and name to identify a specfic object. If resource definition is provided, the metadata.namespace value from the
                                           resource_definition will override this option.
   password                                Provide a password for authenticating with the API. Can also be specified via K8S_AUTH_PASSWORD environment variable.
   string                                  Please read the description of the username option for a discussion of when this option is applicable.
   proxy                                   The URL of an HTTP proxy to use for the connection. Can also be specified via K8S_AUTH_PROXY environment variable.
   -                                       Please note that this module does not pick up typical proxy settings from the environment (e.g. HTTP_PROXY).
   added in 2.9
   resource_definition                     Provide a valid YAML definition (either as a string, list, or dict) for an object when creating or updating. NOTE: kind, api_version, name, and namespace
   -                                       will be overwritten by corresponding values found in the provided resource_definition.
                                           aliases: definition, inline
                                           Provide a path to a file containing a valid YAML definition of an object or objects to be created or updated. Mutually exclusive with resource_definition.
   src                                     NOTE: kind, api_version, name, and namespace will be overwritten by corresponding values found in the configuration read in from the src file.
   path                                    Reads from the local file system. To read from the Ansible controller's file system, including vaulted files, use the file lookup plugin or template
                                           lookup plugin, combined with the from_yaml filter, and pass the result to resource_definition. See Examples below.
   state                 Choices:          Determines if an object should be created, patched, or deleted. When set to present, an object will be created, if it does not already exist. If set to
   string                • absent          absent, an existing object will be deleted. If set to present, an existing object will be patched, if its attributes differ from those specified using
                         • present ←       resource_definition or src.
   username                                Provide a username for authenticating with the API. Can also be specified via K8S_AUTH_USERNAME environment variable.
   string                                  Please note that this only works with clusters configured to use HTTP Basic Auth. If your cluster has a different form of authentication (e.g. OAuth2 in
                                           OpenShift), this option will not work as expected and you should look into the k8s_auth module, as that might do what you need.
   validate
   -                                       how (if at all) to validate the resource definition against the kubernetes schema. Requires the kubernetes-validate python module and openshift >= 0.8.0
   added in 2.8
      fail_on_error      Choices:
      boolean /          • no              whether to fail on validation errors.
      required           • yes
      strict             Choices:
      boolean            • no ←            whether to fail when passing unexpected properties
                         • yes
      version                              version of Kubernetes to validate against. defaults to Kubernetes server version
      -
   validate_certs        Choices:          Whether or not to verify the API server's SSL certificates. Can also be specified via K8S_AUTH_VERIFY_SSL environment variable.
   boolean               • no              aliases: verify_ssl
                         • yes
   wait                  Choices:          Whether to wait for certain resource kinds to end up in the desired state. By default the module exits once Kubernetes has received the request
   boolean               • no ←            Implemented for state=present for Deployment, DaemonSet and Pod, and for state=absent for all resource kinds.
   added in 2.8          • yes             For resource kinds without an implementation, wait returns immediately unless wait_condition is set.
   wait_condition
   -                                       Specifies a custom condition on the status to wait for. Ignored if wait is not set or is set to False.
   added in 2.8
                                           The value of the reason field in your desired condition
      reason                               For example, if a Deployment is paused, The Progressing c(type) will have the DeploymentPaused reason.
      -                                    The possible reasons in a condition are specific to each resource type in Kubernetes. See the API documentation of the status field for a given resource
                                           to see possible choices.
                         Choices:
      status             • yes             The value of the status field in your desired condition.
      -                  • no              For example, if a Deployment is paused, the Progressing type will have the Unknown status.
                         • Unknown
                                           The type of condition to wait for. For example, the Pod resource will set the Ready condition (among others)
      type                                 Required if you are specifying a wait_condition. If left empty, the wait_condition field will be ignored.
      -                                    The possible types for a condition are specific to each resource type in Kubernetes. See the API documentation of the status field for a given resource to
                                           see possible choices.
   wait_sleep          Default:
   -                   5                   Number of seconds to sleep between checks.
   added in 2.9
   wait_timeout        Default:
   -                   120                 How long in seconds to wait for the resource to end up in the desired state. Ignored if wait is not set.
   added in 2.8

NOTES                   *k8s-notes*

   Note

     • If your OpenShift Python library is not 0.9.0 or newer and you are trying to remove an item from an associative array/dictionary, for example a label or an annotation, you will need to
       explicitly set the value of the item to be removed to null. Simply deleting the entry in the dictionary will not remove it from openshift or kubernetes.
     • The OpenShift Python client wraps the K8s Python client, providing full access to all of the APIS and models available on both platforms. For API version details and additional information
       visit https://github.com/openshift/openshift-restclient-python
     • To avoid SSL certificate validation errors when validate_certs is True, the full certificate chain for the API server must be provided via ca_cert or in the kubeconfig file.

EXAMPLES                   *k8s-examples*

 - name: Create a k8s namespace
   k8s:
     name: testing
     api_version: v1
     kind: Namespace
     state: present

 - name: Create a Service object from an inline definition
   k8s:
     state: present
     definition:
       apiVersion: v1
       kind: Service
       metadata:
         name: web
         namespace: testing
         labels:
           app: galaxy
           service: web
       spec:
         selector:
           app: galaxy
           service: web
         ports:
         - protocol: TCP
           targetPort: 8000
           name: port-8000-tcp
           port: 8000

 - name: Create a Service object by reading the definition from a file
   k8s:
     state: present
     src: /testing/service.yml

 - name: Remove an existing Service object
   k8s:
     state: absent
     api_version: v1
     kind: Service
     namespace: testing
     name: web

 # Passing the object definition from a file

 - name: Create a Deployment by reading the definition from a local file
   k8s:
     state: present
     src: /testing/deployment.yml

 - name: >-
     Read definition file from the Ansible controller file system.
     If the definition file has been encrypted with Ansible Vault it will automatically be decrypted.
   k8s:
     state: present
     definition: "{{ lookup('file', '/testing/deployment.yml') }}"

 - name: Read definition file from the Ansible controller file system after Jinja templating
   k8s:
     state: present
     definition: "{{ lookup('template', '/testing/deployment.yml') }}"

 - name: fail on validation errors
   k8s:
     state: present
     definition: "{{ lookup('template', '/testing/deployment.yml') }}"
     validate:
       fail_on_error: yes

 - name: warn on validation errors, check for unexpected properties
   k8s:
     state: present
     definition: "{{ lookup('template', '/testing/deployment.yml') }}"
     validate:
       fail_on_error: no
       strict: yes

RETURN VALUES                   *k8s-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key                              Returned                                                                                 Description
   result        success                                                  The created, patched, or otherwise present object. Will be empty in the case of a deletion.
   complex
     api_version success                                                  The versioned schema of this representation of an object.
     string
     duration                                                             elapsed time of task in seconds
     integer     when wait is true                                        Sample:
                                                                          48
     items       when resource_definition or src contains list of objects Returned only when multiple yaml documents are passed to src or resource_definition
     list
     kind        success                                                  Represents the REST resource this object represents.
     string
     metadata    success                                                  Standard object metadata. Includes name, namespace, annotations, labels, etc.
     complex
     spec        success                                                  Specific attributes of the object. Will vary based on the api_version and kind.
     complex
     status      success                                                  Current status details for the object.
     complex

STATUS                   *k8s-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Chris Houseknecht (@chouseknecht)
     • Fabian von Feilitzsch (@fabianvf)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *k8s-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/k8s_module.html
