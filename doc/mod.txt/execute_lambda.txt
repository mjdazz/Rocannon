SYNOPSIS                   *execute_lambda*

     • This module executes AWS Lambda functions, allowing synchronous and asynchronous invocation.

REQUIREMENTS                   *execute_lambda-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • python >= 2.6

PARAMETERS                   *execute_lambda-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   dry_run                        Choices:       Do not "actually" invoke the function. A DryRun call will check that the caller has permissions to call the function, especially for checking
   boolean                        • no ←         cross-account permissions.
                                  • yes
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   function_arn                                  The name of the function to be invoked
   -
   name                                          The name of the function to be invoked. This can only be used for invocations within the calling account. To invoke a function in another account,
   -                                             use function_arn to specify the full ARN.
   payload                      Default:         A dictionary in any form to be provided as input to the Lambda function.
   -                            {}
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   tail_log                       Choices:       If tail_log=yes, the result of the task will include the last 4 KB of the CloudWatch log for the function execution. Log tailing only works if you
   boolean                        • no ←         use synchronous invocation wait=yes. This is usually used for development or testing Lambdas.
                                  • yes
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←
   version_qualifier            Default:         Which version/alias of the function to run. This defaults to the LATEST revision, but can be set to any existing version or alias. See
   -                            "LATEST"         https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html for details.
   wait                           Choices:       Whether to wait for the function results or not. If wait is no, the task will not return any results. To wait for the Lambda function to complete,
   boolean                        • no           set wait=yes and the result will be available in the output key.
                                  • yes ←

NOTES                   *execute_lambda-notes*

   Note

     • Async invocation will always return an empty output key.
     • Synchronous invocation may result in a function timeout, resulting in an empty output key.
     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *execute_lambda-examples*

 - execute_lambda:
     name: test-function
     # the payload is automatically serialized and sent to the function
     payload:
       foo: bar
       value: 8
   register: response

 # Test that you have sufficient permissions to execute a Lambda function in
 # another account
 - execute_lambda:
     function_arn: arn:aws:lambda:us-east-1:123456789012:function/some-function
     dry_run: true

 - execute_lambda:
     name: test-function
     payload:
       foo: bar
       value: 8
     wait: true
     tail_log: true
   register: response
   # the response will have a `logs` key that will contain a log (up to 4KB) of the function execution in Lambda

 # Pass the Lambda event payload as a json file.
 - execute_lambda:
     name: test-function
     payload: "{{ lookup('file','lambda_event.json') }}"
   register: response

 - execute_lambda:
     name: test-function
     version_qualifier: PRODUCTION

RETURN VALUES                   *execute_lambda-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key          Returned                                                                                   Description
   logs       if tail_log == true The last 4KB of the function logs. Only provided if tail_log is true
   string
   output                         Function output if wait=true and the function returns a value
   dictionary success             Sample:
                                  { 'output': 'something' }
   status                         StatusCode of API call exit (200 for synchronous invokes, 202 for async)
   integer    always              Sample:
                                  200

STATUS                   *execute_lambda-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ryan Scott Brown (@ryansb) <ryansb@redhat.com>

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *execute_lambda-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/execute_lambda_module.html
