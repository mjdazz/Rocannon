SYNOPSIS                   *rax_mon_entity*

     • Create or delete a Rackspace Cloud Monitoring entity, which represents a device to monitor. Entities associate checks and alarms with a target system and provide a convenient, centralized
       place to store IP addresses. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm

REQUIREMENTS                   *rax_mon_entity-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • pyrax

PARAMETERS                   *rax_mon_entity-parameters*

       Parameter                     Choices/Defaults                                                                            Comments
   agent_id                                                           Rackspace monitoring agent on the target device to which this entity is bound. Necessary to collect agent. rax_mon_checks
   -                                                                  against this entity.
   api_key                                                            Rackspace API key, overrides credentials.
   -                                                                  aliases: password
   auth_endpoint      Default:                                        The URI of the authentication service.
   -                  "https://identity.api.rackspacecloud.com/v2.0/"
   credentials                                                        File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   -                                                                  aliases: creds_file
   env                                                                Environment as configured in ~/.pyrax.cfg, see
   -                                                                  https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type      Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -                  "rackspace"
   label                                                              Defines a name for this entity. Must be a non-empty string between 1 and 255 characters long.
   - / required
   metadata                                                           Hash of arbitrary name, value pairs that are passed to associated rax_mon_alarms. Names and values must all be between 1 and
   -                                                                  255 characters long.
   named_ip_addresses                                                 Hash of IP addresses that may be referenced by name by rax_mon_checks added to this entity. Must be a dictionary of with keys
   -                                                                  that are names between 1 and 64 characters long, and values that are valid IPv4 or IPv6 addresses.
   region             Default:                                        Region to create an instance in.
   -                  "DFW"
   state                Choices:
   -                    • present                                     Ensure that an entity with this name exists or does not exist.
                        • absent
   tenant_id                                                          The tenant ID used for authentication.
   -
   tenant_name                                                        The tenant name used for authentication.
   -
   username                                                           Rackspace username, overrides credentials.
   -
   validate_certs       Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean              • no                                          aliases: verify_ssl
                        • yes

NOTES                   *rax_mon_entity-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_mon_entity-examples*

 - name: Entity example
   gather_facts: False
   hosts: local
   connection: local
   tasks:
   - name: Ensure an entity exists
     rax_mon_entity:
       credentials: ~/.rax_pub
       state: present
       label: my_entity
       named_ip_addresses:
         web_box: 192.0.2.4
         db_box: 192.0.2.5
       meta:
         hurf: durf
     register: the_entity

STATUS                   *rax_mon_entity-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ash Wilson (@smashwilson)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_mon_entity-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_mon_entity_module.html
