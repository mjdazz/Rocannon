SYNOPSIS                   *digital_ocean_tag*

     • Create and remove tag(s) to DigitalOcean resource.

REQUIREMENTS                   *digital_ocean_tag-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6

PARAMETERS                   *digital_ocean_tag-parameters*

     Parameter    Choices/Defaults                                                                              Comments
   name                            The name of the tag. The supported characters for names include alphanumeric characters, dashes, and underscores.
   - / required
                                   DigitalOcean OAuth token.
   oauth_token                     There are several other environment variables which can be used to provide this value.
   string                          i.e., - 'DO_API_TOKEN', 'DO_API_KEY', 'DO_OAUTH_TOKEN' and 'OAUTH_TOKEN'
                                   aliases: api_token
   resource_id                     The ID of the resource to operate on.
   -                               The data type of resource_id is changed from integer to string, from version 2.5.
                                   aliases: droplet_id
   resource_type    Choices:       The type of resource to operate on. Currently, only tagging of droplets is supported.
   -                • droplet ←
   state            Choices:
   -                • present ←    Whether the tag should be present or absent on the resource.
                    • absent
   timeout        Default:         The timeout in seconds used for polling DigitalOcean's API.
   integer        30
   validate_certs   Choices:       If set to no, the SSL certificates will not be validated.
   boolean          • no           This should only set to no used on personally controlled sites using self-signed certificates.
                    • yes ←

NOTES                   *digital_ocean_tag-notes*

   Note

     • Two environment variables can be used, DO_API_KEY and DO_API_TOKEN. They both refer to the v2 token.
     • As of Ansible 2.0, Version 2 of the DigitalOcean API is used.

EXAMPLES                   *digital_ocean_tag-examples*

 - name: create a tag
   digital_ocean_tag:
     name: production
     state: present

 - name: tag a resource; creating the tag if it does not exist
   digital_ocean_tag:
     name: "{{ item }}"
     resource_id: "73333005"
     state: present
   loop:
     - staging
     - dbserver

 - name: untag a resource
   digital_ocean_tag:
     name: staging
     resource_id: "73333005"
     state: absent

 # Deleting a tag also untags all the resources that have previously been
 # tagged with it
 - name: remove a tag
   digital_ocean_tag:
     name: dbserver
     state: absent

RETURN VALUES                   *digital_ocean_tag-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key                  Returned                                                                                  Description
   data                                          a DigitalOcean Tag resource
   dictionary success and no resource constraint Sample:
                                                 {'tag': {'name': 'awesome', 'resources': {'droplets': {'count': 0, 'last_tagged': None}}}}

STATUS                   *digital_ocean_tag-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Victor Volle (@kontrafiktion)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *digital_ocean_tag-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/digital_ocean_tag_module.html
