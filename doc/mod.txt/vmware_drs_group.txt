SYNOPSIS                   *vmware_drs_group*

     • This module can be used to create VM/Host groups in a given cluster. Creates a vm group if vms is set. Creates a host group if hosts is set.

REQUIREMENTS                   *vmware_drs_group-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • PyVmomi

PARAMETERS                   *vmware_drs_group-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   cluster_name                       Cluster to create vm/host group.
   string / required
   datacenter                         Datacenter to search for given cluster. If not set, we use first cluster we encounter with cluster_name.
   string                             aliases: datacenter_name
   group_name                         The name of the group to create or remove.
   string / required
   hostname                           The hostname or IP address of the vSphere vCenter or ESXi server.
   string                             If the value is not specified in the task, the value of environment variable VMWARE_HOST will be used instead.
                                      Environment variable support added in Ansible 2.6.
   hosts                              List of hosts to create in group.
   list                               Required only if vms is not set.
                                      The password of the vSphere vCenter or ESXi server.
   password                           If the value is not specified in the task, the value of environment variable VMWARE_PASSWORD will be used instead.
   string                             Environment variable support added in Ansible 2.6.
                                      aliases: pass, pwd
   port              Default:         The port number of the vSphere vCenter or ESXi server.
   integer           443              If the value is not specified in the task, the value of environment variable VMWARE_PORT will be used instead.
   added in 2.5                       Environment variable support added in Ansible 2.6.
   proxy_host                         Address of a proxy that will receive all HTTPS requests and relay them.
   string                             The format is a hostname or a IP.
   added in 2.9                       If the value is not specified in the task, the value of environment variable VMWARE_PROXY_HOST will be used instead.
                                      This feature depends on a version of pyvmomi greater than v6.7.1.2018.12
   proxy_port                         Port of the HTTP proxy that will receive all HTTPS requests and relay them.
   integer                            If the value is not specified in the task, the value of environment variable VMWARE_PROXY_PORT will be used instead.
   added in 2.9
   state               Choices:       If set to present and the group doesn't exists then the group will be created.
   string / required   • present ←    If set to absent and the group exists then the group will be deleted.
                       • absent
                                      The username of the vSphere vCenter or ESXi server.
   username                           If the value is not specified in the task, the value of environment variable VMWARE_USER will be used instead.
   string                             Environment variable support added in Ansible 2.6.
                                      aliases: admin, user
                       Choices:       Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted.
   validate_certs      • no           If the value is not specified in the task, the value of environment variable VMWARE_VALIDATE_CERTS will be used instead.
   boolean             • yes ←        Environment variable support added in Ansible 2.6.
                                      If set to yes, please make sure Python >= 2.7.9 is installed on the given machine.
   vms                                List of vms to create in group.
   list                               Required only if hosts is not set.

NOTES                   *vmware_drs_group-notes*

   Note

     • Tested on vSphere 6.5 and 6.7

EXAMPLES                   *vmware_drs_group-examples*

 ---
 - name: "Create DRS VM group"
   delegate_to: localhost
   vmware_drs_group:
     hostname: "{{ vcenter_hostname }}"
     password: "{{ vcenter_password }}"
     username: "{{ vcenter_username }}"
     cluster_name: DC0_C0
     datacenter_name: DC0
     group_name: TEST_VM_01
     vms:
       - DC0_C0_RP0_VM0
       - DC0_C0_RP0_VM1
     state: present

 - name: "Create DRS Host group"
   delegate_to: localhost
   vmware_drs_group:
     hostname: "{{ vcenter_hostname }}"
     password: "{{ vcenter_password }}"
     username: "{{ vcenter_username }}"
     cluster_name: DC0_C0
     datacenter_name: DC0
     group_name: TEST_HOST_01
     hosts:
       - DC0_C0_H0
       - DC0_C0_H1
       - DC0_C0_H2
     state: present

 - name: "Delete DRS Host group"
   delegate_to: localhost
   vmware_drs_group:
     hostname: "{{ vcenter_hostname }}"
     password: "{{ vcenter_password }}"
     username: "{{ vcenter_username }}"
     cluster_name: DC0_C0
     datacenter_name: DC0
     group_name: TEST_HOST_01
     state: absent

RETURN VALUES                   *vmware_drs_group-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key       Returned                                                                                Description
                            Metadata about DRS group created
   drs_group_facts always   Sample:
   dictionary               {'drs_group_facts': {'changed': True, 'failed': False, 'msg': 'Created host group TEST_HOST_01 successfully', 'result': {'DC0_C0': [{'group_name': 'TEST_HOST_01',
                            'hosts': ['DC0_C0_H0', 'DC0_C0_H1', 'DC0_C0_H2'], 'type': 'host'}]}}}

STATUS                   *vmware_drs_group-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Karsten Kaj Jakobsen (@karstenjakobsen)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *vmware_drs_group-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/vmware_drs_group_module.html
