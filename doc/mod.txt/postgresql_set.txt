SYNOPSIS                   *postgresql_set*

     • Allows to change a PostgreSQL server configuration parameter.
     • The module uses ALTER SYSTEM command and applies changes by reload server configuration.
     • ALTER SYSTEM is used for changing server configuration parameters across the entire database cluster.
     • It can be more convenient and safe than the traditional method of manually editing the postgresql.conf file.
     • ALTER SYSTEM writes the given parameter setting to the $PGDATA/postgresql.auto.conf file, which is read in addition to postgresql.conf.
     • The module allows to reset parameter to boot_val (cluster initial value) by reset=yes or remove parameter string from postgresql.auto.conf and reload value=default (for settings with
       postmaster context restart is required).
     • After change you can see in the ansible output the previous and the new parameter value and other information using returned values and debug module.

REQUIREMENTS                   *postgresql_set-requirements*

   The below requirements are needed on the host that executes this module.

     • psycopg2

PARAMETERS                   *postgresql_set-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   ca_cert                            Specifies the name of a file containing SSL certificate authority (CA) certificate(s).
   string                             If the file exists, the server's certificate will be verified to be signed by one of these authorities.
                                      aliases: ssl_rootcert
   db                                 Name of database to connect.
   string                             aliases: login_db
   login_host                         Host running the database.
   string
   login_password                     The password used to authenticate with.
   string
   login_unix_socket                  Path to a Unix domain socket for local connections.
   string
   login_user        Default:         The username used to authenticate with.
   string            "postgres"
   name                               Name of PostgreSQL server parameter.
   string / required
   port              Default:         Database port to connect to.
   integer           5432             aliases: login_port
   reset               Choices:
   boolean             • no ←         Restore parameter to initial state (boot_val). Mutually exclusive with value.
                       • yes
   session_role                       Switch to session_role after connecting. The specified session_role must be a role that the current login_user is a member of.
   string                             Permissions checking for SQL commands is carried out as though the session_role were the one that had logged in originally.
                       Choices:
                       • allow
   ssl_mode            • disable      Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.
   string              • prefer ←     See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.
                       • require      Default of prefer matches libpq default.
                       • verify-ca
                       • verify-full
   value                              Parameter value to set.
   string / required                  To remove parameter string from postgresql.auto.conf and reload the server configuration you must pass value=default. With value=default the playbook always
                                      returns changed is true.

NOTES                   *postgresql_set-notes*

   Note

     • Supported version of PostgreSQL is 9.4 and later.
     • Pay attention, change setting with ‘postmaster’ context can return changed is true when actually nothing changes because the same value may be presented in several different form, for
       example, 1024MB, 1GB, etc. However in pg_settings system view it can be defined like 131072 number of 8kB pages. The final check of the parameter value cannot compare it because the server
       was not restarted and the value in pg_settings is not updated yet.
     • For some parameters restart of PostgreSQL server is required. See official documentation https://www.postgresql.org/docs/current/view-pg-settings.html.
     • The default authentication assumes that you are either logging in as or sudo’ing to the postgres account on the host.
     • To avoid “Peer authentication failed for user postgres” error, use postgres user as a become_user.
     • This module uses psycopg2, a Python PostgreSQL database adapter. You must ensure that psycopg2 is installed on the host before using this module.
     • If the remote host is the PostgreSQL server (which is the default case), then PostgreSQL must also be installed on the remote host.
     • For Ubuntu-based systems, install the postgresql, libpq-dev, and python-psycopg2 packages on the remote host before using this module.
     • The ca_cert parameter requires at least Postgres version 8.4 and psycopg2 version 2.4.3.

SEE ALSO                   *postgresql_set-see also*

   See also

   postgresql_info – Gather information about PostgreSQL servers
   The official documentation on the postgresql_info module.

   PostgreSQL server configuration
   General information about PostgreSQL server configuration.

   PostgreSQL view pg_settings reference
   Complete reference of the pg_settings view documentation.

   PostgreSQL ALTER SYSTEM command reference
   Complete reference of the ALTER SYSTEM command documentation.

EXAMPLES                   *postgresql_set-examples*

 - name: Restore wal_keep_segments parameter to initial state
   postgresql_set:
     name: wal_keep_segments
     reset: yes

 # Set work_mem parameter to 32MB and show what's been changed and restart is required or not
 # (output example: "msg": "work_mem 4MB >> 64MB restart_req: False")
 - name: Set work mem parameter
   postgresql_set:
     name: work_mem
     value: 32mb
   register: set

 - debug:
     msg: "{{ set.name }} {{ set.prev_val_pretty }} >> {{ set.value_pretty }} restart_req: {{ set.restart_required }}"
   when: set.changed
 # Ensure that the restart of PostgreSQL server must be required for some parameters.
 # In this situation you see the same parameter in prev_val and value_prettyue, but 'changed=True'
 # (If you passed the value that was different from the current server setting).

 - name: Set log_min_duration_statement parameter to 1 second
   postgresql_set:
     name: log_min_duration_statement
     value: 1s

 - name: Set wal_log_hints parameter to default value (remove parameter from postgresql.auto.conf)
   postgresql_set:
     name: wal_log_hints
     value: default

RETURN VALUES                   *postgresql_set-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key        Returned                                                                               Description
   context                   PostgreSQL setting context.
   string           always   Sample:
                             user
   name                      Name of PostgreSQL server parameter.
   string           always   Sample:
                             shared_buffers
   prev_val_pretty           Information about previous state of the parameter.
   string           always   Sample:
                             4MB
   restart_required          Information about parameter current state.
   boolean          always   Sample:
                             True
                             Dictionary that contains the current parameter value (at the time of playbook finish).
   value                     Pay attention that for real change some parameters restart of PostgreSQL server is required.
   dictionary       always   Returns the current value in the check mode.
                             Sample:
                             {'value': 67108864, 'unit': 'b'}
   value_pretty              Information about current state of the parameter.
   string           always   Sample:
                             64MB

STATUS                   *postgresql_set-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Andrew Klychkov (@Andersson007)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *postgresql_set-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/postgresql_set_module.html
