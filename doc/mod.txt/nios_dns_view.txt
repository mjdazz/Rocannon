SYNOPSIS                   *nios_dns_view*

     • Adds and/or removes instances of DNS view objects from Infoblox NIOS servers. This module manages NIOS view objects using the Infoblox WAPI interface over REST.
     • Updates instances of DNS view object from Infoblox NIOS servers.

REQUIREMENTS                   *nios_dns_view-requirements*

   The below requirements are needed on the host that executes this module.

     • infoblox-client

PARAMETERS                   *nios_dns_view-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   comment                                Configures a text string comment to be associated with the instance of this object. The provided text string will be configured on the object instance.
   -
   extattrs                               Allows for the configuration of Extensible Attributes on the instance of the object. This argument accepts a set of key / value pairs for configuration.
   -
   name                                   Specifies the fully qualified hostname to add or remove from the system. User can also update the hostname as it is possible to pass a dict containing
   - / required                           new_name, old_name. See examples.
                                          aliases: view
   network_view          Default:         Specifies the name of the network view to assign the configured DNS view to. The network view must already be configured on the target system.
   - / required          "default"
   provider                               A dict object containing connection details.
   dictionary
    host                                  Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST
    string / required                     Value can also be specified using INFOBLOX_HOST environment variable.
    http_request_timeout Default:         The amount of time before to wait before receiving a response
    integer              10               Value can also be specified using INFOBLOX_HTTP_REQUEST_TIMEOUT environment variable.
    max_results          Default:         Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects
    integer              1000             would exceed the setting.
                                          Value can also be specified using INFOBLOX_MAX_RESULTS environment variable.
    max_retries          Default:         Configures the number of attempted retries before the connection is declared usable
    integer              3                Value can also be specified using INFOBLOX_MAX_RETRIES environment variable.
    password                              Specifies the password to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_PASSWORD environment variable.
    username                              Configures the username to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_USERNAME environment variable.
    validate_certs         Choices:       Boolean value to enable or disable verifying SSL certificates
    boolean                • no ←         Value can also be specified using INFOBLOX_SSL_VERIFY environment variable.
                           • yes          aliases: ssl_verify
    wapi_version         Default:         Specifies the version of WAPI to use
    string               "2.1"            Value can also be specified using INFOBLOX_WAP_VERSION environment variable.
                                          Until ansible 2.8 the default WAPI was 1.4
   state                   Choices:       Configures the intended state of the instance of the object on the NIOS server. When this value is set to present, the object is configured on the device
   -                       • present ←    and when this value is set to absent the value is removed (if necessary) from the device.
                           • absent

NOTES                   *nios_dns_view-notes*

   Note

     • This module must be run locally, which can be achieved by specifying connection: local.
     • Please read the Infoblox Guide for more detailed information on how to use Infoblox with Ansible.

EXAMPLES                   *nios_dns_view-examples*

 - name: configure a new dns view instance
   nios_dns_view:
     name: ansible-dns
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: update the comment for dns view
   nios_dns_view:
     name: ansible-dns
     comment: this is an example comment
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: remove the dns view instance
   nios_dns_view:
     name: ansible-dns
     state: absent
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local
 - name: update the dns view instance
   nios_dns_view:
     name: {new_name: ansible-dns-new, old_name: ansible-dns}
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local

STATUS                   *nios_dns_view-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Peter Sprygada (@privateip)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nios_dns_view-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nios_dns_view_module.html
