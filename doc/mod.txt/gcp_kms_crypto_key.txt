SYNOPSIS                   *gcp_kms_crypto_key*

     • A CryptoKey represents a logical key that can be used for cryptographic operations.

REQUIREMENTS                   *gcp_kms_crypto_key-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_kms_crypto_key-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
   key_ring                                    The KeyRing that this key belongs to.
   string / required                           Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
   labels                                      Labels with user-defined metadata to apply to this resource.
   dictionary
   name                                        The resource name for the CryptoKey.
   string / required
   project                                     The Google Cloud Platform project to use.
   string
   purpose                  Default:           Immutable purpose of CryptoKey. See https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose for
   string                   "ENCRYPT_DECRYPT"  inputs.
                                               Some valid choices include: "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT"
   rotation_period                             Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
   string                                      The first rotation will take place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits,
                                               followed by the letter `s` (seconds). It must be greater than a day (ie, 86400).
   scopes                                      Array of scopes to be used.
   list
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                      Choices:
   string                     • present ←      Whether the given object should exist in GCP
                              • absent
   version_template                            A template describing settings for new crypto key versions.
   dictionary
       algorithm                               The algorithm to use when creating a version based on this template.
       string / required                       See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
       protection_level                        The protection level to use when creating a version based on this template.
       string                                  Some valid choices include: "SOFTWARE", "HSM"

NOTES                   *gcp_kms_crypto_key-notes*

   Note

     • API Reference: https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys
     • Creating a key: https://cloud.google.com/kms/docs/creating-keys#create_a_key
     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_kms_crypto_key-examples*

 - name: create a key ring
   gcp_kms_key_ring:
     name: key-key-ring
     location: us-central1
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: keyring

 - name: create a crypto key
   gcp_kms_crypto_key:
     name: test_object
     key_ring: projects/{{ gcp_project }}/locations/us-central1/keyRings/key-key-ring
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_kms_crypto_key-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key        Returned                                                                               Description
   creationTime      success  The time that this resource was created on the server.
   string                     This is in RFC3339 text format.
   keyRing           success  The KeyRing that this key belongs to.
   string                     Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
   labels            success  Labels with user-defined metadata to apply to this resource.
   dictionary
   name              success  The resource name for the CryptoKey.
   string
   purpose           success  Immutable purpose of CryptoKey. See https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose for inputs.
   string
   rotationPeriod             Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
   string            success  The first rotation will take place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits, followed by the
                              letter `s` (seconds). It must be greater than a day (ie, 86400).
   versionTemplate   success  A template describing settings for new crypto key versions.
   complex
     algorithm       success  The algorithm to use when creating a version based on this template.
     string                   See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
     protectionLevel success  The protection level to use when creating a version based on this template.
     string

STATUS                   *gcp_kms_crypto_key-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_kms_crypto_key-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_kms_crypto_key_module.html
