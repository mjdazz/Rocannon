SYNOPSIS                   *keycloak_group*

     • This module allows you to add, remove or modify Keycloak groups via the Keycloak REST API. It requires access to the REST API via OpenID Connect; the user connecting and the client being
       used must have the requisite access rights. In a default Keycloak installation, admin-cli and an admin user would work, as would a separate client definition with the scope tailored to your
       needs and a user having the expected roles.
     • The names of module options are snake_cased versions of the camelCase ones found in the Keycloak API and its documentation at http://www.keycloak.org/docs-api/3.3/rest-api/.
     • Attributes are multi-valued in the Keycloak API. All attributes are lists of individual values and will be returned that way by this module. You may pass single values for attributes when
       calling the module, and this will be translated into a list suitable for the API.
     • When updating a group, where possible provide the group ID to the module. This removes a lookup to the API to translate the name into the group ID.

PARAMETERS                   *keycloak_group-parameters*

       Parameter      Choices/Defaults                                                                            Comments
   attributes                          A dict of key/value pairs to set as custom attributes for the group.
   dictionary                          Values may be single values (e.g. a string) or a list of strings.
   auth_client_id     Default:         OpenID Connect client_id to authenticate to the API with.
   string / required  "admin-cli"
   auth_client_secret                  Client Secret to use in conjunction with auth_client_id (if required).
   string
   auth_keycloak_url                   URL to the Keycloak instance.
   string / required                   aliases: url
   auth_password                       Password to authenticate for API access with.
   string / required                   aliases: password
   auth_realm                          Keycloak realm name to authenticate to for API access.
   string / required
   auth_username                       Username to authenticate for API access with.
   string / required                   aliases: username
   id                                  The unique identifier for this group.
   string                              This parameter is not required for updating or deleting a group but providing it will reduce the number of API calls required.
   name                                Name of the group.
   string                              This parameter is required only when creating or updating the group.
   realm              Default:         They Keycloak realm under which this group resides.
   string             "master"
   state                Choices:       State of the group.
   string / required    • present ←    On present, the group will be created if it does not yet exist, or updated with the parameters you provide.
                        • absent       On absent, the group will be removed if it exists.
   validate_certs       Choices:
   boolean              • no           Verify TLS certificates (do not disable this in production).
                        • yes ←

NOTES                   *keycloak_group-notes*

   Note

     • Presently, the realmRoles, clientRoles and access attributes returned by the Keycloak API are read-only for groups. This limitation will be removed in a later version of this module.

EXAMPLES                   *keycloak_group-examples*

 - name: Create a Keycloak group
   keycloak_group:
     name: my-new-kc-group
     realm: MyCustomRealm
     state: present
     auth_client_id: admin-cli
     auth_keycloak_url: https://auth.example.com/auth
     auth_realm: master
     auth_username: USERNAME
     auth_password: PASSWORD
   delegate_to: localhost

 - name: Delete a keycloak group
   keycloak_group:
     id: '9d59aa76-2755-48c6-b1af-beb70a82c3cd'
     state: absent
     realm: MyCustomRealm
     auth_client_id: admin-cli
     auth_keycloak_url: https://auth.example.com/auth
     auth_realm: master
     auth_username: USERNAME
     auth_password: PASSWORD
   delegate_to: localhost

 - name: Delete a Keycloak group based on name
   keycloak_group:
     name: my-group-for-deletion
     state: absent
     auth_client_id: admin-cli
     auth_keycloak_url: https://auth.example.com/auth
     auth_realm: master
     auth_username: USERNAME
     auth_password: PASSWORD
   delegate_to: localhost

 - name: Update the name of a Keycloak group
   keycloak_group:
     id: '9d59aa76-2755-48c6-b1af-beb70a82c3cd'
     name: an-updated-kc-group-name
     state: present
     auth_client_id: admin-cli
     auth_keycloak_url: https://auth.example.com/auth
     auth_realm: master
     auth_username: USERNAME
     auth_password: PASSWORD
   delegate_to: localhost

 - name: Create a keycloak group with some custom attributes
   keycloak_group:
     auth_client_id: admin-cli
     auth_keycloak_url: https://auth.example.com/auth
     auth_realm: master
     auth_username: USERNAME
     auth_password: PASSWORD
     name: my-new_group
     attributes:
         attrib1: value1
         attrib2: value2
         attrib3:
             - with
             - numerous
             - individual
             - list
             - items
   delegate_to: localhost

RETURN VALUES                   *keycloak_group-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key      Returned                                                                                 Description
   group         always   Group representation of the group after module execution (sample is truncated).
   complex
     access               A dict describing the accesses you have to this group based on the credentials used.
     dictionary  always   Sample:
                          {'manage': True, 'manageMembership': True, 'view': True}
     attributes           Attributes applied to this group
     dictionary  always   Sample:
                          {'attr1': ['val1', 'val2', 'val3']}
     clientRoles always   A list of client-level roles granted to this group
     list
     id                   GUID that identifies the group
     string      always   Sample:
                          23f38145-3195-462c-97e7-97041ccea73e
     name                 Name of the group
     string      always   Sample:
                          grp-test-123
     path                 URI path to the group
     string      always   Sample:
                          /grp-test-123
     realmRoles  always   An array of the realm-level roles granted to this group
     list
     subGroups   always   A list of groups that are children of this group. These groups will have the same parameters as documented here.
     list

STATUS                   *keycloak_group-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Adam Goossens (@adamgoossens)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *keycloak_group-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/keycloak_group_module.html
