SYNOPSIS                   *rax_mon_notification_plan*

     • Create or delete a Rackspace Cloud Monitoring notification plan by associating existing rax_mon_notifications with severity levels. Rackspace monitoring module flow | rax_mon_entity ->
       rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm

REQUIREMENTS                   *rax_mon_notification_plan-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • pyrax

PARAMETERS                   *rax_mon_notification_plan-parameters*

     Parameter                   Choices/Defaults                                                                              Comments
   api_key                                                        Rackspace API key, overrides credentials.
   -                                                              aliases: password
   auth_endpoint  Default:                                        The URI of the authentication service.
   -              "https://identity.api.rackspacecloud.com/v2.0/"
   credentials                                                    File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   -                                                              aliases: creds_file
   critical_state                                                 Notification list to use when the alarm state is CRITICAL. Must be an array of valid rax_mon_notification ids.
   -
   env                                                            Environment as configured in ~/.pyrax.cfg, see
   -                                                              https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type  Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -              "rackspace"
   label                                                          Defines a friendly name for this notification plan. String between 1 and 255 characters long.
   - / required
   ok_state                                                       Notification list to use when the alarm state is OK. Must be an array of valid rax_mon_notification ids.
   -
   region         Default:                                        Region to create an instance in.
   -              "DFW"
   state            Choices:
   -                • present                                     Ensure that the notification plan with this label exists or does not exist.
                    • absent
   tenant_id                                                      The tenant ID used for authentication.
   -
   tenant_name                                                    The tenant name used for authentication.
   -
   username                                                       Rackspace username, overrides credentials.
   -
   validate_certs   Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean          • no                                          aliases: verify_ssl
                    • yes
   warning_state                                                  Notification list to use when the alarm state is WARNING. Must be an array of valid rax_mon_notification ids.
   -

NOTES                   *rax_mon_notification_plan-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_mon_notification_plan-examples*

 - name: Example notification plan
   gather_facts: False
   hosts: local
   connection: local
   tasks:
   - name: Establish who gets called when.
     rax_mon_notification_plan:
       credentials: ~/.rax_pub
       state: present
       label: defcon1
       critical_state:
       - "{{ everyone['notification']['id'] }}"
       warning_state:
       - "{{ opsfloor['notification']['id'] }}"
     register: defcon1

STATUS                   *rax_mon_notification_plan-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ash Wilson (@smashwilson)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_mon_notification_plan-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_mon_notification_plan_module.html
