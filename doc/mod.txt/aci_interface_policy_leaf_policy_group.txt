SYNOPSIS                   *aci_interface_policy_leaf_policy_group*

     • Manage fabric interface policy leaf policy groups on Cisco ACI fabrics.

Parameters¶

               Parameter              Choices/Defaults                                                                    Comments
   aep                                                 Choice of attached_entity_profile (AEP) to be used as part of the leaf policy group to be created.
   string                                              aliases: aep_name
   cdp_policy                                          Choice of cdp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: cdp_policy_name
                                                       The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
   certificate_name                                    If a private_key filename was provided, this defaults to the private_key basename, without extension.
   string                                              If PEM-formatted content was provided for private_key, this defaults to the username value.
                                                       aliases: cert_name
   description                                         Description for the leaf policy group to be created.
   string                                              aliases: descr
   egress_data_plane_policing_policy                   Choice of egress_data_plane_policing_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: egress_data_plane_policing_policy_name
   fibre_channel_interface_policy                      Choice of fibre_channel_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: fibre_channel_interface_policy_name
   host                                                IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                                   aliases: hostname
   ingress_data_plane_policing_policy                  Choice of ingress_data_plane_policing_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: ingress_data_plane_policing_policy_name
   l2_interface_policy                                 Choice of l2_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: l2_interface_policy_name
                                        Choices:       Selector for the type of leaf policy group we want to create.
   lag_type                             • leaf         leaf for Leaf Access Port Policy Group
   string / required                    • link         link for Port Channel (PC)
                                        • node         node for Virtual Port Channel (VPC)
                                                       aliases: lag_type_name
   link_level_policy                                   Choice of link_level_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: link_level_policy_name
   lldp_policy                                         Choice of lldp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: lldp_policy_name
   mcp_policy                                          Choice of mcp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: mcp_policy_name
   monitoring_policy                                   Choice of monitoring_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: monitoring_policy_name
                                        Choices:       Influence the output of this ACI module.
   output_level                         • debug        normal means the standard output, incl. current dict
   string                               • info         info adds informational output, incl. previous, proposed and sent dicts
                                        • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                                            The password to use for authentication.
   string / required                                   This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   policy_group                                        Name of the leaf policy group to be added/deleted.
   string                                              aliases: name, policy_group_name
   port                                                Port number to be used for REST connection.
   integer                                             The default value depends on parameter use_ssl.
   port_channel_policy                                 Choice of port_channel_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: port_channel_policy_name
   port_security_policy                                Choice of port_security_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: port_security_policy_name
   priority_flow_control_policy                        Choice of priority_flow_control_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: priority_flow_control_policy_name
                                                       Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                                         This value also influences the default certificate_name that is used.
   string / required                                   This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                                       aliases: cert_key
   slow_drain_policy                                   Choice of slow_drain_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: slow_drain_policy_name
                                        Choices:
   state                                • absent       Use present or absent for adding or removing.
   string                               • present ←    Use query for listing an object or multiple objects.
                                        • query
   storm_control_interface_policy                      Choice of storm_control_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: storm_control_interface_policy_name
   stp_interface_policy                                Choice of stp_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: stp_interface_policy_name
   timeout                            Default:         The socket level timeout in seconds.
   integer                            30
   use_proxy                            Choices:
   boolean                              • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                                        • yes ←
   use_ssl                              Choices:
   boolean                              • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                                        • yes ←
   username                           Default:         The username to use for authentication.
   string                             "admin"          aliases: user
   validate_certs                       Choices:       If no, SSL certificates will not be validated.
   boolean                              • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                                        • yes ←

Notes¶

   Note

     • When using the module please select the appropriate link_aggregation_type (lag_type). link for Port Channel(PC), node for Virtual Port Channel(VPC) and leaf for Leaf Access Port Policy
       Group.

See Also¶

   See also

   APIC Management Information Model reference
   More information about the internal APIC classes infra:AccBndlGrp and infra:AccPortGrp.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

Examples¶

 - name: Create a Port Channel (PC) Interface Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: link
     policy_group: policygroupname
     description: policygroupname description
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Create a Virtual Port Channel (VPC) Interface Policy Group (no description)
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: node
     policy_group: policygroupname
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Create a Leaf Access Port Policy Group (no description)
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: leaf
     policy_group: policygroupname
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Query all Leaf Access Port Policy Groups of type link
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: link
     state: query
   delegate_to: localhost
   register: query_result

 - name: Query a specific Lead Access Port Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: leaf
     policy_group: policygroupname
     state: query
   delegate_to: localhost
   register: query_result

 - name: Delete an Interface policy Leaf Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: type_name
     policy_group: policygroupname
     state: absent
   delegate_to: localhost

Return Values¶

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

  Authors¶

     • Bruno Calogero (@brunocalogero)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

REQUIREMENTS                   *aci_interface_policy_leaf_policy_group-requirements*

PARAMETERS                   *aci_interface_policy_leaf_policy_group-parameters*

               Parameter              Choices/Defaults                                                                    Comments
   aep                                                 Choice of attached_entity_profile (AEP) to be used as part of the leaf policy group to be created.
   string                                              aliases: aep_name
   cdp_policy                                          Choice of cdp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: cdp_policy_name
                                                       The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
   certificate_name                                    If a private_key filename was provided, this defaults to the private_key basename, without extension.
   string                                              If PEM-formatted content was provided for private_key, this defaults to the username value.
                                                       aliases: cert_name
   description                                         Description for the leaf policy group to be created.
   string                                              aliases: descr
   egress_data_plane_policing_policy                   Choice of egress_data_plane_policing_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: egress_data_plane_policing_policy_name
   fibre_channel_interface_policy                      Choice of fibre_channel_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: fibre_channel_interface_policy_name
   host                                                IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                                   aliases: hostname
   ingress_data_plane_policing_policy                  Choice of ingress_data_plane_policing_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: ingress_data_plane_policing_policy_name
   l2_interface_policy                                 Choice of l2_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: l2_interface_policy_name
                                        Choices:       Selector for the type of leaf policy group we want to create.
   lag_type                             • leaf         leaf for Leaf Access Port Policy Group
   string / required                    • link         link for Port Channel (PC)
                                        • node         node for Virtual Port Channel (VPC)
                                                       aliases: lag_type_name
   link_level_policy                                   Choice of link_level_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: link_level_policy_name
   lldp_policy                                         Choice of lldp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: lldp_policy_name
   mcp_policy                                          Choice of mcp_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: mcp_policy_name
   monitoring_policy                                   Choice of monitoring_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: monitoring_policy_name
                                        Choices:       Influence the output of this ACI module.
   output_level                         • debug        normal means the standard output, incl. current dict
   string                               • info         info adds informational output, incl. previous, proposed and sent dicts
                                        • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                                            The password to use for authentication.
   string / required                                   This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   policy_group                                        Name of the leaf policy group to be added/deleted.
   string                                              aliases: name, policy_group_name
   port                                                Port number to be used for REST connection.
   integer                                             The default value depends on parameter use_ssl.
   port_channel_policy                                 Choice of port_channel_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: port_channel_policy_name
   port_security_policy                                Choice of port_security_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: port_security_policy_name
   priority_flow_control_policy                        Choice of priority_flow_control_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: priority_flow_control_policy_name
                                                       Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                                         This value also influences the default certificate_name that is used.
   string / required                                   This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                                       aliases: cert_key
   slow_drain_policy                                   Choice of slow_drain_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: slow_drain_policy_name
                                        Choices:
   state                                • absent       Use present or absent for adding or removing.
   string                               • present ←    Use query for listing an object or multiple objects.
                                        • query
   storm_control_interface_policy                      Choice of storm_control_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: storm_control_interface_policy_name
   stp_interface_policy                                Choice of stp_interface_policy to be used as part of the leaf policy group to be created.
   string                                              aliases: stp_interface_policy_name
   timeout                            Default:         The socket level timeout in seconds.
   integer                            30
   use_proxy                            Choices:
   boolean                              • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                                        • yes ←
   use_ssl                              Choices:
   boolean                              • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                                        • yes ←
   username                           Default:         The username to use for authentication.
   string                             "admin"          aliases: user
   validate_certs                       Choices:       If no, SSL certificates will not be validated.
   boolean                              • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                                        • yes ←

NOTES                   *aci_interface_policy_leaf_policy_group-notes*

   Note

     • When using the module please select the appropriate link_aggregation_type (lag_type). link for Port Channel(PC), node for Virtual Port Channel(VPC) and leaf for Leaf Access Port Policy
       Group.

See Also¶

   See also

   APIC Management Information Model reference
   More information about the internal APIC classes infra:AccBndlGrp and infra:AccPortGrp.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

EXAMPLES                   *aci_interface_policy_leaf_policy_group-examples*

 - name: Create a Port Channel (PC) Interface Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: link
     policy_group: policygroupname
     description: policygroupname description
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Create a Virtual Port Channel (VPC) Interface Policy Group (no description)
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: node
     policy_group: policygroupname
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Create a Leaf Access Port Policy Group (no description)
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: leaf
     policy_group: policygroupname
     link_level_policy: whateverlinklevelpolicy
     fibre_channel_interface_policy: whateverfcpolicy
     state: present
   delegate_to: localhost

 - name: Query all Leaf Access Port Policy Groups of type link
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: link
     state: query
   delegate_to: localhost
   register: query_result

 - name: Query a specific Lead Access Port Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: leaf
     policy_group: policygroupname
     state: query
   delegate_to: localhost
   register: query_result

 - name: Delete an Interface policy Leaf Policy Group
   aci_interface_policy_leaf_policy_group:
     host: apic
     username: admin
     password: SomeSecretPassword
     lag_type: type_name
     policy_group: policygroupname
     state: absent
   delegate_to: localhost

RETURN VALUES                   *aci_interface_policy_leaf_policy_group-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

STATUS                   *aci_interface_policy_leaf_policy_group-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Bruno Calogero (@brunocalogero)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aci_interface_policy_leaf_policy_group-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aci_interface_policy_leaf_policy_group_module.html
