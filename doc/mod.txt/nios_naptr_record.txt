SYNOPSIS                   *nios_naptr_record*

     • Adds and/or removes instances of NAPTR record objects from Infoblox NIOS servers. This module manages NIOS record:naptr objects using the Infoblox WAPI interface over REST.

REQUIREMENTS                   *nios_naptr_record-requirements*

   The below requirements are needed on the host that executes this module.

     • infoblox_client

PARAMETERS                   *nios_naptr_record-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   comment                                Configures a text string comment to be associated with the instance of this object. The provided text string will be configured on the object instance.
   -
   extattrs                               Allows for the configuration of Extensible Attributes on the instance of the object. This argument accepts a set of key / value pairs for configuration.
   -
   flags                                  Configures the flags field for this NAPTR record. These control the interpretation of the fields for an NAPTR record object. Supported values for the flags
   -                                      field are "U", "S", "P" and "A".
   name                                   Specifies the fully qualified hostname to add or remove from the system
   - / required
   order                                  Configures the order (0-65535) for this NAPTR record. This parameter specifies the order in which the NAPTR rules are applied when multiple rules are
   - / required                           present.
   preference                             Configures the preference (0-65535) for this NAPTR record. The preference field determines the order NAPTR records are processed when multiple records with
   - / required                           the same order parameter are present.
   provider                               A dict object containing connection details.
   dictionary
    host                                  Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST
    string / required                     Value can also be specified using INFOBLOX_HOST environment variable.
    http_request_timeout Default:         The amount of time before to wait before receiving a response
    integer              10               Value can also be specified using INFOBLOX_HTTP_REQUEST_TIMEOUT environment variable.
    max_results          Default:         Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects
    integer              1000             would exceed the setting.
                                          Value can also be specified using INFOBLOX_MAX_RESULTS environment variable.
    max_retries          Default:         Configures the number of attempted retries before the connection is declared usable
    integer              3                Value can also be specified using INFOBLOX_MAX_RETRIES environment variable.
    password                              Specifies the password to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_PASSWORD environment variable.
    username                              Configures the username to use to authenticate the connection to the remote instance of NIOS.
    string                                Value can also be specified using INFOBLOX_USERNAME environment variable.
    validate_certs         Choices:       Boolean value to enable or disable verifying SSL certificates
    boolean                • no ←         Value can also be specified using INFOBLOX_SSL_VERIFY environment variable.
                           • yes          aliases: ssl_verify
    wapi_version         Default:         Specifies the version of WAPI to use
    string               "2.1"            Value can also be specified using INFOBLOX_WAP_VERSION environment variable.
                                          Until ansible 2.8 the default WAPI was 1.4
   regexp                                 Configures the regexp field for this NAPTR record. This is the regular expression-based rewriting rule of the NAPTR record. This should be a POSIX
   -                                      compliant regular expression, including the substitution rule and flags. Refer to RFC 2915 for the field syntax details.
   replacement                            Configures the replacement field for this NAPTR record. For nonterminal NAPTR records, this field specifies the next domain name to look up.
   - / required
   services                               Configures the services field (128 characters maximum) for this NAPTR record. The services field contains protocol and service identifiers, such as
   -                                      "http+E2U" or "SIPS+D2T".
   state                   Choices:       Configures the intended state of the instance of the object on the NIOS server. When this value is set to present, the object is configured on the device
   -                       • present ←    and when this value is set to absent the value is removed (if necessary) from the device.
                           • absent
   ttl                                    Configures the TTL to be associated with this NAPTR record
   -
   view                  Default:         Sets the DNS view to associate this a record with. The DNS view must already be configured on the system
   - / required          "default"        aliases: dns_view

NOTES                   *nios_naptr_record-notes*

   Note

     • This module must be run locally, which can be achieved by specifying connection: local.
     • Please read the Infoblox Guide for more detailed information on how to use Infoblox with Ansible.

EXAMPLES                   *nios_naptr_record-examples*

 - name: configure a NAPTR record
   nios_naptr_record:
     name: '".subscriber-100.ansiblezone.com'
     order: 1000
     preference: 10
     replacement: replacement1.network.ansiblezone.com
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local

 - name: add a comment to an existing NAPTR record
   nios_naptr_record:
     name: '".subscriber-100.ansiblezone.com'
     order: 1000
     preference: 10
     replacement: replacement1.network.ansiblezone.com
     comment: this is a test comment
     state: present
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local

 - name: remove a NAPTR record from the system
   nios_naptr_record:
     name: '".subscriber-100.ansiblezone.com'
     order: 1000
     preference: 10
     replacement: replacement1.network.ansiblezone.com
     state: absent
     provider:
       host: "{{ inventory_hostname_short }}"
       username: admin
       password: admin
   connection: local

STATUS                   *nios_naptr_record-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Blair Rampling (@brampling)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nios_naptr_record-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nios_naptr_record_module.html
