SYNOPSIS                   *aws_config_recorder*

     • Module manages AWS Config configuration recorder settings

REQUIREMENTS                   *aws_config_recorder-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • python >= 2.6

PARAMETERS                   *aws_config_recorder-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   name                                          The name of the AWS Config resource.
   - / required
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   recording_group                               Specifies the types of AWS resources for which AWS Config records configuration changes.
   -                                             Required when state=present
                                                 Specifies whether AWS Config records configuration changes for every supported type of regional resource.
        all_supported                            If you set this option to `true`, when AWS Config adds support for a new type of regional resource, it starts recording resources of that type
        -                                        automatically.
                                                 If you set this option to `true`, you cannot enumerate a list of `resource_types`.
                                                 Specifies whether AWS Config includes all supported types of global resources (for example, IAM resources) with the resources that it records.
                                                 Before you can set this option to `true`, you must set the allSupported option to `true`.
        include_global_types                     If you set this option to `true`, when AWS Config adds support for a new type of global resource, it starts recording resources of that type
        -                                        automatically.
                                                 The configuration details for any global resource are the same in all regions. To prevent duplicate configuration items, you should consider
                                                 customizing AWS Config in only one region to record global resources.
        resource_types                           A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or
        -                                        `AWS::CloudTrail::Trail`).
                                                 Before you can set this option to `true`, you must set the `all_supported` option to `false`.
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   role_arn                                      Amazon Resource Name (ARN) of the IAM role used to describe the AWS resources associated with the account.
   -                                             Required when state=present
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:
   -                              • present ←    Whether the Config rule should be present or absent.
                                  • absent
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *aws_config_recorder-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *aws_config_recorder-examples*

 - name: Create Configuration Recorder for AWS Config
   aws_config_recorder:
     name: test_configuration_recorder
     state: present
     role_arn: 'arn:aws:iam::123456789012:role/AwsConfigRecorder'
     recording_group:
         all_supported: true
         include_global_types: true

STATUS                   *aws_config_recorder-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Aaron Smith (@slapula)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aws_config_recorder-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aws_config_recorder_module.html
