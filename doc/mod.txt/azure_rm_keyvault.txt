SYNOPSIS                   *azure_rm_keyvault*

     • Create, update and delete instance of Key Vault.

REQUIREMENTS                   *azure_rm_keyvault-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • azure >= 2.0.0

PARAMETERS                   *azure_rm_keyvault-parameters*

              Parameter             Choices/Defaults                                                                      Comments
   access_policies                                     An array of 0 to 16 identities that have access to the key vault.
   -                                                   All identities in the array must use the same tenant ID as the key vault's tenant ID.
             application_id                            Application ID of the client making request on behalf of a principal.
             -
                                     Choices:
                                     • get
                                     • list
                                     • delete
                                     • create
                                     • import
             certificates            • update
             -                       • managecontacts  List of permissions to certificates.
                                     • getissuers
                                     • listissuers
                                     • setissuers
                                     • deleteissuers
                                     • manageissuers
                                     • recover
                                     • purge
                                     Choices:
                                     • encrypt
                                     • decrypt
                                     • wrapkey
                                     • unwrapkey
                                     • sign
                                     • verify
             keys                    • get
             -                       • list            List of permissions to keys.
                                     • create
                                     • update
                                     • import
                                     • delete
                                     • backup
                                     • restore
                                     • recover
                                     • purge
             object_id                                 The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault.
             - / required                              The object ID must be unique for the list of access policies.
                                                       Please note this is not application id. Object id can be obtained by running "az ad sp show --id <application id>".
                                     Choices:
                                     • get
                                     • list
             secrets                 • set
             -                       • delete          List of permissions to secrets.
                                     • backup
                                     • restore
                                     • recover
                                     • purge
             storage                                   List of permissions to storage accounts.
             -
             tenant_id                                 The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
             -                                         Current keyvault tenant_id value will be used if not specified.
   ad_user                                             Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
   string
   adfs_authority_url
   string                                              Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
   added in 2.6
   api_profile                     Default:            Selects an API profile to use when communicating with Azure services. Default value of latest is appropriate for public clouds; future values
   string                          "latest"            will allow use with Azure Stack.
   added in 2.5
   append_tags                       Choices:          Use to control if tags field is canonical or just appends to existing tags.
   boolean                           • no              When canonical, any tags not found in the tags parameter will be removed from the object's metadata.
                                     • yes ←
                                                       Controls the source of the credentials to use for authentication.
                                                       If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to auto if variable is not defined.
                                     Choices:          auto will follow the default precedence of module parameters -> environment variables -> default profile in credential file
   auth_source                       • auto            ~/.azure/credentials.
   string                            • cli             When set to cli, the credentials will be sources from the default Azure CLI profile.
   added in 2.5                      • credential_file Can also be set via the ANSIBLE_AZURE_AUTH_SOURCE environment variable.
                                     • env             When set to msi, the host machine must be an azure resource with an enabled MSI extension. subscription_id or the environment variable
                                     • msi             AZURE_SUBSCRIPTION_ID can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise
                                                       the first subscription is chosen.
                                                       The msi was added in Ansible 2.6.
   cert_validation_mode              Choices:          Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an
   string                            • ignore          HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing ignore. Can also be set via credential
   added in 2.5                      • validate        file profile or the AZURE_CERT_VALIDATION environment variable.
   client_id                                           Azure client ID. Use when authenticating with a Service Principal.
   string
   cloud_environment               Default:            For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, AzureChinaCloud,
   string                          "AzureCloud"        AzureUSGovernment), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the
   added in 2.4                                        AZURE_CLOUD_ENVIRONMENT environment variable.
   enable_soft_delete                Choices:
   boolean                           • no              Property to specify whether the soft delete functionality is enabled for this key vault.
                                     • yes
   enabled_for_deployment            Choices:
   boolean                           • no              Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
                                     • yes
   enabled_for_disk_encryption       Choices:
   boolean                           • no              Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
                                     • yes
   enabled_for_template_deployment   Choices:
   boolean                           • no              Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
                                     • yes
   location                                            Resource location. If not set, location from the resource group will be used as default.
   -
   password                                            Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
   string
   profile                                             Security profile found in ~/.azure/credentials file.
   string
   recover_mode                      Choices:
   boolean                           • no              Create vault in recovery mode.
                                     • yes
   resource_group                                      The name of the Resource Group to which the server belongs.
   - / required
   secret                                              Azure client secret. Use when authenticating with a Service Principal.
   string
   sku                                                 SKU details.
   -
             family                                    SKU family name.
             -
             name                    Choices:
             - / required            • standard        SKU name to specify whether the key vault is a standard vault or a premium vault.
                                     • premium
   state                             Choices:
   -                                 • absent          Assert the state of the KeyVault. Use present to create or update an KeyVault and absent to delete it.
                                     • present ←
   subscription_id                                     Your Azure subscription Id.
   string
   tags                                                Dictionary of string:string pairs to assign as metadata to the object.
   dictionary                                          Metadata tags on the object will be updated with any provided values.
                                                       To remove tags set append_tags option to false.
   tenant                                              Azure tenant ID. Use when authenticating with a Service Principal.
   string
   vault_name                                          Name of the vault.
   - / required
   vault_tenant                                        The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
   -

NOTES                   *azure_rm_keyvault-notes*

   Note

     • For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with az login.
     • Authentication is also possible using a service principal or Active Directory user.
     • To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
     • To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.
     • Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or
       subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.

SEE ALSO                   *azure_rm_keyvault-see also*

   See also

   Sign in with Azure CLI
   How to authenticate using the az login command.

EXAMPLES                   *azure_rm_keyvault-examples*

 - name: Create instance of Key Vault
   azure_rm_keyvault:
     resource_group: myResourceGroup
     vault_name: samplekeyvault
     enabled_for_deployment: yes
     vault_tenant: 72f98888-8666-4144-9199-2d7cd0111111
     sku:
       name: standard
     access_policies:
       - tenant_id: 72f98888-8666-4144-9199-2d7cd0111111
         object_id: 99998888-8666-4144-9199-2d7cd0111111
         keys:
           - get
           - list

RETURN VALUES                   *azure_rm_keyvault-return values*

   Common return values are documented here, the following are the fields unique to this module:

    Key   Returned                                                                                    Description
   id              The Azure Resource Manager resource ID for the key vault.
   string always   Sample:
                   id

STATUS                   *azure_rm_keyvault-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Zim Kalinowski (@zikalino)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *azure_rm_keyvault-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/azure_rm_keyvault_module.html
