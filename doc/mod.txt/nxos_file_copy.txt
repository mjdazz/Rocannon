SYNOPSIS                   *nxos_file_copy*

     • This module supports two different workflows for copying a file to flash (or bootflash) on NXOS devices. Files can either be (1) pushed from the Ansible controller to the device or (2)
       pulled from a remote SCP file server to the device. File copies are initiated from the NXOS device to the remote SCP server. This module only supports the use of connection network_cli or
       Cli transport with connection local.

REQUIREMENTS                   *nxos_file_copy-requirements*

   The below requirements are needed on the host that executes this module.

     • paramiko (required when file_pull is False)
     • SCPClient (required when file_pull is False)
     • pexpect (required when file_pull is True)

PARAMETERS                   *nxos_file_copy-parameters*

           Parameter          Choices/Defaults                                                                        Comments
   connect_ssh_port           Default:
   -                          22               SSH server port used for file transfer.
   added in 2.5
   file_pull                    Choices:       When (False) file is copied from the Ansible controller to the NXOS device.
   boolean                      • no ←         When (True) file is copied from a remote SCP server to the NXOS device. In this mode, the file copy is initiated from the NXOS device.
   added in 2.7                 • yes          If the file is already present on the device it will be overwritten and therefore the operation is NOT idempotent.
   file_pull_compact            Choices:       When file_pull is True, this is used to compact nxos image files. This option can only be used with nxos image files.
   boolean                      • no ←         When (file_pull is False), this is not used.
   added in 2.9                 • yes
   file_pull_kstack             Choices:       When file_pull is True, this can be used to speed up file copies when the nxos running image supports the use-kstack option.
   boolean                      • no ←         When (file_pull is False), this is not used.
   added in 2.9                 • yes
   file_pull_timeout          Default:         Use this parameter to set timeout in seconds, when transferring large files or when the network is slow.
   -                          300              When (file_pull is False), this is not used.
   added in 2.7
   file_system                Default:         The remote file system on the nxos device. If omitted, devices that support a file_system parameter will use their default values.
   -                          "bootflash:"
   local_file                                  When (file_pull is False) this is the path to the local file on the Ansible controller. The local directory must exist.
   -                                           When (file_pull is True) this is the target file name on the NXOS device.
   local_file_directory                        When (file_pull is True) file is copied from a remote SCP server to the NXOS device, and written to this directory on the NXOS device. If the
   -                                           directory does not exist, it will be created under the file_system. This is an optional parameter.
   added in 2.7                                When (file_pull is False), this is not used.
                                               Deprecated
                                               Starting with Ansible 2.5 we recommend using connection: network_cli.
                                               This option is only required if you are using NX-API.
   provider                                    For more information please see the NXOS Platform Options guide.
   dictionary
                                               ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                               A dict object containing connection details.
          auth_pass                            Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If
          string                               the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
          added in 2.5.3
          authorize             Choices:       Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute
          boolean               • no ←         all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used
          added in 2.5.3        • yes          instead.
          host                                 Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination
          string / required                    address for the transport.
          password                             Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or nxapi transports.
          string                               If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
          port                Default:         Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port value will default to
          integer             "0 (use common   the appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                              port)"
          ssh_keyfile                          Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli transport. If the value is
          string                               not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
          timeout             Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded
          integer             10               before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc).
          transport             Choices:       Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to the device over cli
          string / required     • cli ←        (ssh) or nxapi.
                                • nxapi
          use_proxy             Choices:
          boolean               • no           If no, the environment variables http_proxy and https_proxy will be ignored.
          added in 2.5          • yes ←
          use_ssl               Choices:
          boolean               • no ←         Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                                • yes
          username                             Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or the
          string                               nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable
                                               ANSIBLE_NET_USERNAME will be used instead.
          validate_certs        Choices:       If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the
          boolean               • no           transport argument is not nxapi, this value is ignored.
                                • yes ←
   remote_file                                 When (file_pull is False) this is the remote file path on the NXOS device. If omitted, the name of the local file will be used. The remote directory
   -                                           must exist.
                                               When (file_pull is True) this is the full path to the file on the remote SCP server to be copied to the NXOS device.
   remote_scp_server                           The remote scp server address when file_pull is True. This is required if file_pull is True.
   -                                           When (file_pull is False), this is not used.
   added in 2.7
   remote_scp_server_password                  The remote scp server password when file_pull is True. This is required if file_pull is True.
   -                                           When (file_pull is False), this is not used.
   added in 2.7
   remote_scp_server_user                      The remote scp server username when file_pull is True. This is required if file_pull is True.
   -                                           When (file_pull is False), this is not used.
   added in 2.7
   vrf                        Default:
   -                          "management"     The VRF used to pull the file. Useful when no vrf management is defined
   added in 2.9

NOTES                   *nxos_file_copy-notes*

   Note

     • Tested against NXOS 7.0(3)I2(5), 7.0(3)I4(6), 7.0(3)I5(3), 7.0(3)I6(1), 7.0(3)I7(3), 6.0(2)A8(8), 7.0(3)F3(4), 7.3(0)D1(1), 8.3(0), 9.2, 9.3
     • When pushing files (file_pull is False) to the NXOS device, feature scp-server must be enabled.
     • When pulling files (file_pull is True) to the NXOS device, feature scp-server is not required.
     • When pulling files (file_pull is True) to the NXOS device, no transfer will take place if the file is already present.
     • Check mode will tell you if the file would be copied.
     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_file_copy-examples*

 # File copy from ansible controller to nxos device
   - name: "copy from server to device"
     nxos_file_copy:
       local_file: "./test_file.txt"
       remote_file: "test_file.txt"

 # Initiate file copy from the nxos device to transfer file from an SCP server back to the nxos device
   - name: "initiate file copy from device"
     nxos_file_copy:
       file_pull: True
       local_file: "xyz"
       local_file_directory: "dir1/dir2/dir3"
       remote_file: "/mydir/abc"
       remote_scp_server: "192.168.0.1"
       remote_scp_server_user: "myUser"
       remote_scp_server_password: "myPassword"
       vrf: "management"

RETURN VALUES                   *nxos_file_copy-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key        Returned                                                                               Description
   changed                    Indicates whether or not the file was copied.
   boolean           success  Sample:
                              True
   local_file                 The path of the local file.
   string            success  Sample:
                              /path/to/local/file
   remote_file                The path of the remote file.
   string            success  Sample:
                              /path/to/remote/file
   remote_scp_server          The name of the scp server when file_pull is True.
   string            success  Sample:
                              fileserver.example.com
   transfer_status            Whether a file was transferred to the nxos device.
   string            success  Sample:
                              Sent

STATUS                   *nxos_file_copy-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_file_copy-red hat support*

     • Jason Edelman (@jedelman8)
     • Gabriele Gerbino (@GGabriele)
     • Rewritten as a plugin by (@mikewiebe)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_file_copy-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_file_copy_module.html
