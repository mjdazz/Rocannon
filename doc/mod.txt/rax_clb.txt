SYNOPSIS                   *rax_clb*

     • creates / deletes a Rackspace Public Cloud load balancer.

REQUIREMENTS                   *rax_clb-requirements*

   The below requirements are needed on the host that executes this module.

     • pyrax
     • python >= 2.6

PARAMETERS                   *rax_clb-parameters*

     Parameter                   Choices/Defaults                                                                              Comments
                    Choices:
                    • RANDOM
   algorithm        • LEAST_CONNECTIONS ←                         algorithm for the balancer being created
   -                • ROUND_ROBIN
                    • WEIGHTED_LEAST_CONNECTIONS
                    • WEIGHTED_ROUND_ROBIN
   api_key                                                        Rackspace API key, overrides credentials.
   string                                                         aliases: password
   auth_endpoint  Default:                                        The URI of the authentication service.
   -              "https://identity.api.rackspacecloud.com/v2.0/"
   credentials                                                    File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   path                                                           aliases: creds_file
   env                                                            Environment as configured in ~/.pyrax.cfg, see
   string                                                         https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type  Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -              "rackspace"
   meta                                                           A hash of metadata to associate with the instance
   -
   name                                                           Name to give the load balancer
   -
   port           Default:                                        Port for the balancer being created
   -              80
                    Choices:
                    • DNS_TCP
                    • DNS_UDP
                    • FTP
                    • HTTP ←
                    • HTTPS
                    • IMAPS
                    • IMAPv4
   protocol         • LDAP
   -                • LDAPS                                       Protocol for the balancer being created
                    • MYSQL
                    • POP3
                    • POP3S
                    • SMTP
                    • TCP
                    • TCP_CLIENT_FIRST
                    • UDP
                    • UDP_STREAM
                    • SFTP
   region         Default:                                        Region to create an instance in.
   string         "DFW"
   state            Choices:
   -                • present ←                                   Indicate desired state of the resource
                    • absent
   tenant_id                                                      The tenant ID used for authentication.
   -
   tenant_name                                                    The tenant name used for authentication.
   -
   timeout        Default:                                        timeout for communication between the balancer and the node
   -              30
   type             Choices:
   -                • PUBLIC ←                                    type of interface for the balancer being created
                    • SERVICENET
   username                                                       Rackspace username, overrides credentials.
   string
   validate_certs   Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean          • no                                          aliases: verify_ssl
                    • yes
   vip_id                                                         Virtual IP ID to use when creating the load balancer for purposes of sharing an IP with another load balancer of another protocol
   -
   wait             Choices:
   boolean          • no ←                                        wait for the balancer to be in state 'running' before returning
                    • yes
   wait_timeout   Default:                                        how long before wait gives up, in seconds
   -              300

NOTES                   *rax_clb-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)
     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_clb-examples*

 - name: Build a Load Balancer
   gather_facts: False
   hosts: local
   connection: local
   tasks:
     - name: Load Balancer create request
       local_action:
         module: rax_clb
         credentials: ~/.raxpub
         name: my-lb
         port: 8080
         protocol: HTTP
         type: SERVICENET
         timeout: 30
         region: DFW
         wait: yes
         state: present
         meta:
           app: my-cool-app
       register: my_lb

STATUS                   *rax_clb-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Christopher H. Laco (@claco)
     • Matt Martz (@sivel)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_clb-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_clb_module.html
