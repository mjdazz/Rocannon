SYNOPSIS                   *ovirt_host_network*

     • Module to manage host networks in oVirt/RHV.

REQUIREMENTS                   *ovirt_host_network-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • ovirt-engine-sdk-python >= 4.3.0

PARAMETERS                   *ovirt_host_network-parameters*

         Parameter        Choices/Defaults                                                                          Comments
   auth                                    Dictionary with values needed to create HTTP/HTTPS connection to oVirt:
   dictionary / required
                                           A PEM file containing the trusted CA certificates.
       ca_file                             The certificate presented by the server will be verified using these CA certificates.
       string                              If ca_file parameter is not set, system wide CA certificate store is used.
                                           Default value is set by OVIRT_CAFILE environment variable.
       headers                             Dictionary of HTTP headers to be added to each API call.
       dictionary
       hostname                            A string containing the hostname of the server, usually something like `server.example.com`.
       string                              Default value is set by OVIRT_HOSTNAME environment variable.
                                           Either url or hostname is required.
       insecure             Choices:
       boolean              • no           A boolean flag that indicates if the server TLS certificate and host name should be checked.
                            • yes
       kerberos             Choices:
       boolean              • no           A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
                            • yes
       password                            The password of the user.
       string / required                   Default value is set by OVIRT_PASSWORD environment variable.
       token                               Token to be used instead of login with username/password.
       string                              Default value is set by OVIRT_TOKEN environment variable.
       url                                 A string containing the API URL of the server, usually something like `https://server.example.com/ovirt-engine/api`.
       string                              Default value is set by OVIRT_URL environment variable.
                                           Either url or hostname is required.
       username                            The name of the user, something like [email protected].
       string / required                   Default value is set by OVIRT_USERNAME environment variable.
                                           Dictionary describing network bond:
   bond                                    name - Bond name.
   -                                       mode - Bonding mode.
                                           options - Bonding options.
                                           interfaces - List of interfaces to create a bond.
   check                    Choices:       If true verify connectivity between host and engine.
   boolean                  • no           Network configuration changes will be rolled back if connectivity between engine and the host is lost after changing network configuration.
                            • yes
   fetch_nested             Choices:       If True the module will fetch additional data from the API.
   boolean                  • no           It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying nested_attributes.
                            • yes
   interface                               Name of the network interface where logical network should be attached.
   -
   labels                                  List of names of the network label to be assigned to bond or interface.
   -
   name                                    Name of the host to manage networks for.
   - / required                            aliases: host
   nested_attributes                       Specifies list of the attributes which should be fetched from the API.
   list                                    This parameter apply only when fetch_nested is true.
                                           List of dictionary describing networks to be attached to interface or bond:
                                           name - Name of the logical network to be assigned to bond or interface.
   networks                                boot_protocol - Boot protocol one of the none, static or dhcp.
   -                                       address - IP address in case of static boot protocol is used.
                                           netmask - Subnet mask in case of static boot protocol is used.
                                           gateway - Gateway in case of static boot protocol is used.
                                           version - IP version. Either v4 or v6. Default is v4.
   poll_interval          Default:         Number of the seconds the module waits until another poll request on entity status is sent.
   integer                3
   save                     Choices:
   boolean                  • no           If true network configuration will be persistent, otherwise it is temporary. Default true since Ansible 2.8.
                            • yes ←
   state                    Choices:
   -                        • present ←    Should the host be present/absent.
                            • absent
   sync_networks            Choices:
   boolean                  • no ←         If true all networks will be synchronized before modification
   added in 2.8             • yes
   timeout                Default:         The amount of time in seconds the module should wait for the instance to get into desired state.
   integer                180
   wait                     Choices:
   boolean                  • no           yes if the module should wait for the entity to get into desired state.
                            • yes ←

NOTES                   *ovirt_host_network-notes*

   Note

     • In order to use this module you have to install oVirt Python SDK. To ensure it’s installed with correct version you can create the following task: pip: name=ovirt-engine-sdk-python
       version=4.3.0

EXAMPLES                   *ovirt_host_network-examples*

 # Examples don't contain auth parameter for simplicity,
 # look at ovirt_auth module to see how to reuse authentication:

 # In all examples the durability of the configuration created is dependent on the 'save' option value:

 # Create bond on eth0 and eth1 interface, and put 'myvlan' network on top of it and persist the new configuration:
 - name: Bonds
   ovirt_host_network:
     name: myhost
     save: yes
     bond:
       name: bond0
       mode: 2
       interfaces:
         - eth1
         - eth2
     networks:
       - name: myvlan
         boot_protocol: static
         address: 1.2.3.4
         netmask: 255.255.255.0
         gateway: 1.2.3.4
         version: v4

 # Create bond on eth1 and eth2 interface, specifiyng both mode and miimon:
 - name: Bonds
   ovirt_host_network:
     name: myhost
     bond:
       name: bond0
       mode: 1
       options:
         miimon: 200
       interfaces:
         - eth1
         - eth2

 # Remove bond0 bond from host interfaces:
 - ovirt_host_network:
     state: absent
     name: myhost
     bond:
       name: bond0

 # Assign myvlan1 and myvlan2 vlans to host eth0 interface:
 - ovirt_host_network:
     name: myhost
     interface: eth0
     networks:
       - name: myvlan1
       - name: myvlan2

 # Remove myvlan2 vlan from host eth0 interface:
 - ovirt_host_network:
     state: absent
     name: myhost
     interface: eth0
     networks:
       - name: myvlan2

 # Remove all networks/vlans from host eth0 interface:
 - ovirt_host_network:
     state: absent
     name: myhost
     interface: eth0

RETURN VALUES                   *ovirt_host_network-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
              On
   host_nic   success  Dictionary of all the host NIC attributes. Host NIC attributes can be found on your oVirt/RHV instance at following url:
   dictionary if host  http://ovirt.github.io/ovirt-engine-api-model/master/#types/host_nic.
              NIC is
              found.
              On
   id         success  ID of the host NIC which is managed
   string     if host  Sample:
              NIC is   7de90f31-222c-436c-a1ca-7e655bd5b60c
              found.

STATUS                   *ovirt_host_network-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ondra Machacek (@machacekondra)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ovirt_host_network-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ovirt_host_network_module.html
