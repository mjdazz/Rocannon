SYNOPSIS                   *azure_rm_deployment*

     • Create or destroy Azure Resource Manager template deployments via the Azure SDK for Python.
     • You can find some quick start templates in GitHub here https://github.com/azure/azure-quickstart-templates.
     • For more information on Azure Resource Manager templates see https://azure.microsoft.com/en-us/documentation/articles/resource-group-template-deploy/.

REQUIREMENTS                   *azure_rm_deployment-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • azure >= 2.0.0

PARAMETERS                   *azure_rm_deployment-parameters*

               Parameter               Choices/Defaults                                                                    Comments
   ad_user                                                Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
   string
   adfs_authority_url
   string                                                 Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
   added in 2.6
   api_profile                        Default:            Selects an API profile to use when communicating with Azure services. Default value of latest is appropriate for public clouds; future
   string                             "latest"            values will allow use with Azure Stack.
   added in 2.5
   append_tags                          Choices:          Use to control if tags field is canonical or just appends to existing tags.
   boolean                              • no              When canonical, any tags not found in the tags parameter will be removed from the object's metadata.
                                        • yes ←
                                                          Controls the source of the credentials to use for authentication.
                                                          If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to auto if variable is not defined.
                                        Choices:          auto will follow the default precedence of module parameters -> environment variables -> default profile in credential file
   auth_source                          • auto            ~/.azure/credentials.
   string                               • cli             When set to cli, the credentials will be sources from the default Azure CLI profile.
   added in 2.5                         • credential_file Can also be set via the ANSIBLE_AZURE_AUTH_SOURCE environment variable.
                                        • env             When set to msi, the host machine must be an azure resource with an enabled MSI extension. subscription_id or the environment variable
                                        • msi             AZURE_SUBSCRIPTION_ID can be used to identify the subscription ID if the resource is granted access to more than one subscription,
                                                          otherwise the first subscription is chosen.
                                                          The msi was added in Ansible 2.6.
   cert_validation_mode                 Choices:          Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an
   string                               • ignore          HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing ignore. Can also be set via
   added in 2.5                         • validate        credential file profile or the AZURE_CERT_VALIDATION environment variable.
   client_id                                              Azure client ID. Use when authenticating with a Service Principal.
   string
   cloud_environment                  Default:            For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, AzureChinaCloud,
   string                             "AzureCloud"        AzureUSGovernment), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the
   added in 2.4                                           AZURE_CLOUD_ENVIRONMENT environment variable.
   deployment_mode                      Choices:          In incremental mode, resources are deployed without deleting existing resources that are not included in the template.
   -                                    • complete        In complete mode resources are deployed and existing resources in the resource group not included in the template are deleted.
                                        • incremental ←
   location                           Default:            The geo-locations in which the resource group will be located.
   -                                  "westus"
   name                               Default:            The name of the deployment to be tracked in the resource group deployment history.
   -                                  "ansible-arm"       Re-using a deployment name will overwrite the previous value in the resource group's deployment history.
                                                          aliases: deployment_name
   parameters                                             A hash of all the required template variables for the deployment template. This parameter is mutually exclusive with parameters_link.
   dictionary                                             Either parameters_link or parameters is required if state=present.
   parameters_link                                        Uri of file containing the parameters body. This parameter is mutually exclusive with parameters.
   -                                                      Either parameters_link or parameters is required if state=present.
   password                                               Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
   string
   profile                                                Security profile found in ~/.azure/credentials file.
   string
   resource_group                                         The resource group name to use or create to host the deployed template.
   - / required                                           aliases: resource_group_name
   secret                                                 Azure client secret. Use when authenticating with a Service Principal.
   string
   state                                Choices:          If state=present, template will be created.
   -                                    • present ←       If state=present and deployment exists, it will be updated.
                                        • absent          If state=absent, stack will be removed.
   subscription_id                                        Your Azure subscription Id.
   string
   tags                                                   Dictionary of string:string pairs to assign as metadata to the object.
   dictionary                                             Metadata tags on the object will be updated with any provided values.
                                                          To remove tags set append_tags option to false.
   template                                               A hash containing the templates inline. This parameter is mutually exclusive with template_link.
   dictionary                                             Either template or template_link is required if state=present.
   template_link                                          Uri of file containing the template body. This parameter is mutually exclusive with template.
   -                                                      Either template or template_link is required if state=present.
   tenant                                                 Azure tenant ID. Use when authenticating with a Service Principal.
   string
   wait_for_deployment_completion       Choices:
   boolean                              • no              Whether or not to block until the deployment has completed.
                                        • yes ←
   wait_for_deployment_polling_period Default:            Time (in seconds) to wait between polls when waiting for deployment completion.
   -                                  10

NOTES                   *azure_rm_deployment-notes*

   Note

     • For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with az login.
     • Authentication is also possible using a service principal or Active Directory user.
     • To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
     • To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.
     • Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or
       subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.

SEE ALSO                   *azure_rm_deployment-see also*

   See also

   Sign in with Azure CLI
   How to authenticate using the az login command.

EXAMPLES                   *azure_rm_deployment-examples*

 # Destroy a template deployment
 - name: Destroy Azure Deploy
   azure_rm_deployment:
     resource_group: myResourceGroup
     name: myDeployment
     state: absent

 # Create or update a template deployment based on uris using parameter and template links
 - name: Create Azure Deploy
   azure_rm_deployment:
     resource_group: myResourceGroup
     name: myDeployment
     template_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-linux/azuredeploy.json'
     parameters_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-linux/azuredeploy.parameters.json'

 # Create or update a template deployment based on a uri to the template and parameters specified inline.
 # This deploys a VM with SSH support for a given public key, then stores the result in 'azure_vms'. The result is then
 # used to create a new host group. This host group is then used to wait for each instance to respond to the public IP SSH.
 ---
 - name: Create Azure Deploy
   azure_rm_deployment:
     resource_group: myResourceGroup
     name: myDeployment
     parameters:
       newStorageAccountName:
         value: devopsclestorage1
       adminUsername:
         value: devopscle
       dnsNameForPublicIP:
         value: devopscleazure
       location:
         value: West US
       vmSize:
         value: Standard_A2
       vmName:
         value: ansibleSshVm
       sshKeyData:
         value: YOUR_SSH_PUBLIC_KEY
     template_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-sshkey/azuredeploy.json'
   register: azure
 - name: Add new instance to host group
   add_host:
     hostname: "{{ item['ips'][0].public_ip }}"
     groupname: azure_vms
   loop: "{{ azure.deployment.instances }}"

 # Deploy an Azure WebApp running a hello world'ish node app
 - name: Create Azure WebApp Deployment at http://devopscleweb.azurewebsites.net/hello.js
   azure_rm_deployment:
     resource_group: myResourceGroup
     name: myDeployment
     parameters:
       repoURL:
         value: 'https://github.com/devigned/az-roadshow-oss.git'
       siteName:
         value: devopscleweb
       hostingPlanName:
         value: someplan
       siteLocation:
         value: westus
       sku:
         value: Standard
     template_link: 'https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/201-web-app-github-deploy/azuredeploy.json'

 # Create or update a template deployment based on an inline template and parameters
 - name: Create Azure Deploy
   azure_rm_deployment:
     resource_group: myResourceGroup
     name: myDeployment
     template:
       $schema: "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
       contentVersion: "1.0.0.0"
       parameters:
         newStorageAccountName:
           type: "string"
           metadata:
             description: "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
         adminUsername:
           type: "string"
           metadata:
             description: "User name for the Virtual Machine."
         adminPassword:
           type: "securestring"
           metadata:
             description: "Password for the Virtual Machine."
         dnsNameForPublicIP:
           type: "string"
           metadata:
             description: "Unique DNS Name for the Public IP used to access the Virtual Machine."
         ubuntuOSVersion:
           type: "string"
           defaultValue: "14.04.2-LTS"
           allowedValues:
             - "12.04.5-LTS"
             - "14.04.2-LTS"
             - "15.04"
           metadata:
             description: >
                          The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version.
                          Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04."
       variables:
         location: "West US"
         imagePublisher: "Canonical"
         imageOffer: "UbuntuServer"
         OSDiskName: "osdiskforlinuxsimple"
         nicName: "myVMNic"
         addressPrefix: "192.0.2.0/24"
         subnetName: "Subnet"
         subnetPrefix: "10.0.0.0/24"
         storageAccountType: "Standard_LRS"
         publicIPAddressName: "myPublicIP"
         publicIPAddressType: "Dynamic"
         vmStorageAccountContainerName: "vhds"
         vmName: "MyUbuntuVM"
         vmSize: "Standard_D1"
         virtualNetworkName: "MyVNET"
         vnetID: "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
         subnetRef: "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
       resources:
         - type: "Microsoft.Storage/storageAccounts"
           name: "[parameters('newStorageAccountName')]"
           apiVersion: "2015-05-01-preview"
           location: "[variables('location')]"
           properties:
             accountType: "[variables('storageAccountType')]"
         - apiVersion: "2015-05-01-preview"
           type: "Microsoft.Network/publicIPAddresses"
           name: "[variables('publicIPAddressName')]"
           location: "[variables('location')]"
           properties:
             publicIPAllocationMethod: "[variables('publicIPAddressType')]"
             dnsSettings:
               domainNameLabel: "[parameters('dnsNameForPublicIP')]"
         - type: "Microsoft.Network/virtualNetworks"
           apiVersion: "2015-05-01-preview"
           name: "[variables('virtualNetworkName')]"
           location: "[variables('location')]"
           properties:
             addressSpace:
               addressPrefixes:
                 - "[variables('addressPrefix')]"
             subnets:
               -
                 name: "[variables('subnetName')]"
                 properties:
                   addressPrefix: "[variables('subnetPrefix')]"
         - type: "Microsoft.Network/networkInterfaces"
           apiVersion: "2015-05-01-preview"
           name: "[variables('nicName')]"
           location: "[variables('location')]"
           dependsOn:
             - "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
             - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
           properties:
             ipConfigurations:
               -
                 name: "ipconfig1"
                 properties:
                   privateIPAllocationMethod: "Dynamic"
                   publicIPAddress:
                     id: "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                   subnet:
                     id: "[variables('subnetRef')]"
         - type: "Microsoft.Compute/virtualMachines"
           apiVersion: "2015-06-15"
           name: "[variables('vmName')]"
           location: "[variables('location')]"
           dependsOn:
             - "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
             - "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
           properties:
             hardwareProfile:
               vmSize: "[variables('vmSize')]"
             osProfile:
               computername: "[variables('vmName')]"
               adminUsername: "[parameters('adminUsername')]"
               adminPassword: "[parameters('adminPassword')]"
             storageProfile:
               imageReference:
                 publisher: "[variables('imagePublisher')]"
                 offer: "[variables('imageOffer')]"
                 sku: "[parameters('ubuntuOSVersion')]"
                 version: "latest"
               osDisk:
                 name: "osdisk"
                 vhd:
                   uri: >
                        [concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',
                        variables('OSDiskName'),'.vhd')]
                 caching: "ReadWrite"
                 createOption: "FromImage"
             networkProfile:
               networkInterfaces:
                 -
                   id: "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
             diagnosticsProfile:
               bootDiagnostics:
                 enabled: "true"
                 storageUri: "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
     parameters:
       newStorageAccountName:
         value: devopsclestorage
       adminUsername:
         value: devopscle
       adminPassword:
         value: Password1!
       dnsNameForPublicIP:
         value: devopscleazure

RETURN VALUES                   *azure_rm_deployment-return values*

   Common return values are documented here, the following are the fields unique to this module:

                  Key                Returned                                                                       Description
   deployment                        always   Deployment details.
   complex
     group_name                               Name of the resource group.
     string                          always   Sample:
                                              myResourceGroup
     id                                       The Azure ID of the deployment.
     string                          always   Sample:
                                              /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Resources/deployments/myDeployment
     instances                       always   Provides the public IP addresses for each VM instance.
     list
       ips                           always   List of Public IP addresses.
       list
         dns_settings                always   DNS Settings.
         complex
               domain_name_label              Domain Name Label.
               string                always   Sample:
                                              myvirtualmachine
               fqdn                           Fully Qualified Domain Name.
               string                always   Sample:
                                              myvirtualmachine.eastus2.cloudapp.azure.com
         id                                   Public IP resource id.
         string                      always   Sample:
                                              /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/p ublicIPAddresses/myPublicIP
         name                                 Public IP resource name.
         string                      always   Sample:
                                              myPublicIP
         public_ip                            Public IP address value.
         string                      always   Sample:
                                              104.209.244.123
         public_ip_allocation_method          Public IP allocation method.
         string                      always   Sample:
                                              Dynamic
       vm_name                                Virtual machine name.
       string                        always   Sample:
                                              myvirtualmachine
     name                                     Name of the deployment.
     string                          always   Sample:
                                              myDeployment
     outputs                                  Dictionary of outputs received from the deployment.
     complex                         always   Sample:
                                              {'hostname': {'type': 'String', 'value': 'myvirtualmachine.eastus2.cloudapp.azure.com'}}

STATUS                   *azure_rm_deployment-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • David Justice (@devigned)
     • Laurent Mazuel (@lmazuel)
     • Andre Price (@obsoleted)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *azure_rm_deployment-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/azure_rm_deployment_module.html
