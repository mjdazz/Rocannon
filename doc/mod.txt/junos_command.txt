SYNOPSIS                   *junos_command*

     • Sends an arbitrary set of commands to an JUNOS node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition
       before returning or timing out if the condition is not met.

REQUIREMENTS                   *junos_command-requirements*

   The below requirements are needed on the host that executes this module.

     • jxmlease
     • ncclient (>=v0.5.2)

PARAMETERS                   *junos_command-parameters*

    Parameter   Choices/Defaults                                                                               Comments
   commands                      The commands to send to the remote junos device over the configured provider. The resulting output from the command is returned. If the wait_for argument is
   -                             provided, the module is not returned until the condition is satisfied or the number of retries has been exceeded.
                  Choices:
                  • text
                  • json
                  • xml          Encoding scheme to use when serializing output from the device. This handles how to properly understand the output and apply the conditionals path to the result
   display        • set          set. For rpcs argument default display is xml and for commands argument default display is text. Value set is applicable only for fetching configuration from
   -                             device.
                Default:         aliases: format, output
                "depends on
                input argument
                I(rpcs) or
                I(commands)"
   interval     Default:         Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditional, the interval indicates how to
   -            1                long to wait before trying the command again.
   match          Choices:       The match argument is used in conjunction with the wait_for argument to specify the match policy. Valid values are all or any. If the value is set to all then all
   -              • any          conditionals in the wait_for must be satisfied. If the value is set to any then only one of the values must be satisfied.
                  • all ←
                                 Deprecated
                                 Starting with Ansible 2.5 we recommend using connection: network_cli or connection: netconf.
   provider                      For more information please see the Junos OS Platform Options guide.
   dictionary
                                 ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                 A dict object containing connection details.
    host                         Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address for
    string /                     the transport.
    required
    password                     Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not specified
    string                       in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
    port        Default:         Specifies the port to use when building the connection to the remote device. The port value will default to the well known SSH port of 22 (for transport=cli) or
    integer     22               port 830 (for transport=netconf) device.
    ssh_keyfile                  Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session. If the
    path                         value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
    timeout     Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
    integer     10               operation is completed, the module will error.
    username                     Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
    string                       specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   retries      Default:         Specifies the number of retries a command should be tried before it is considered failed. The command is run on the target device every retry and evaluated against
   -            10               the wait_for conditionals.
   rpcs                          The rpcs argument accepts a list of RPCs to be executed over a netconf session and the results from the RPC execution is return to the playbook via the modules
   -                             results dictionary.
   wait_for                      Specifies what to evaluate from the output of the command and what conditionals to apply. This argument will cause the task to wait for a particular conditional to
   -                             be true before moving forward. If the conditional is not true by the configured retries, the task fails. See examples.
                                 aliases: waitfor

NOTES                   *junos_command-notes*

   Note

     • This module requires the netconf system service be enabled on the remote device being managed.
     • Tested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.
     • Recommended connection is netconf. See the Junos OS Platform Options.
     • This module also works with network_cli connections and with local connections for legacy playbooks.
     • For information on using CLI and netconf see the Junos OS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Juniper network devices see https://www.ansible.com/ansible-juniper.

EXAMPLES                   *junos_command-examples*

 - name: run show version on remote devices
   junos_command:
     commands: show version

 - name: run show version and check to see if output contains Juniper
   junos_command:
     commands: show version
     wait_for: result[0] contains Juniper

 - name: run multiple commands on remote nodes
   junos_command:
     commands:
       - show version
       - show interfaces

 - name: run multiple commands and evaluate the output
   junos_command:
     commands:
       - show version
       - show interfaces
     wait_for:
       - result[0] contains Juniper
       - result[1] contains Loopback0

 - name: run commands and specify the output format
   junos_command:
     commands: show version
     display: json

 - name: run rpc on the remote device
   junos_command:
     commands: show configuration
     display: set

 - name: run rpc on the remote device
   junos_command:
     rpcs: get-software-information

RETURN VALUES                   *junos_command-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key                                 Returned                                                                               Description
   failed_conditions                                                            The list of conditionals that have failed
   list              failed                                                     Sample:
                                                                                ['...', '...']
   output                                                                       The set of transformed xml to json format from the commands responses
   list              If the display is in xml format.                           Sample:
                                                                                ['...', '...']
   stdout                                                                       The set of responses from the commands
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                ['...', '...']
   stdout_lines                                                                 The value of stdout split into a list
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                [['...', '...'], ['...'], ['...']]

STATUS                   *junos_command-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *junos_command-red hat support*

     • Peter Sprygada (@privateip)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *junos_command-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/junos_command_module.html
