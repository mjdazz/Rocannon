SYNOPSIS                   *manageiq_policies*

     • The manageiq_policies module supports adding and deleting policy_profiles in ManageIQ.

REQUIREMENTS                   *manageiq_policies-requirements*

   The below requirements are needed on the host that executes this module.

     • manageiq-client https://github.com/ManageIQ/manageiq-api-client-python/

PARAMETERS                   *manageiq_policies-parameters*

         Parameter          Choices/Defaults                                                                          Comments
   manageiq_connection                          ManageIQ connection configuration information.
   dictionary / required
      ca_cert                                   The path to a CA bundle file or directory with certificates. defaults to None.
      path                                      aliases: ca_bundle_path
      password                                  ManageIQ password. MIQ_PASSWORD env var if set. otherwise, required if no token is passed in.
      string
      token                                     ManageIQ token. MIQ_TOKEN env var if set. otherwise, required if no username or password is passed in.
      string
      url                                       ManageIQ environment url. MIQ_URL env var if set. otherwise, it is required to pass it.
      string / required
      username                                  ManageIQ username. MIQ_USERNAME env var if set. otherwise, required if no token is passed in.
      string
      validate_certs       Choices:             Whether SSL certificates should be verified for HTTPS requests. defaults to True.
      boolean              • no                 aliases: verify_ssl
                           • yes ←
   policy_profiles                              list of dictionaries, each includes the policy_profile 'name' key.
   -                                            required if state is present or absent.
   resource_name                                the name of the resource to which the profile should be [un]assigned
   - / required
                           Choices:
                           • provider
                           • host
                           • vm
                           • blueprint
                           • category
   resource_type           • cluster
   - / required            • data store         the type of the resource to which the profile should be [un]assigned
                           • group
                           • resource pool
                           • service
                           • service template
                           • template
                           • tenant
                           • user
                           Choices:             absent - policy_profiles should not exist,
   state                   • absent             present - policy_profiles should exist,
   -                       • present ←          list - list current policy_profiles and policies.
                           • list

EXAMPLES                   *manageiq_policies-examples*

 - name: Assign new policy_profile for a provider in ManageIQ
   manageiq_policies:
     resource_name: 'EngLab'
     resource_type: 'provider'
     policy_profiles:
       - name: openscap profile
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

 - name: Unassign a policy_profile for a provider in ManageIQ
   manageiq_policies:
     state: absent
     resource_name: 'EngLab'
     resource_type: 'provider'
     policy_profiles:
       - name: openscap profile
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

 - name: List current policy_profile and policies for a provider in ManageIQ
   manageiq_policies:
     state: list
     resource_name: 'EngLab'
     resource_type: 'provider'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

RETURN VALUES                   *manageiq_policies-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key        Returned                                                                               Description
                              List current policy_profile and policies for a provider in ManageIQ
   manageiq_policies          Sample:
   dictionary        always   { "changed": false, "profiles": [ { "policies": [ { "active": true, "description": "OpenSCAP", "name": "openscap policy" }, { "active": true, "description": "Analyse
                              incoming container images", "name": "analyse incoming container images" }, { "active": true, "description": "Schedule compliance after smart state analysis", "name":
                              "schedule compliance after smart state analysis" } ], "profile_description": "OpenSCAP profile", "profile_name": "openscap profile" } ] }

STATUS                   *manageiq_policies-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Daniel Korn (@dkorn)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *manageiq_policies-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/manageiq_policies_module.html
