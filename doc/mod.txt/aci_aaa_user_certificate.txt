SYNOPSIS                   *aci_aaa_user_certificate*

     • Manage AAA user certificates on Cisco ACI fabrics.

PARAMETERS                   *aci_aaa_user_certificate-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   aaa_user                           The name of the user to add a certificate to.
   string / required
   aaa_user_type       Choices:
   string              • appuser      Whether this is a normal user or an appuser.
                       • user ←
   certificate                        The PEM format public key extracted from the X.509 certificate.
   string                             aliases: cert_data, certificate_data
   certificate_name                   The name of the user certificate entry in ACI.
   string                             aliases: cert_name
   host                               IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                  aliases: hostname
                       Choices:       Influence the output of this ACI module.
   output_level        • debug        normal means the standard output, incl. current dict
   string              • info         info adds informational output, incl. previous, proposed and sent dicts
                       • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                           The password to use for authentication.
   string / required                  This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   port                               Port number to be used for REST connection.
   integer                            The default value depends on parameter use_ssl.
                                      Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                        This value also influences the default certificate_name that is used.
   string / required                  This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                      aliases: cert_key
                       Choices:
   state               • absent       Use present or absent for adding or removing.
   string              • present ←    Use query for listing an object or multiple objects.
                       • query
   timeout           Default:         The socket level timeout in seconds.
   integer           30
   use_proxy           Choices:
   boolean             • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                       • yes ←
   use_ssl             Choices:
   boolean             • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                       • yes ←
   username          Default:         The username to use for authentication.
   string            "admin"          aliases: user
   validate_certs      Choices:       If no, SSL certificates will not be validated.
   boolean             • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                       • yes ←

NOTES                   *aci_aaa_user_certificate-notes*

   Note

     • The aaa_user must exist before using this module in your playbook. The aci_aaa_user module can be used for this.

SEE ALSO                   *aci_aaa_user_certificate-see also*

   See also

   aci_aaa_user – Manage AAA users (aaa:User)
   The official documentation on the aci_aaa_user module.

   APIC Management Information Model reference
   More information about the internal APIC class aaa:UserCert.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

EXAMPLES                   *aci_aaa_user_certificate-examples*

 - name: Add a certificate to user
   aci_aaa_user_certificate:
     host: apic
     username: admin
     password: SomeSecretPassword
     aaa_user: admin
     certificate_name: admin
     certificate_data: '{{ lookup("file", "pki/admin.crt") }}'
     state: present
   delegate_to: localhost

 - name: Remove a certificate of a user
   aci_aaa_user_certificate:
     host: apic
     username: admin
     password: SomeSecretPassword
     aaa_user: admin
     certificate_name: admin
     state: absent
   delegate_to: localhost

 - name: Query a certificate of a user
   aci_aaa_user_certificate:
     host: apic
     username: admin
     password: SomeSecretPassword
     aaa_user: admin
     certificate_name: admin
     state: query
   delegate_to: localhost
   register: query_result

 - name: Query all certificates of a user
   aci_aaa_user_certificate:
     host: apic
     username: admin
     password: SomeSecretPassword
     aaa_user: admin
     state: query
   delegate_to: localhost
   register: query_result

RETURN VALUES                   *aci_aaa_user_certificate-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

STATUS                   *aci_aaa_user_certificate-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Dag Wieers (@dagwieers)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aci_aaa_user_certificate-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aci_aaa_user_certificate_module.html
