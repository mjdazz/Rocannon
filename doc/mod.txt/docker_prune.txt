SYNOPSIS                   *docker_prune*

     • Allows to run docker container prune, docker image prune, docker network prune and docker volume prune via the Docker API.

REQUIREMENTS                   *docker_prune-requirements*

   The below requirements are needed on the host that executes this module.

     • Docker API >= 1.25
     • Docker SDK for Python: Please note that the docker-py Python module has been superseded by docker (see here for details). This module does not work with docker-py.
     • Docker SDK for Python >= 2.1.0
     • Python >= 2.7

PARAMETERS                   *docker_prune-parameters*

       Parameter            Choices/Defaults                                                                            Comments
                                                   The version of the Docker API running on the Docker Host.
   api_version        Default:                     Defaults to the latest version of the API supported by Docker SDK for Python and the docker daemon.
   string             "auto"                       If the value is not specified in the task, the value of environment variable DOCKER_API_VERSION will be used instead. If the environment variable
                                                   is not set, the default value will be used.
                                                   aliases: docker_api_version
   builder_cache        Choices:                   Whether to prune the builder cache.
   boolean              • no ←                     Requires version 3.3.0 of the Docker SDK for Python or newer.
                        • yes
                                                   Use a CA certificate when performing server verification by providing the path to a CA certificate file.
   ca_cert                                         If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file ca.pem from the directory specified in
   path                                            the environment variable DOCKER_CERT_PATH will be used.
                                                   aliases: tls_ca_cert, cacert_path
                                                   Path to the client's TLS certificate file.
   client_cert                                     If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file cert.pem from the directory specified in
   path                                            the environment variable DOCKER_CERT_PATH will be used.
                                                   aliases: tls_client_cert, cert_path
                                                   Path to the client's TLS key file.
   client_key                                      If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file key.pem from the directory specified in
   path                                            the environment variable DOCKER_CERT_PATH will be used.
                                                   aliases: tls_client_key, key_path
   containers           Choices:
   boolean              • no ←                     Whether to prune containers.
                        • yes
   containers_filters                              A dictionary of filter values used for selecting containers to delete.
   dictionary                                      For example, until: 24h.
                                                   See the docker documentation for more information on possible filters.
   debug                Choices:
   boolean              • no ←                     Debug mode
                        • yes
                                                   The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example,
   docker_host        Default:                     tcp://192.0.2.23:2376. If TLS is used to encrypt the connection, the module will automatically replace tcp in the connection URL with https.
   string             "unix://var/run/docker.sock" If the value is not specified in the task, the value of environment variable DOCKER_HOST will be used instead. If the environment variable is not
                                                   set, the default value will be used.
                                                   aliases: docker_url
   images               Choices:
   boolean              • no ←                     Whether to prune images.
                        • yes
   images_filters                                  A dictionary of filter values used for selecting images to delete.
   dictionary                                      For example, dangling: true.
                                                   See the docker documentation for more information on possible filters.
   networks             Choices:
   boolean              • no ←                     Whether to prune networks.
                        • yes
   networks_filters                                A dictionary of filter values used for selecting networks to delete.
   dictionary                                      See the docker documentation for more information on possible filters.
   ssl_version                                     Provide a valid SSL version number. Default value determined by ssl.py module.
   string                                          If the value is not specified in the task, the value of environment variable DOCKER_SSL_VERSION will be used instead.
   timeout            Default:                     The maximum amount of time in seconds to wait on a response from the API.
   integer            60                           If the value is not specified in the task, the value of environment variable DOCKER_TIMEOUT will be used instead. If the environment variable is
                                                   not set, the default value will be used.
                        Choices:                   Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server. Note that if validate_certs is set to
   tls                  • no ←                     yes as well, it will take precedence.
   boolean              • yes                      If the value is not specified in the task, the value of environment variable DOCKER_TLS will be used instead. If the environment variable is not
                                                   set, the default value will be used.
   tls_hostname       Default:                     When verifying the authenticity of the Docker Host server, provide the expected name of the server.
   string             "localhost"                  If the value is not specified in the task, the value of environment variable DOCKER_TLS_HOSTNAME will be used instead. If the environment variable
                                                   is not set, the default value will be used.
                        Choices:                   Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.
   validate_certs       • no ←                     If the value is not specified in the task, the value of environment variable DOCKER_TLS_VERIFY will be used instead. If the environment variable
   boolean              • yes                      is not set, the default value will be used.
                                                   aliases: tls_verify
   volumes              Choices:
   boolean              • no ←                     Whether to prune volumes.
                        • yes
   volumes_filters                                 A dictionary of filter values used for selecting volumes to delete.
   dictionary                                      See the docker documentation for more information on possible filters.

NOTES                   *docker_prune-notes*

   Note

     • Connect to the Docker daemon by providing parameters with each task or by defining environment variables. You can define DOCKER_HOST, DOCKER_TLS_HOSTNAME, DOCKER_API_VERSION,
       DOCKER_CERT_PATH, DOCKER_SSL_VERSION, DOCKER_TLS, DOCKER_TLS_VERIFY and DOCKER_TIMEOUT. If you are using docker machine, run the script shipped with the product that sets up the environment.
       It will set these variables for you. See https://docs.docker.com/machine/reference/env/ for more details.
     • When connecting to Docker daemon with TLS, you might need to install additional Python packages. For the Docker SDK for Python, version 2.4 or newer, this can be done by installing
       docker[tls] with pip.
     • Note that the Docker SDK for Python only allows to specify the path to the Docker configuration for very few functions. In general, it will use $HOME/.docker/config.json if the DOCKER_CONFIG
       environment variable is not specified, and use $DOCKER_CONFIG/config.json otherwise.

EXAMPLES                   *docker_prune-examples*

 - name: Prune containers older than 24h
   docker_prune:
     containers: yes
     containers_filters:
       # only consider containers created more than 24 hours ago
       until: 24h

 - name: Prune everything
   docker_prune:
     containers: yes
     images: yes
     networks: yes
     volumes: yes
     builder_cache: yes

 - name: Prune everything (including non-dangling images)
   docker_prune:
     containers: yes
     images: yes
     images_filters:
       dangling: false
     networks: yes
     volumes: yes
     builder_cache: yes

RETURN VALUES                   *docker_prune-return values*

   Common return values are documented here, the following are the fields unique to this module:

                Key                    Returned                                                                         Description
   builder_cache_space_reclaimed                       Amount of reclaimed disk space from builder cache pruning in bytes.
   integer                       builder_cache is true Sample:
                                                       0
   containers                                          List of IDs of deleted containers.
   list / elements=string        containers is true    Sample:
                                                       []
   containers_space_reclaimed                          Amount of reclaimed disk space from container pruning in bytes.
   integer                       containers is true    Sample:
                                                       0
   images                                              List of IDs of deleted images.
   list / elements=string        images is true        Sample:
                                                       []
   images_space_reclaimed                              Amount of reclaimed disk space from image pruning in bytes.
   integer                       images is true        Sample:
                                                       0
   networks                                            List of IDs of deleted networks.
   list / elements=string        networks is true      Sample:
                                                       []
   volumes                                             List of IDs of deleted volumes.
   list / elements=string        volumes is true       Sample:
                                                       []
   volumes_space_reclaimed                             Amount of reclaimed disk space from volumes pruning in bytes.
   integer                       volumes is true       Sample:
                                                       0

STATUS                   *docker_prune-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Felix Fontein (@felixfontein)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *docker_prune-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/docker_prune_module.html
