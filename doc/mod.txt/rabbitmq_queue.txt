SYNOPSIS                   *rabbitmq_queue*

     • This module uses rabbitMQ Rest API to create/delete queues

REQUIREMENTS                   *rabbitmq_queue-requirements*

   The below requirements are needed on the host that executes this module.

     • requests >= 1.0.0

PARAMETERS                   *rabbitmq_queue-parameters*

          Parameter        Choices/Defaults                                                                         Comments
   arguments               Default:         extra arguments for queue. If defined this argument is a key/value dictionary
   -                       {}
   auto_delete               Choices:
   boolean                   • no ←         if the queue should delete itself after all queues/queues unbound from it
                             • yes
   auto_expires            Default:         How long a queue can be unused before it is automatically deleted (milliseconds)
   -                       "forever"
   ca_cert                                  CA certificate to verify SSL connection to management API.
   path                                     aliases: cacert
   client_cert                              Client certificate to send on SSL connections to management API.
   path                                     aliases: cert
   client_key                               Private key matching the client certificate.
   path                                     aliases: key
   dead_letter_exchange                     Optional name of an exchange to which messages will be republished if they
   -                                        are rejected or expire
   dead_letter_routing_key                  Optional replacement routing key to use when a message is dead-lettered.
   -                                        Original routing key will be used if unset
   durable                   Choices:
   boolean                   • no           whether queue is durable or not
                             • yes ←
   login_host              Default:         RabbitMQ host for connection.
   string                  "localhost"
   login_password                           RabbitMQ password for connection.
   string
   login_port              Default:         RabbitMQ management API port.
   string                  "15672"
   login_protocol            Choices:
   string                    • http ←       RabbitMQ management API protocol.
                             • https
   login_user              Default:         RabbitMQ user for connection.
   string                  "guest"
   max_length              Default:         How many messages can the queue contain before it starts rejecting
   -                       "no limit"
   max_priority                             Maximum number of priority levels for the queue to support.
   -                                        If not set, the queue will not support message priorities.
   added in 2.4                             Larger numbers indicate higher priority.
   message_ttl             Default:         How long a message can live in queue before it is discarded (milliseconds)
   -                       "forever"
   name                                     Name of the queue
   - / required
   state                     Choices:
   -                         • present ←    Whether the queue should be present or absent
                             • absent
   vhost                   Default:         RabbitMQ virtual host.
   string                  "/"

EXAMPLES                   *rabbitmq_queue-examples*

 # Create a queue
 - rabbitmq_queue:
     name: myQueue

 # Create a queue on remote host
 - rabbitmq_queue:
     name: myRemoteQueue
     login_user: user
     login_password: secret
     login_host: remote.example.org

STATUS                   *rabbitmq_queue-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Manuel Sousa (@manuel-sousa)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rabbitmq_queue-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rabbitmq_queue_module.html
