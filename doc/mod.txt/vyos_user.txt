SYNOPSIS                   *vyos_user*

     • This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage either individual usernames or the collection of usernames in
       the current running config. It also supports purging usernames from the configuration that are not explicitly defined.

PARAMETERS                   *vyos_user-parameters*

        Parameter      Choices/Defaults                                                                           Comments
   aggregate                            The set of username objects to be configured on the remote VyOS device. The list entries can either be the username or a hash of username and properties.
   -                                    This argument is mutually exclusive with the name argument.
                                        aliases: users, collection
   configured_password                  The password to be configured on the VyOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this
   -                                    option is not same as provider password.
   full_name                            The full_name argument provides the full name of the user account to be created on the remote device. This argument accepts any text string value.
   -
   level                                The level argument configures the level of the user when logged into the system. This argument accepts string values admin or operator.
   -                                    aliases: role
   name                                 The username to be configured on the VyOS device. This argument accepts a string value and is mutually exclusive with the aggregate argument. Please note
   -                                    that this option is not same as provider username.
                                        Deprecated
                                        Starting with Ansible 2.5 we recommend using connection: network_cli.
   provider                             For more information please see the Network Guide.
   dictionary
                                        ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                        A dict object containing connection details.
       host                             Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address
       string /                         for the transport.
       required
       password                         Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
       string                           specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
       port            Default:         Specifies the port to use when building the connection to the remote device.
       integer         22
       ssh_keyfile                      Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session. If
       path                             the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
       timeout         Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
       integer         10               operation is completed, the module will error.
       username                         Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
       string                           specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   purge                 Choices:       Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the device with the exception of the
   boolean               • no ←         `admin` user (the current defined set of users).
                         • yes
   state                 Choices:       Configures the state of the username definition as it relates to the device operational configuration. When set to present, the username(s) should be
   -                     • present ←    configured in the device active configuration and when set to absent the username(s) should not be in the device active configuration
                         • absent
   update_password       Choices:       Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password. When set to always, the
   -                     • on_create    password will always be updated in the device and when set to on_create the password will be updated only if the username is created.
                         • always ←

NOTES                   *vyos_user-notes*

   Note

     • Tested against VyOS 1.1.8 (helium).
     • This module works with connection network_cli. See the VyOS OS Platform Options.
     • For more information on using Ansible to manage network devices see the Ansible Network Guide

EXAMPLES                   *vyos_user-examples*

 - name: create a new user
   vyos_user:
     name: ansible
     configured_password: password
     state: present
 - name: remove all users except admin
   vyos_user:
     purge: yes
 - name: set multiple users to level operator
   vyos_user:
     aggregate:
       - name: netop
       - name: netend
     level: operator
     state: present
 - name: Change Password for User netop
   vyos_user:
     name: netop
     configured_password: "{{ new_password }}"
     update_password: always
     state: present

RETURN VALUES                   *vyos_user-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          The list of configuration mode commands to send to the device
   list     always   Sample:
                     ['set system login user test level operator', 'set system login user authentication plaintext-password password']

STATUS                   *vyos_user-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *vyos_user-red hat support*

     • Trishna Guha (@trishnaguha)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *vyos_user-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/vyos_user_module.html
