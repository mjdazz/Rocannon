SYNOPSIS                   *gcp_pubsub_subscription*

     • A named resource representing the stream of messages from a single, specific topic, to be delivered to the subscribing application.

REQUIREMENTS                   *gcp_pubsub_subscription-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_pubsub_subscription-parameters*

           Parameter           Choices/Defaults                                                                        Comments
                                                 This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery
                                                 but before the ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that
                                                 time (on a best-effort basis).
   ack_deadline_seconds                          For pull subscriptions, this value is used as the initial value for the ack deadline. To override this value for a given message, call
   integer                                       subscriptions.modifyAckDeadline with the corresponding ackId if using pull. The minimum custom deadline you can specify is 10 seconds. The maximum
                                                 custom deadline you can specify is 600 seconds (10 minutes).
                                                 If this parameter is 0, a default value of 10 seconds is used.
                                                 For push delivery, this value is also used to set the request timeout for the call to the push endpoint.
                                                 If the subscriber never acknowledges the message, the Pub/Sub system will eventually redeliver the message.
                                Choices:
   auth_kind                    • application    The type of credential used.
   string / required            • machineaccount
                                • serviceaccount
   env_type                                      Specifies which Ansible environment you're running this module within.
   string                                        This should not be set unless you know what you're doing.
                                                 This only alters the User Agent string for any API requests.
   expiration_policy                             A policy that specifies the conditions for this subscription's expiration.
   dictionary                                    A subscription is considered active as long as any connected subscriber is successfully consuming messages from the subscription or is issuing
   added in 2.9                                  operations on the subscription. If expirationPolicy is not set, a default policy with ttl of 31 days will be used. The minimum allowed value for
                                                 expirationPolicy.ttl is 1 day.
                                                 Specifies the "time-to-live" duration for an associated resource. The resource expires if it is not active for a period of ttl. The definition of
         ttl                                     "activity" depends on the type of the associated resource. The minimum and maximum allowed values for ttl depend on the type of the associated
         string                                  resource, as well. If ttl is not set, the associated resource never expires.
                                                 A duration in seconds with up to nine fractional digits, terminated by 's'.
                                                 Example - "3.5s".
   labels
   dictionary                                    A set of key/value label pairs to assign to this Subscription.
   added in 2.8
   message_retention_duration                    How long to retain unacknowledged messages in the subscription's backlog, from the moment a message is published. If retainAckedMessages is true,
   string                     Default:           then this also configures the retention of acknowledged messages, and thus configures how far back in time a subscriptions.seek can be done.
   added in 2.8               "604800s"          Defaults to 7 days. Cannot be more than 7 days (`"604800s"`) or less than 10 minutes (`"600s"`).
                                                 A duration in seconds with up to nine fractional digits, terminated by 's'. Example: `"600.5s"`.
   name                                          Name of the subscription.
   string / required
   project                                       The Google Cloud Platform project to use.
   string
   push_config                                   If push delivery is used with this subscription, this field is used to configure it. An empty pushConfig signifies that the subscriber will pull and
   dictionary                                    ack messages using API methods.
                                                 Endpoint configuration attributes.
                                                 Every endpoint has a set of API supported attributes that can be used to control different aspects of the message delivery.
                                                 The currently supported attribute is x-goog-version, which you can use to change the format of the pushed message. This attribute indicates the
                                                 version of the data expected by the endpoint. This controls the shape of the pushed message (i.e., its fields and metadata). The endpoint version is
         attributes                              based on the version of the Pub/Sub API.
         dictionary                              If not present during the subscriptions.create call, it will default to the version of the API used to make such call. If not present during a
                                                 subscriptions.modifyPushConfig call, its value will not be changed. subscriptions.get calls will always return a valid version, even if the
                                                 subscription was created without this attribute.
                                                 The possible values for this attribute are: - v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.
                                                 - v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.
         push_endpoint                           A URL locating the endpoint to which messages should be pushed.
         string / required                       For example, a Webhook endpoint might use "https://example.com/push".
   retain_acked_messages        Choices:         Indicates whether to retain acknowledged messages. If `true`, then messages are not expunged from the subscription's backlog, even if they are
   boolean                      • no             acknowledged, until they fall out of the messageRetentionDuration window.
   added in 2.8                 • yes
   scopes                                        Array of scopes to be used.
   list
   service_account_contents                      The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                         An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                          The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                        Choices:
   string                       • present ←      Whether the given object should exist in GCP
                                • absent
                                                 A reference to a Topic resource.
   topic                                         This field represents a link to a Topic resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and
   dictionary / required                         value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_pubsub_topic task and then set this topic field to
                                                 "{{ name-of-resource }}"

NOTES                   *gcp_pubsub_subscription-notes*

   Note

     • API Reference: https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions
     • Managing Subscriptions: https://cloud.google.com/pubsub/docs/admin#managing_subscriptions
     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_pubsub_subscription-examples*

 - name: create a topic
   gcp_pubsub_topic:
     name: topic-subscription
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: topic

 - name: create a subscription
   gcp_pubsub_subscription:
     name: test_object
     topic: "{{ topic }}"
     ack_deadline_seconds: 300
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_pubsub_subscription-return values*

   Common return values are documented here, the following are the fields unique to this module:

             Key            Returned                                                                           Description
                                     This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery but before the
                                     ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that time (on a best-effort
                                     basis).
   ackDeadlineSeconds                For pull subscriptions, this value is used as the initial value for the ack deadline. To override this value for a given message, call
   integer                  success  subscriptions.modifyAckDeadline with the corresponding ackId if using pull. The minimum custom deadline you can specify is 10 seconds. The maximum custom
                                     deadline you can specify is 600 seconds (10 minutes).
                                     If this parameter is 0, a default value of 10 seconds is used.
                                     For push delivery, this value is also used to set the request timeout for the call to the push endpoint.
                                     If the subscriber never acknowledges the message, the Pub/Sub system will eventually redeliver the message.
   expirationPolicy                  A policy that specifies the conditions for this subscription's expiration.
   complex                  success  A subscription is considered active as long as any connected subscriber is successfully consuming messages from the subscription or is issuing operations on the
                                     subscription. If expirationPolicy is not set, a default policy with ttl of 31 days will be used. The minimum allowed value for expirationPolicy.ttl is 1 day.
                                     Specifies the "time-to-live" duration for an associated resource. The resource expires if it is not active for a period of ttl. The definition of "activity"
          ttl                        depends on the type of the associated resource. The minimum and maximum allowed values for ttl depend on the type of the associated resource, as well. If ttl is
          string            success  not set, the associated resource never expires.
                                     A duration in seconds with up to nine fractional digits, terminated by 's'.
                                     Example - "3.5s".
   labels                   success  A set of key/value label pairs to assign to this Subscription.
   dictionary
                                     How long to retain unacknowledged messages in the subscription's backlog, from the moment a message is published. If retainAckedMessages is true, then this also
   messageRetentionDuration success  configures the retention of acknowledged messages, and thus configures how far back in time a subscriptions.seek can be done. Defaults to 7 days. Cannot be more
   string                            than 7 days (`"604800s"`) or less than 10 minutes (`"600s"`).
                                     A duration in seconds with up to nine fractional digits, terminated by 's'. Example: `"600.5s"`.
   name                     success  Name of the subscription.
   string
   pushConfig               success  If push delivery is used with this subscription, this field is used to configure it. An empty pushConfig signifies that the subscriber will pull and ack
   complex                           messages using API methods.
                                     Endpoint configuration attributes.
                                     Every endpoint has a set of API supported attributes that can be used to control different aspects of the message delivery.
                                     The currently supported attribute is x-goog-version, which you can use to change the format of the pushed message. This attribute indicates the version of the
                                     data expected by the endpoint. This controls the shape of the pushed message (i.e., its fields and metadata). The endpoint version is based on the version of
          attributes        success  the Pub/Sub API.
          dictionary                 If not present during the subscriptions.create call, it will default to the version of the API used to make such call. If not present during a
                                     subscriptions.modifyPushConfig call, its value will not be changed. subscriptions.get calls will always return a valid version, even if the subscription was
                                     created without this attribute.
                                     The possible values for this attribute are: - v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.
                                     - v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.
          pushEndpoint      success  A URL locating the endpoint to which messages should be pushed.
          string                     For example, a Webhook endpoint might use "https://example.com/push".
   retainAckedMessages      success  Indicates whether to retain acknowledged messages. If `true`, then messages are not expunged from the subscription's backlog, even if they are acknowledged,
   boolean                           until they fall out of the messageRetentionDuration window.
   topic                    success  A reference to a Topic resource.
   dictionary

STATUS                   *gcp_pubsub_subscription-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_pubsub_subscription-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_pubsub_subscription_module.html
