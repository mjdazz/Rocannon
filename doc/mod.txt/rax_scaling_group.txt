SYNOPSIS                   *rax_scaling_group*

     • Manipulate Rackspace Cloud Autoscale Groups

REQUIREMENTS                   *rax_scaling_group-requirements*

   The below requirements are needed on the host that executes this module.

     • pyrax
     • python >= 2.6

PARAMETERS                   *rax_scaling_group-parameters*

     Parameter                   Choices/Defaults                                                                              Comments
   api_key                                                        Rackspace API key, overrides credentials.
   string                                                         aliases: password
   auth_endpoint  Default:                                        The URI of the authentication service.
   -              "https://identity.api.rackspacecloud.com/v2.0/"
   config_drive     Choices:
   boolean          • no ←                                        Attach read-only configuration drive to server as label config-2
                    • yes
   cooldown                                                       The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between
   -                                                              0 and 86400 (24 hrs).
   credentials                                                    File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   path                                                           aliases: creds_file
   disk_config      Choices:
   -                • auto ←                                      Disk partitioning strategy
                    • manual
   env                                                            Environment as configured in ~/.pyrax.cfg, see
   string                                                         https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   files                                                          Files to insert into the instance. Hash of remotepath: localpath
   -
   flavor                                                         flavor to use for the instance
   - / required
   identity_type  Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -              "rackspace"
   image                                                          image to use for the instance. Can be an id, human_id or name
   - / required
   key_name                                                       key pair to use on the instance
   -
   loadbalancers                                                  List of load balancer id and port hashes
   -
   max_entities                                                   The maximum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000.
   - / required
   meta                                                           A hash of metadata to associate with the instance
   -
   min_entities                                                   The minimum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000.
   - / required
   name                                                           Name to give the scaling group
   - / required
   networks       Default:                                        The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces.
   -              ["public", "private"]                           Can be id or label.
   region         Default:                                        Region to create an instance in.
   string         "DFW"
   server_name                                                    The base name for servers created by Autoscale
   - / required
   state            Choices:
   -                • present ←                                   Indicate desired state of the resource
                    • absent
   tenant_id                                                      The tenant ID used for authentication.
   -
   tenant_name                                                    The tenant name used for authentication.
   -
   user_data                                                      Data to be uploaded to the servers config drive. This option implies config_drive. Can be a file path or a string
   -
   username                                                       Rackspace username, overrides credentials.
   string
   validate_certs   Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean          • no                                          aliases: verify_ssl
                    • yes
   wait             Choices:
   boolean          • no ←                                        wait for the scaling group to finish provisioning the minimum amount of servers
                    • yes
   wait_timeout   Default:                                        how long before wait gives up, in seconds
   -              300

NOTES                   *rax_scaling_group-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)
     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_scaling_group-examples*

 ---
 - hosts: localhost
   gather_facts: false
   connection: local
   tasks:
     - rax_scaling_group:
         credentials: ~/.raxpub
         region: ORD
         cooldown: 300
         flavor: performance1-1
         image: bb02b1a3-bc77-4d17-ab5b-421d89850fca
         min_entities: 5
         max_entities: 10
         name: ASG Test
         server_name: asgtest
         loadbalancers:
             - id: 228385
               port: 80
       register: asg

STATUS                   *rax_scaling_group-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Matt Martz (@sivel)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_scaling_group-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_scaling_group_module.html
