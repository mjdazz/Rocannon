SYNOPSIS                   *gcp_cloudfunctions_cloud_function_info*

     • Gather info for GCP CloudFunction

REQUIREMENTS                   *gcp_cloudfunctions_cloud_function_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_cloudfunctions_cloud_function_info-parameters*

          Parameter           Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application      The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   env_type                                      Specifies which Ansible environment you're running this module within.
   string                                        This should not be set unless you know what you're doing.
                                                 This only alters the User Agent string for any API requests.
   location                                      The location of this cloud function.
   string / required
   project                                       The Google Cloud Platform project to use.
   string
   scopes                                        Array of scopes to be used.
   list
   service_account_contents                      The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                         An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                          The path of a Service Account JSON file if serviceaccount is selected as type.
   path

NOTES                   *gcp_cloudfunctions_cloud_function_info-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_cloudfunctions_cloud_function_info-examples*

 - name: get info on a cloud function
   gcp_cloudfunctions_cloud_function_info:
     location: us-central1
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"

RETURN VALUES                   *gcp_cloudfunctions_cloud_function_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

            Key           Returned                                                                            Description
   resources              always   List of resources
   complex
     availableMemoryMb    success  The amount of memory in MB available for a function.
     integer
     description          success  User-provided description of a function.
     string
     entryPoint                    The name of the function (as defined in source code) that will be executed.
     string               success  Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use
                                   function named "function". For Node.js this is name of a function exported by the module specified in source_location.
     environmentVariables success  Environment variables that shall be available during function execution.
     dictionary
     eventTrigger         success  An HTTPS endpoint type of source that can be triggered via URL.
     complex
           eventType      success  The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`.
           string
           resource       success  The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket.` .
           string
           service        success  The hostname of the service that should be observed.
           string
     httpsTrigger         success  An HTTPS endpoint type of source that can be triggered via URL.
     complex
           url            success  The deployed url for the function.
           string
     labels               success  A set of key/value label pairs associated with this Cloud Function.
     dictionary
     location             success  The location of this cloud function.
     string
     name                 success  A user-defined name of the function. Function names must be unique globally and match pattern `projects/"/locations/"/functions/"`.
     string
     runtime              success  The runtime in which the function is going to run. If empty, defaults to Node.js 6.
     string
     serviceAccountEmail  success  The email of the service account for this function.
     string
     sourceArchiveUrl     success  The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.
     string
     sourceRepository     success  The source repository where a function is hosted.
     complex
           deployedUrl    success  The URL pointing to the hosted repository where the function were defined at the time of deployment.
           string
           url            success  The URL pointing to the hosted repository where the function is defined .
           string
     sourceUploadUrl      success  The Google Cloud Storage signed URL used for source uploading.
     string
     status               success  Status of the function deployment.
     string
     timeout              success  The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults
     string                        to 60 seconds.
     trigger_http         success  Use HTTP to trigger this function.
     boolean
     updateTime           success  The last update timestamp of a Cloud Function.
     string
     versionId            success  The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being created.
     string

STATUS                   *gcp_cloudfunctions_cloud_function_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_cloudfunctions_cloud_function_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_cloudfunctions_cloud_function_info_module.html
