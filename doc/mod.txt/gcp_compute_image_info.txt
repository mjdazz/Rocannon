SYNOPSIS                   *gcp_compute_image_info*

     • Gather info for GCP Image
     • This module was called gcp_compute_image_facts before Ansible 2.9. The usage has not changed.

   Aliases: gcp_compute_image_facts

REQUIREMENTS                   *gcp_compute_image_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_compute_image_info-parameters*

          Parameter           Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application      The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   env_type                                      Specifies which Ansible environment you're running this module within.
   string                                        This should not be set unless you know what you're doing.
                                                 This only alters the User Agent string for any API requests.
   filters                                       A list of filter value pairs. Available filters are listed here https://cloud.google.com/sdk/gcloud/reference/topic/filters.
   list                                          Each additional filter in the list will act be added as an AND condition (filter1 and filter2) .
   project                                       The Google Cloud Platform project to use.
   string
   scopes                                        Array of scopes to be used.
   list
   service_account_contents                      The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                         An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                          The path of a Service Account JSON file if serviceaccount is selected as type.
   path

NOTES                   *gcp_compute_image_info-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_compute_image_info-examples*

 - name: get info on an image
   gcp_compute_image_info:
     filters:
     - name = test_object
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"

RETURN VALUES                   *gcp_compute_image_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

              Key            Returned                                                                           Description
   resources                 always   List of resources
   complex
     archiveSizeBytes        success  Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
     integer
     creationTimestamp       success  Creation timestamp in RFC3339 text format.
     string
     deprecated              success  The deprecation status associated with this image.
     complex
             deleted         success  An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not
             string                   change unless the client explicitly changes it.
             deprecated      success  An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will
             string                   not change unless the client explicitly changes it.
             obsolete        success  An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will
             string                   not change unless the client explicitly changes it.
             replacement     success  The URL of the suggested replacement for a deprecated resource.
             string                   The suggested replacement resource must be the same kind of resource as the deprecated resource.
             state                    The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will
             string          success  return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources
                                      will be rejected and result in an error.
     description             success  An optional description of this resource. Provide this property when you create the resource.
     string
     diskSizeGb              success  Size of the image when restored onto a persistent disk (in GB).
     integer
     family                  success  The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family
     string                           always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
                                      A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which
     guestOsFeatures                  allows each virtual CPU to have its own queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or
     complex                 success  higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.
                                      For new Windows images, the server might also populate this field with the value WINDOWS, to indicate that this is a Windows image.
                                      This value is purely informational and does not enable or disable any features.
             type            success  The type of supported feature. Currently only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images, the server might also populate this property with
             string                   the value WINDOWS to indicate that this is a Windows image. This value is purely informational and does not enable or disable any features.
     id                      success  The unique identifier for the resource. This identifier is defined by the server.
     integer
     imageEncryptionKey      success  Encrypts the image using a customer-supplied encryption key.
     complex                          After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image) .
             rawKey          success  Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
             string
             sha256          success  The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
             string
     labelFingerprint        success  The fingerprint used for optimistic locking of this resource. Used internally during updates.
     string
     labels                  success  Labels to apply to this Image.
     dictionary
     licenses                success  Any applicable license URI.
     list
     name                             Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the
     string                  success  name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]"[a-z0-9])?` which means the first character must be a lowercase letter, and
                                      all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     rawDisk                 success  The parameters of the raw disk image.
     complex
             containerType   success  The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format.
             string                   Provided by the client when the disk image is created.
             sha1Checksum    success  An optional SHA1 checksum of the disk image before unpackaging.
             string                   This is provided by the client when the disk image is created.
             source          success  The full Google Cloud Storage URL where disk storage is stored You must provide either this property or the sourceDisk property but not both.
             string
     sourceDisk              success  The source disk to create this image based on.
     dictionary                       You must provide either this property or the rawDisk.source property but not both to create an image.
     sourceDiskEncryptionKey success  The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
     complex
             rawKey          success  Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
             string
             sha256          success  The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
             string
     sourceDiskId            success  The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of
     string                           a given disk name.
     sourceType              success  The type of the image used to create this disk. The default and only value is RAW .
     string

STATUS                   *gcp_compute_image_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_compute_image_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_compute_image_info_module.html
