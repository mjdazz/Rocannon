SYNOPSIS                   *gcp_container_node_pool_info*

     • Gather info for GCP NodePool
     • This module was called gcp_container_node_pool_facts before Ansible 2.9. The usage has not changed.

   Aliases: gcp_container_node_pool_facts

REQUIREMENTS                   *gcp_container_node_pool_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_container_node_pool_info-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
                                               The cluster this node pool belongs to.
   cluster                                     This field represents a link to a Cluster resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and
   dictionary / required                       value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_container_cluster task and then set this cluster field
                                               to "{{ name-of-resource }}"
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
   location                                    The location where the node pool is deployed.
   string / required                           aliases: region, zone
   added in 2.8
   project                                     The Google Cloud Platform project to use.
   string
   scopes                                      Array of scopes to be used.
   list
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path

NOTES                   *gcp_container_node_pool_info-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_container_node_pool_info-examples*

 - name: get info on a node pool
   gcp_container_node_pool_info:
     cluster: "{{ cluster }}"
     location: us-central1-a
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"

RETURN VALUES                   *gcp_container_node_pool_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

              Key             Returned                                                                          Description
   resources                  always   List of resources
   complex
     autoscaling              success  Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
     complex
       enabled                success  Is autoscaling enabled for this node pool.
       boolean
       maxNodeCount           success  Maximum number of nodes in the NodePool. Must be >= minNodeCount.
       integer                         There has to enough quota to scale up the cluster.
       minNodeCount           success  Minimum number of nodes in the NodePool. Must be >= 1 and <= maxNodeCount.
       integer
     cluster                  success  The cluster this node pool belongs to.
     dictionary
     conditions               success  Which conditions caused the current node pool state.
     complex
       code                   success  Machine-friendly representation of the condition.
       string
     config                   success  The node configuration of the pool.
     complex
       accelerators           success  A list of hardware accelerators to be attached to each node.
       complex
         acceleratorCount     success  The number of the accelerator cards exposed to an instance.
         integer
         acceleratorType      success  The accelerator type resource name.
         string
       diskSizeGb             success  Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
       integer
       diskType               success  Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd') If unspecified, the default disk type is 'pd-standard' .
       string
       imageType              success  The image type to use for this node. Note that for a given image type, the latest version of it will be used.
       string
                                       The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to
       labels                          the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined
       dictionary             success  and conflicts should be avoided. For more information, including usage and the valid values, see: http://kubernetes.io/v1.1/docs/user-guide/labels.html An
                                       object containing a list of "key": value pairs.
                                       Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
       localSsdCount                   The number of local SSD disks to be attached to the node.
       integer                success  The limit for this value is dependant upon the maximum number of disks available on a machine per zone. See:
                                       https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits for more information.
       machineType            success  The name of a Google Compute Engine machine type (e.g.
       string                          n1-standard-1). If unspecified, the default machine type is n1-standard-1.
                                       The metadata key/value pairs assigned to instances in the cluster.
                                       Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server.
                                       Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys:
       metadata               success  "instance-template", "kube-env", "startup-script", and "user-data" Values are free-form strings, and only have meaning as interpreted by the image running in
       dictionary                      the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.
                                       The total size of all keys and values must be less than 512 KB.
                                       An object containing a list of "key": value pairs.
                                       Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
       minCpuPlatform         success  Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform .
       string
                                       The set of Google API scopes to be made available on all of the node VMs under the "default" service account.
       oauthScopes                     The following scopes are recommended, but not required, and by default are not included: https://www.googleapis.com/auth/compute is required for mounting
       list                   success  persistent storage on your nodes.
                                       https://www.googleapis.com/auth/devstorage.read_only is required for communicating with gcr.io (the Google Container Registry).
                                       If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
       preemptible            success  Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about
       boolean                         preemptible VM instances.
       serviceAccount         success  The Google Cloud Platform Service Account to be used by the node VMs. If no Service Account is specified, the "default" service account is used.
       string
       tags                   success  The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client
       list                            during cluster or node pool creation. Each tag within the list must comply with RFC1035.
       taints                 success  List of kubernetes taints to be applied to each node.
       complex
         effect               success  Effect for taint.
         string
         key                  success  Key for taint.
         string
         value                success  Value for taint.
         string
     initialNodeCount         success  The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have
     integer                           available firewall and routes quota.
     location                 success  The location where the node pool is deployed.
     string
     management               success  Management configuration for this NodePool.
     complex
       autoRepair             success  A flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail
       boolean                         health checks too many times, an automatic repair action will be triggered.
       autoUpgrade            success  A flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date
       boolean                         with the latest release version of Kubernetes.
       upgradeOptions         success  Specifies the Auto Upgrade knobs for the node pool.
       complex
         autoUpgradeStartTime success  This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
         string
         description          success  This field is set when upgrades are about to commence with the description of the upgrade.
         string
     maxPodsConstraint        success  The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
     complex
       maxPodsPerNode         success  Constraint enforced on the max num of pods per node.
       integer
     name                     success  The name of the node pool.
     string
     podIpv4CidrSize          success  The pod CIDR block size per node in this node pool.
     integer
     status                   success  Status of nodes in this pool instance.
     string
     statusMessage            success  Additional information about the current status of this node pool instance.
     string
     version                  success  The version of the Kubernetes of this node.
     string

STATUS                   *gcp_container_node_pool_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_container_node_pool_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_container_node_pool_info_module.html
