SYNOPSIS                   *nxos_acl*

     • Manages access list entries for ACLs.

PARAMETERS                   *nxos_acl-parameters*

      Parameter     Choices/Defaults                                                                             Comments
   ack               Choices:         Match on the ACK bit.
   -                 • enable
                     Choices:
   action            • permit         Action of the ACE.
   -                 • deny
                     • remark
   dest                               Destination ip and mask using IP/MASK notation and supports the keyword 'any'.
   -
   dest_port1                         Port/protocol and also first (lower) port when using range operand.
   -
   dest_port2                         Second (end) port when using range operand.
   -
                     Choices:
                     • any
   dest_port_op      • eq
   -                 • gt             Destination port operands such as eq, neq, gt, lt, range.
                     • lt
                     • neq
                     • range
                     Choices:
                     • af11
                     • af12
                     • af13
                     • af21
                     • af22
                     • af23
                     • af31
                     • af32
                     • af33
   dscp              • af41           Match packets with given dscp value.
   -                 • af42
                     • af43
                     • cs1
                     • cs2
                     • cs3
                     • cs4
                     • cs5
                     • cs6
                     • cs7
                     • default
                     • ef
   established       Choices:         Match established connections.
   -                 • enable
   fin               Choices:         Match on the FIN bit.
   -                 • enable
   fragments         Choices:         Check non-initial fragments.
   -                 • enable
   log               Choices:         Log matches against this entry.
   -                 • enable
   name                               Case sensitive name of the access list (ACL).
   - / required
                     Choices:
                     • critical
                     • flash
   precedence        • flash-override
   -                 • immediate      Match packets with given precedence.
                     • internet
                     • network
                     • priority
                     • routine
   proto                              Port number or protocol (as supported by the switch).
   -
                                      Deprecated
                                      Starting with Ansible 2.5 we recommend using connection: network_cli.
                                      This option is only required if you are using NX-API.
   provider                           For more information please see the NXOS Platform Options guide.
   dictionary
                                      ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                      A dict object containing connection details.
    auth_pass                         Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the value
    string                            is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
    added in 2.5.3
    authorize        Choices:         Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
    boolean          • no ←           commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
    added in 2.5.3   • yes
    host                              Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address
    string /                          for the transport.
    required
    password                          Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or nxapi transports. If the
    string                            value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
    port           Default:           Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port value will default to the
    integer        "0 (use common     appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                   port)"
    ssh_keyfile                       Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli transport. If the value is not
    string                            specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
    timeout        Default:           Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
    integer        10                 operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc).
    transport        Choices:         Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to the device over cli (ssh) or
    string /         • cli ←          nxapi.
    required         • nxapi
    use_proxy        Choices:
    boolean          • no             If no, the environment variables http_proxy and https_proxy will be ignored.
    added in 2.5     • yes ←
    use_ssl          Choices:
    boolean          • no ←           Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                     • yes
    username                          Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or the nxapi
    string                            authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be
                                      used instead.
    validate_certs   Choices:         If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the transport
    boolean          • no             argument is not nxapi, this value is ignored.
                     • yes ←
   psh               Choices:         Match on the PSH bit.
   -                 • enable
   remark                             If action is set to remark, this is the description.
   -
   rst               Choices:         Match on the RST bit.
   -                 • enable
   seq                                Sequence number of the entry (ACE).
   -
   src                                Source ip and mask using IP/MASK notation and supports keyword 'any'.
   -
   src_port1                          Port/protocol and also first (lower) port when using range operand.
   -
   src_port2                          Second (end) port when using range operand.
   -
                     Choices:
                     • any
   src_port_op       • eq
   -                 • gt             Source port operands such as eq, neq, gt, lt, range.
                     • lt
                     • neq
                     • range
                     Choices:
   state             • present ←      Specify desired state of the resource.
   -                 • absent
                     • delete_acl
   syn               Choices:         Match on the SYN bit.
   -                 • enable
   time_range                         Name of time-range to apply.
   -
   urg               Choices:         Match on the URG bit.
   -                 • enable

NOTES                   *nxos_acl-notes*

   Note

     • Tested against NXOSv 7.3.(0)D1(1) on VIRL
     • state=absent removes the ACE if it exists.
     • state=delete_acl deletes the ACL if it exists.
     • For idempotency, use port numbers for the src/dest port params like src_port1 and names for the well defined protocols for the proto param.
     • Although this module is idempotent in that if the ace as presented in the task is identical to the one on the switch, no changes will be made. If there is any difference, what is in Ansible
       will be pushed (configured options will be overridden). This is to improve security, but at the same time remember an ACE is removed, then re-added, so if there is a change, the new ACE will
       be exactly what parameters you are sending to the module.
     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_acl-examples*

 # configure ACL ANSIBLE
 - nxos_acl:
     name: ANSIBLE
     seq: 10
     action: permit
     proto: tcp
     src: 192.0.2.1/24
     dest: any
     state: present

RETURN VALUES                   *nxos_acl-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          commands sent to the device
   list     always   Sample:
                     ['ip access-list ANSIBLE', '10 permit tcp 192.0.2.1/24 any']

STATUS                   *nxos_acl-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_acl-red hat support*

     • Jason Edelman (@jedelman8)
     • Gabriele Gerbino (@GGabriele)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_acl-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_acl_module.html
