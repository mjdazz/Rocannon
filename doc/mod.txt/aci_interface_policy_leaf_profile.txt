SYNOPSIS                   *aci_interface_policy_leaf_profile*

     • Manage fabric interface policy leaf profiles on Cisco ACI fabrics.

Parameters¶

         Parameter        Choices/Defaults                                                                          Comments
                                           The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
   certificate_name                        If a private_key filename was provided, this defaults to the private_key basename, without extension.
   string                                  If PEM-formatted content was provided for private_key, this defaults to the username value.
                                           aliases: cert_name
   description                             Description for the Fabric access policy leaf interface profile.
   string                                  aliases: descr
   host                                    IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                       aliases: hostname
   leaf_interface_profile                  The name of the Fabric access policy leaf interface profile.
   string / required                       aliases: name, leaf_interface_profile_name
                            Choices:       Influence the output of this ACI module.
   output_level             • debug        normal means the standard output, incl. current dict
   string                   • info         info adds informational output, incl. previous, proposed and sent dicts
                            • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                                The password to use for authentication.
   string / required                       This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   port                                    Port number to be used for REST connection.
   integer                                 The default value depends on parameter use_ssl.
                                           Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                             This value also influences the default certificate_name that is used.
   string / required                       This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                           aliases: cert_key
                            Choices:
   state                    • absent       Use present or absent for adding or removing.
   string                   • present ←    Use query for listing an object or multiple objects.
                            • query
   timeout                Default:         The socket level timeout in seconds.
   integer                30
   use_proxy                Choices:
   boolean                  • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                            • yes ←
   use_ssl                  Choices:
   boolean                  • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                            • yes ←
   username               Default:         The username to use for authentication.
   string                 "admin"          aliases: user
   validate_certs           Choices:       If no, SSL certificates will not be validated.
   boolean                  • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                            • yes ←

See Also¶

   See also

   APIC Management Information Model reference
   More information about the internal APIC class infra:AccPortP.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

Examples¶

 - name: Add a new leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     description:  leafintprfname description
     state: present
   delegate_to: localhost

 - name: Remove a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: absent
   delegate_to: localhost

 - name: Remove all leaf_interface_profiles
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     state: absent
   delegate_to: localhost

 - name: Query a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: query
   delegate_to: localhost
   register: query_result

Return Values¶

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

  Authors¶

     • Bruno Calogero (@brunocalogero)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

REQUIREMENTS                   *aci_interface_policy_leaf_profile-requirements*

PARAMETERS                   *aci_interface_policy_leaf_profile-parameters*

         Parameter        Choices/Defaults                                                                          Comments
                                           The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
   certificate_name                        If a private_key filename was provided, this defaults to the private_key basename, without extension.
   string                                  If PEM-formatted content was provided for private_key, this defaults to the username value.
                                           aliases: cert_name
   description                             Description for the Fabric access policy leaf interface profile.
   string                                  aliases: descr
   host                                    IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                       aliases: hostname
   leaf_interface_profile                  The name of the Fabric access policy leaf interface profile.
   string / required                       aliases: name, leaf_interface_profile_name
                            Choices:       Influence the output of this ACI module.
   output_level             • debug        normal means the standard output, incl. current dict
   string                   • info         info adds informational output, incl. previous, proposed and sent dicts
                            • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                                The password to use for authentication.
   string / required                       This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   port                                    Port number to be used for REST connection.
   integer                                 The default value depends on parameter use_ssl.
                                           Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                             This value also influences the default certificate_name that is used.
   string / required                       This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                           aliases: cert_key
                            Choices:
   state                    • absent       Use present or absent for adding or removing.
   string                   • present ←    Use query for listing an object or multiple objects.
                            • query
   timeout                Default:         The socket level timeout in seconds.
   integer                30
   use_proxy                Choices:
   boolean                  • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                            • yes ←
   use_ssl                  Choices:
   boolean                  • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                            • yes ←
   username               Default:         The username to use for authentication.
   string                 "admin"          aliases: user
   validate_certs           Choices:       If no, SSL certificates will not be validated.
   boolean                  • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                            • yes ←

See Also¶

   See also

   APIC Management Information Model reference
   More information about the internal APIC class infra:AccPortP.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

Examples¶

 - name: Add a new leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     description:  leafintprfname description
     state: present
   delegate_to: localhost

 - name: Remove a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: absent
   delegate_to: localhost

 - name: Remove all leaf_interface_profiles
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     state: absent
   delegate_to: localhost

 - name: Query a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: query
   delegate_to: localhost
   register: query_result

Return Values¶

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

  Authors¶

     • Bruno Calogero (@brunocalogero)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

NOTES                   *aci_interface_policy_leaf_profile-notes*

EXAMPLES                   *aci_interface_policy_leaf_profile-examples*

 - name: Add a new leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     description:  leafintprfname description
     state: present
   delegate_to: localhost

 - name: Remove a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: absent
   delegate_to: localhost

 - name: Remove all leaf_interface_profiles
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     state: absent
   delegate_to: localhost

 - name: Query a leaf_interface_profile
   aci_interface_policy_leaf_profile:
     host: apic
     username: admin
     password: SomeSecretPassword
     leaf_interface_profile: leafintprfname
     state: query
   delegate_to: localhost
   register: query_result

RETURN VALUES                   *aci_interface_policy_leaf_profile-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

STATUS                   *aci_interface_policy_leaf_profile-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Bruno Calogero (@brunocalogero)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aci_interface_policy_leaf_profile-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aci_interface_policy_leaf_profile_module.html
