SYNOPSIS                   *iam_user*

     • Manage AWS IAM users

REQUIREMENTS                   *iam_user-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • python >= 2.6

PARAMETERS                   *iam_user-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   managed_policy                                A list of managed policy ARNs or friendly names to attach to the user. To embed an inline policy, use iam_policy.
   list
   name                                          The name of the user to create.
   string / required
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   purge_policy                   Choices:
   boolean                        • no ←         Detach policies which are not included in managed_policy list
                                  • yes
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:
   string / required              • present      Create or remove the IAM user
                                  • absent
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *iam_user-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *iam_user-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.
 # Note: This module does not allow management of groups that users belong to.
 #       Groups should manage their membership directly using `iam_group`,
 #       as users belong to them.

 # Create a user
 - iam_user:
     name: testuser1
     state: present

 # Create a user and attach a managed policy using its ARN
 - iam_user:
     name: testuser1
     managed_policy:
       - arn:aws:iam::aws:policy/AmazonSNSFullAccess
     state: present

 # Remove all managed policies from an existing user with an empty list
 - iam_user:
     name: testuser1
     state: present
     purge_policy: true

 # Delete the user
 - iam_user:
     name: testuser1
     state: absent

RETURN VALUES                   *iam_user-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key      Returned                                                                                 Description
   user          success  dictionary containing all the user information
   complex
     arn                  the Amazon Resource Name (ARN) specifying the user
     string               Sample:
                          arn:aws:iam::1234567890:user/testuser1
     create_date          the date and time, in ISO 8601 date-time format, when the user was created
     string               Sample:
                          2017-02-08T04:36:28+00:00
     path                 the path to the user
     string               Sample:
                          /
     user_id              the stable and unique string identifying the user
     string               Sample:
                          AGPAIDBWE12NSFINE55TM
     user_name            the friendly name that identifies the user
     string               Sample:
                          testuser1

STATUS                   *iam_user-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Josh Souza (@joshsouza)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *iam_user-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/iam_user_module.html
