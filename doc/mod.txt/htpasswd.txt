SYNOPSIS                   *htpasswd*

     • Add and remove username/password entries in a password file using htpasswd.
     • This is used by web servers such as Apache and Nginx for basic authentication.

REQUIREMENTS                   *htpasswd-requirements*

   The below requirements are needed on the host that executes this module.

     • passlib>=1.6

PARAMETERS                   *htpasswd-parameters*

     Parameter    Choices/Defaults                                                                               Comments
                                     The attributes the resulting file or directory should have.
   attributes                        To get supported flags look at the man page for chattr on the target system.
   string                            This string should contain the attributes in the same order as the one displayed by lsattr.
                                     The = operator is assumed as default, otherwise + or - operators need to be included in the string.
                                     aliases: attr
   create          Choices:
   boolean         • no              Used with state=present. If specified, the file will be created if it does not already exist. If set to "no", will fail if the file does not exist
                   • yes ←
                   Choices:
   crypt_scheme    • apr_md5_crypt ← Encryption scheme to be used. As well as the four choices listed here, you can also use any other hash supported by passlib, such as md5_crypt and sha256_crypt,
   -               • des_crypt       which are linux passwd hashes. If you do so the password file will not be compatible with Apache or Nginx
                   • ldap_sha1
                   • plaintext
   group                             Name of the group that should own the file/directory, as would be fed to chown.
   string
                                     The permissions the resulting file or directory should have.
                                     For those used to /usr/bin/chmod remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an
   mode                              octal number (like 0644 or 01777) or quote it (like '644' or '1777') so Ansible receives a string and can do its own conversion from string into number.
   string                            Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
                                     As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r).
                                     As of Ansible 2.6, the mode may also be the special string preserve.
                                     When set to preserve the file will be given the same permissions as the source file.
   name                              User name to add or remove
   - / required                      aliases: username
   owner                             Name of the user that should own the file/directory, as would be fed to chown.
   string
   password                          Password associated with user.
   -                                 Must be specified if user does not exist yet.
   path                              Path to the file that contains the usernames and passwords
   - / required                      aliases: dest, destfile
   selevel       Default:            The level part of the SELinux file context.
   string        "s0"                This is the MLS/MCS attribute, sometimes known as the range.
                                     When set to _default, it will use the level portion of the policy if available.
   serole                            The role part of the SELinux file context.
   string                            When set to _default, it will use the role portion of the policy if available.
   setype                            The type part of the SELinux file context.
   string                            When set to _default, it will use the type portion of the policy if available.
   seuser                            The user part of the SELinux file context.
   string                            By default it uses the system policy, where applicable.
                                     When set to _default, it will use the user portion of the policy if available.
   state           Choices:
   -               • present ←       Whether the user entry should be present or not
                   • absent
                                     Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
                                     By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or
   unsafe_writes   Choices:          just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written
   boolean         • no ←            in an unsafe manner.
                   • yes             This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe
                                     writes).
                                     IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.

NOTES                   *htpasswd-notes*

   Note

     • This module depends on the passlib Python library, which needs to be installed on all target systems.
     • On Debian, Ubuntu, or Fedora: install python-passlib.
     • On RHEL or CentOS: Enable EPEL, then install python-passlib.

EXAMPLES                   *htpasswd-examples*

 # Add a user to a password file and ensure permissions are set
 - htpasswd:
     path: /etc/nginx/passwdfile
     name: janedoe
     password: '9s36?;fyNp'
     owner: root
     group: www-data
     mode: 0640

 # Remove a user from a password file
 - htpasswd:
     path: /etc/apache2/passwdfile
     name: foobar
     state: absent

 # Add a user to a password file suitable for use by libpam-pwdfile
 - htpasswd:
     path: /etc/mail/passwords
     name: alex
     password: oedu2eGh
     crypt_scheme: md5_crypt

STATUS                   *htpasswd-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ansible Core Team

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *htpasswd-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/htpasswd_module.html
