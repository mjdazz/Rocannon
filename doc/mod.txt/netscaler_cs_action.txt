SYNOPSIS                   *netscaler_cs_action*

     • Manage content switching actions
     • This module is intended to run either on the ansible control node or a bastion (jumpserver) with access to the actual netscaler instance

REQUIREMENTS                   *netscaler_cs_action-requirements*

   The below requirements are needed on the host that executes this module.

     • nitro python sdk

PARAMETERS                   *netscaler_cs_action-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   comment                            Comments associated with this cs action.
   -
   name                               Name for the content switching action. Must begin with an ASCII alphanumeric or underscore _ character, and must contain only ASCII alphanumeric, underscore _,
   -                                  hash #, period ., space  , colon :, at sign @, equal sign =, and hyphen - characters. Can be changed after the content switching action is created.
   nitro_pass                         The password with which to authenticate to the netscaler node.
   string / required
   nitro_protocol      Choices:
   string              • http ←       Which protocol to use when accessing the nitro API objects.
                       • https
   nitro_timeout     Default:         Time in seconds until a timeout error is thrown when establishing a new session with Netscaler
   float             310
   nitro_user                         The username with which to authenticate to the netscaler node.
   string / required
   nsip                               The ip address of the netscaler appliance where the nitro API calls will be made.
   string / required                  The port can be specified with the colon (:). E.g. 192.168.1.1:555.
   save_config         Choices:       If yes the module will save the configuration on the netscaler node if it makes any changes.
   boolean             • no           The module will not save the configuration on the netscaler node if it made no changes.
                       • yes ←
   state               Choices:       The state of the resource being configured by the module on the netscaler node.
   string              • absent       When present the resource will be created if needed and configured according to the module's parameters.
                       • present ←    When absent the resource will be deleted from the netscaler node.
   targetlbvserver                    Name of the load balancing virtual server to which the content is switched.
   -
   targetvserver                      Name of the VPN virtual server to which the content is switched.
   -
   targetvserverexpr                  Information about this content switching action.
   -
   validate_certs      Choices:
   boolean             • no           If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.
                       • yes ←

NOTES                   *netscaler_cs_action-notes*

   Note

     • For more information on using Ansible to manage Citrix NetScaler Network devices see https://www.ansible.com/ansible-netscaler.

EXAMPLES                   *netscaler_cs_action-examples*

 # lb_vserver_1 must have been already created with the netscaler_lb_vserver module

 - name: Configure netscaler content switching action
   delegate_to: localhost
   netscaler_cs_action:
       nsip: 172.18.0.2
       nitro_user: nsroot
       nitro_pass: nsroot
       validate_certs: no

       state: present

       name: action-1
       targetlbvserver: lb_vserver_1

RETURN VALUES                   *netscaler_cs_action-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   diff                List of differences between the actual configured object and the configuration specified in the module
   dictionary failure  Sample:
                       { 'targetlbvserver': 'difference. ours: (str) server1 other: (str) server2' }
   loglines            list of logged messages by the module
   list       always   Sample:
                       ['message 1', 'message 2']
   msg                 Message detailing the failure reason
   string     failure  Sample:
                       Action does not exist

STATUS                   *netscaler_cs_action-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • George Nikolopoulos (@giorgos-nikolopoulos)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *netscaler_cs_action-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/netscaler_cs_action_module.html
