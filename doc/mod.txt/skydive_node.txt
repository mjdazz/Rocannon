SYNOPSIS                   *skydive_node*

     • This module handles adding node to the Skydive topology.

REQUIREMENTS                   *skydive_node-requirements*

   The below requirements are needed on the host that executes this module.

     • skydive-client

PARAMETERS                   *skydive_node-parameters*

     Parameter   Choices/Defaults                                                                              Comments
   host                           To define host for the node.
   -
   metadata                       To define metadata for the node.
   -
   name                           To define name for the node.
   - / required
   node_type                      To define type for the node.
   - / required
   provider                       A dict object containing connection details.
   -
    endpoint                      Specifies the hostname/address along with the port as localhost:8082for connecting to the remote instance of SKYDIVE client over the REST API.
    - / required
    insecure       Choices:
    boolean        • no ←         Ignore SSL certification verification.
                   • yes
    password                      Specifies the password to use to authenticate the connection to the remote instance of SKYDIVE client.
    -
    ssl            Choices:
    boolean        • no ←         Specifies the ssl parameter that decides if the connection type shall be http or https.
                   • yes
    user                          Configures the username to use to authenticate the connection to the remote instance of SKYDIVE client.
    -
   seed          Default:         used to generate the UUID of the node
   -             ""
                   Choices:
   state           • present ←    State of the Skydive Node. If value is present new node will be created else if it is absent it will be deleted.
   -               • update
                   • absent

NOTES                   *skydive_node-notes*

   Note

     • This module must be run locally, which can be achieved by specifying connection: local.

EXAMPLES                   *skydive_node-examples*

 - name: create tor node
   skydive_node:
     name: TOR
     node_type: fabric
     seed: TOR1
     metadata:
       Model: Cisco 5300
     state: present
     provider:
       endpoint: localhost:8082
       username: admin
       password: admin

 - name: update tor node
   skydive_node:
     name: TOR
     node_type: host
     seed: TOR1
     metadata:
       Model: Cisco 3400
     state: update
     provider:
       endpoint: localhost:8082
       username: admin
       password: admin

 - name: Delete the tor node
   skydive_node:
     name: TOR
     node_type: host
     seed: TOR1
     metadata:
       Model: Cisco 3400
     state: absent
     provider:
       endpoint: localhost:8082
       username: admin
       password: admin

STATUS                   *skydive_node-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *skydive_node-red hat support*

     • Sumit Jaiswal (@sjaiswal)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *skydive_node-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/skydive_node_module.html
