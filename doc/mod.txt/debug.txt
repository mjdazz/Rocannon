SYNOPSIS                   *debug*

     • This module prints statements during execution and can be useful for debugging variables or expressions without necessarily halting the playbook.
     • Useful for debugging together with the ‘when:’ directive.
     • This module is also supported for Windows targets.

PARAMETERS                   *debug-parameters*

   Parameter Choices/Defaults                                                                                Comments
   msg       Default:         The customized message that is printed. If omitted, prints a generic message.
   string    "Hello world!"
                              A variable name to debug.
   var                        Mutually exclusive with the msg option.
   string                     Be aware that this option already runs in Jinja2 context and has an implicit {{ }} wrapping, so you should not be using Jinja2 delimiters unless you are looking for
                              double interpolation.
   verbosity Default:         A number that controls when the debug is run, if you set to 3 it will only run debug when -vvv or above
   integer   0

NOTES                   *debug-notes*

   Note

     • This module is also supported for Windows targets.

SEE ALSO                   *debug-see also*

   See also

   assert – Asserts given expressions are true
   The official documentation on the assert module.

   fail – Fail with custom message
   The official documentation on the fail module.

EXAMPLES                   *debug-examples*

 # Example that prints the loopback address and gateway for each host
 - debug:
     msg: System {{ inventory_hostname }} has uuid {{ ansible_product_uuid }}

 - debug:
     msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}
   when: ansible_default_ipv4.gateway is defined

 # Example that prints return information from the previous task
 - shell: /usr/bin/uptime
   register: result

 - debug:
     var: result
     verbosity: 2

 - name: Display all variables/facts known for a host
   debug:
     var: hostvars[inventory_hostname]
     verbosity: 4

 # Example that prints two lines of messages, but only if there is an environment value set
 - debug:
     msg:
     - "Provisioning based on YOUR_KEY which is: {{ lookup('env', 'YOUR_KEY') }}"
     - "These servers were built using the password of '{{ password_used }}'. Please retain this for later use."

STATUS                   *debug-status*

     • This module is guaranteed to have backward compatible interface changes going forward. [stableinterface]
     • This module is maintained by the Ansible Core Team. [core]

RED HAT SUPPORT                   *debug-red hat support*

     • Dag Wieers (@dagwieers)
     • Michael DeHaan

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *debug-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/debug_module.html
