SYNOPSIS                   *cyberark_authentication*

     • Authenticates to CyberArk Vault using Privileged Account Security Web Services SDK and creates a session fact that can be used by other modules. It returns an Ansible fact called
       cyberark_session. Every module can use this fact as cyberark_session parameter.

PARAMETERS                   *cyberark_authentication-parameters*

              Parameter            Choices/Defaults                                                                     Comments
   api_base_url                                     A string containing the base URL of the server hosting CyberArk's Privileged Account Security Web Services SDK.
   -
   cyberark_session                                 Dictionary set by a CyberArk authentication containing the different values to perform actions on a logged-on CyberArk session.
   -
   new_password                                     The new password of the user. This parameter is optional, and enables you to change a password.
   -
   password                                         The password of the user.
   -
   state                             Choices:
   -                                 • present ←    Specifies if an authentication logon/logoff and a cyberark_session should be added/removed.
                                     • absent
   use_radius_authentication         Choices:
   boolean                           • no ←         Whether or not users will be authenticated via a RADIUS server. Valid values are true/false.
                                     • yes
   use_shared_logon_authentication   Choices:
   boolean                           • no ←         Whether or not Shared Logon Authentication will be used.
                                     • yes
   username                                         The name of the user who will logon to the Vault.
   -
   validate_certs                    Choices:       If false, SSL certificates will not be validated. This should only set to false used on personally controlled sites using self-signed
   boolean                           • no           certificates.
                                     • yes ←

EXAMPLES                   *cyberark_authentication-examples*

 - name: Logon to CyberArk Vault using PAS Web Services SDK - use_shared_logon_authentication
   cyberark_authentication:
     api_base_url: "{{ web_services_base_url }}"
     use_shared_logon_authentication: yes

 - name: Logon to CyberArk Vault using PAS Web Services SDK - Not use_shared_logon_authentication
   cyberark_authentication:
     api_base_url: "{{ web_services_base_url }}"
     username: "{{ password_object.password }}"
     password: "{{ password_object.passprops.username }}"
     use_shared_logon_authentication: no

 - name: Logoff from CyberArk Vault
   cyberark_authentication:
     state: absent
     cyberark_session: "{{ cyberark_session }}"

RETURN VALUES                   *cyberark_authentication-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key        Returned                                                                               Description
                             Authentication facts.
                             Sample:
   cyberark_session success  {'api_base_url': {'description': 'Base URL for API calls. Returned in the cyberark_session, so it can be used in subsequent calls.', 'type': 'str', 'returned':
   dictionary                'always'}, 'token': {'description': 'The token that identifies the session, encoded in BASE 64.', 'type': 'str', 'returned': 'always'},
                             'use_shared_logon_authentication': {'description': 'Whether or not Shared Logon Authentication was used to establish the session.', 'type': 'bool', 'returned':
                             'always'}, 'validate_certs': {'description': 'Whether or not SSL certificates should be validated.', 'type': 'bool', 'returned': 'always'}}

STATUS                   *cyberark_authentication-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Edward Nunez (@enunez-cyberark) CyberArk BizDev
     • Cyberark Bizdev (@cyberark-bizdev)
     • erasmix (@erasmix)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *cyberark_authentication-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/cyberark_authentication_module.html
