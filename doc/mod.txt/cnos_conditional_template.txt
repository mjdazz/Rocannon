SYNOPSIS                   *cnos_conditional_template*

     • This module allows you to work with the running configuration of a switch. It provides a way to execute a set of CNOS commands on a switch by evaluating the current running configuration and
       executing the commands only if the specific settings have not been already configured. The configuration source can be a set of commands or a template written in the Jinja2 templating
       language. This module functions the same as the cnos_template module. The only exception is that the following inventory variable can be specified. [“condition = <flag string>”] When this
       inventory variable is specified as the variable of a task, the template is executed for the network element that matches the flag string. Usually, templates are used when commands are the
       same across a group of network devices. When there is a requirement to skip the execution of the template on one or more devices, it is recommended to use this module. This module uses SSH
       to manage network device configuration.

PARAMETERS                   *cnos_conditional_template-parameters*

     Parameter    Choices/Defaults                                                                              Comments
                                   This specifies the path to the CNOS command file which needs to be applied. This usually comes from the commands folder. Generally this file is the output of the
   commandfile    Default:         variables applied on a template file. So this command is preceded by a template module. The command file must contain the Ansible keyword {{ inventory_hostname }}
   - / required   null             and the condition flag in its filename to ensure that the command file is unique for each switch and condition. If this is omitted, the command file will be
                                   overwritten during iteration. For example, commandfile=./commands/clos_leaf_bgp_ {{ inventory_hostname }}_LP21_commands.txt
   condition      Default:         If you specify condition=<flag string> in the inventory file against any device, the template execution is done for that device in case it matches the flag
   - / required   null             setting for that task.
                    Choices:
                    • g8272_cnos
                    • g8296_cnos
   deviceType       • g8332_cnos
   string /         • NE0152T      This specifies the type of device where the method is executed. The choices NE1072T,NE1032,NE1032T,NE10032,NE2572 are added since Ansible 2.4. The choice NE0152T
   required         • NE1072T      is added since 2.8
                    • NE1032
                    • NE1032T
                    • NE10032
                    • NE2572
   enablePassword                  Configures the password used to enter Global Configuration command mode on the switch. If the switch does not request this password, the parameter is
   string                          ignored.While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not specified,
                                   no default value will be used.
   flag           Default:         If a task needs to be executed, you have to set the flag the same as it is specified in the inventory for that device.
   - / required   null
   host                            This is the variable used to search the hosts file at /etc/ansible/hosts and identify the IP address of the device on which the template is going to be applied.
   string /                        Usually the Ansible keyword {{ inventory_hostname }} is specified in the playbook as an abstraction of the group of network elements that need to be configured.
   required
   outputfile                      This specifies the file path where the output of each command execution is saved. Each command that is specified in the merged template file and each response
   string /                        from the device are saved here. Usually the location is the results folder, but you can choose another location based on your write permission.
   required
   password                        Configures the password used to authenticate the connection to the remote device. The value of the password parameter is used to authenticate the SSH session.
   string /                        While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not specified, no
   required                        default value will be used.
   username                        Configures the username used to authenticate the connection to the remote device. The value of the username parameter is used to authenticate the SSH session.
   string /                        While generally the value should come from the inventory file, you can also specify it as a variable. This parameter is optional. If it is not specified, no
   required                        default value will be used.

NOTES                   *cnos_conditional_template-notes*

   Note

     • For more information on using Ansible to manage Lenovo Network devices see https://www.ansible.com/ansible-lenovo.

EXAMPLES                   *cnos_conditional_template-examples*

 Tasks : The following are examples of using the module
  cnos_conditional_template. These are written in the main.yml file of the
  tasks directory.
 ---
 - name: Applying CLI template on VLAG Tier1 Leaf Switch1
   cnos_conditional_template:
       deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
       outputfile: "./results/vlag_1tier_leaf_switch1_
                   {{ inventory_hostname }}_output.txt"
       condition: "{{ hostvars[inventory_hostname]['condition']}}"
       flag: "leaf_switch1"
       commandfile: "./commands/vlag_1tier_leaf_switch1_
                     {{ inventory_hostname }}_commands.txt"
       stp_mode1: "disable"
       port_range1: "17,18,29,30"
       portchannel_interface_number1: 1001
       portchannel_mode1: active
       slot_chassis_number1: 1/48
       switchport_mode1: trunk

RETURN VALUES                   *cnos_conditional_template-return values*

   Common return values are documented here, the following are the fields unique to this module:

    Key   Returned                                                                                    Description
   msg             Success or failure message
   string always   Sample:
                   Template Applied.

STATUS                   *cnos_conditional_template-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Anil Kumar Muraleedharan (@amuraleedhar)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *cnos_conditional_template-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/cnos_conditional_template_module.html
