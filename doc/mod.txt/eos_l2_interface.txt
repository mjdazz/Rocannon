DEPRECATED                   *eos_l2_interface*

                         Removed in Ansible:
                  version: 2.13
        Why:      Updated modules released with more functionality
    Alternative:  eos_l2_interfaces

SYNOPSIS                   *eos_l2_interface-synopsis*

     • This module provides declarative management of L2 interfaces on Arista EOS network devices.

PARAMETERS                   *eos_l2_interface-parameters*

        Parameter      Choices/Defaults                                                                           Comments
   access_vlan                          Configure given VLAN in access port. If mode=access, used as the access VLAN ID.
   -
   aggregate                            List of Layer-2 interface definitions.
   -
                                        Deprecated
                                        Starting with Ansible 2.5 we recommend using connection: network_cli and become: yes with become_pass.
                                        This option is only required if you are using eAPI.
   auth_pass                            For more information please see the EOS Platform Options guide.
   string
                                        ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                        Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the value
                                        is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
                                        Deprecated
                                        Starting with Ansible 2.5 we recommend using connection: network_cli and become: yes.
                                        This option is only required if you are using eAPI.
   authorize             Choices:       For more information please see the EOS Platform Options guide.
   boolean               • no ←
                         • yes          ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                        Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
                                        commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
   mode                  Choices:
   -                     • access       Mode in which interface needs to be configured.
                         • trunk
   name                                 Name of the interface
   - / required                         aliases: interface
   native_vlan                          Native VLAN to be configured in trunk port. If mode=trunk, used as the trunk native VLAN ID.
   -
                                        Deprecated
                                        Starting with Ansible 2.5 we recommend using connection: network_cli.
                                        This option is only required if you are using eAPI.
   provider                             For more information please see the EOS Platform Options guide.
   dictionary
                                        ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                        A dict object containing connection details.
     auth_pass                          Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the value
     string                             is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
     authorize           Choices:       Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
     boolean             • no ←         commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
                         • yes
     host                               Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address
     string / required                  for the transport.
     password                           Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or eapi transports. If the
     string                             value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
     port              Default:         Specifies the port to use when building the connection to the remote device. This value applies to either cli or eapi.
     integer           0                The port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).
     ssh_keyfile                        Specifies the SSH keyfile to use to authenticate the connection to the remote device. This argument is only used for cli transports. If the value is not
     path                               specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
     timeout                            Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
     integer                            operation is completed, the module will error.
     transport           Choices:
     string / required   • cli ←        Configures the transport connection to use when connecting to the remote device.
                         • eapi
     use_proxy           Choices:
     boolean             • no           If no, the environment variables http_proxy and https_proxy will be ignored.
     added in 2.5        • yes ←
     use_ssl             Choices:
     boolean             • no           Configures the transport to use SSL if set to yes only when the transport=eapi. If the transport argument is not eapi, this value is ignored.
                         • yes ←
     username                           Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or the eAPI
     string                             authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will
                                        be used instead.
     validate_certs      Choices:       If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the transport
     boolean             • no           argument is not eapi, this value is ignored.
                         • yes ←
                         Choices:
   state                 • present ←    Manage the state of the Layer-2 Interface configuration.
   -                     • absent
                         • unconfigured
   trunk_allowed_vlans                  List of allowed VLANs in a given trunk port. If mode=trunk, these are the ONLY VLANs that will be configured on the trunk, i.e. 2-10,15.
   -                                    aliases: trunk_vlans

NOTES                   *eos_l2_interface-notes*

   Note

     • Tested against EOS 4.15
     • For information on using CLI, eAPI and privileged mode see the EOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Arista EOS devices see the Arista integration page.

EXAMPLES                   *eos_l2_interface-examples*

 - name: Ensure Ethernet1 does not have any switchport
   eos_l2_interface:
     name: Ethernet1
     state: absent

 - name: Ensure Ethernet1 is configured for access vlan 20
   eos_l2_interface:
     name: Ethernet1
     mode: access
     access_vlan: 20

 - name: Ensure Ethernet1 is a trunk port and ensure 2-50 are being tagged (doesn't mean others aren't also being tagged)
   eos_l2_interface:
     name: Ethernet1
     mode: trunk
     native_vlan: 10
     trunk_allowed_vlans: 2-50

 - name: Set switchports on aggregate
   eos_l2_interface:
     aggregate:
       - { name: ethernet1, mode: access, access_vlan: 20}
       - { name: ethernet2, mode: trunk, native_vlan: 10}

RETURN VALUES                   *eos_l2_interface-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          The list of configuration mode commands to send to the device
   list     always.  Sample:
                     ['interface ethernet1', 'switchport access vlan 20']

STATUS                   *eos_l2_interface-status*

     • This module will be removed in version 2.13. [deprecated]
     • For more information see DEPRECATED.

     • Ricardo Carrillo Cruz (@rcarrillocruz)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *eos_l2_interface-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/eos_l2_interface_module.html
