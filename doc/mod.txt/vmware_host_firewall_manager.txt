SYNOPSIS                   *vmware_host_firewall_manager*

     • This module can be used to manage firewall configurations about an ESXi host when ESXi hostname or Cluster name is given.

REQUIREMENTS                   *vmware_host_firewall_manager-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • PyVmomi

PARAMETERS                   *vmware_host_firewall_manager-parameters*

     Parameter    Choices/Defaults                                                                              Comments
   cluster_name                    Name of the cluster.
   string                          Firewall settings are applied to every ESXi host system in given cluster.
                                   If esxi_hostname is not given, this parameter is required.
   esxi_hostname                   ESXi hostname.
   string                          Firewall settings are applied to this ESXi host system.
                                   If cluster_name is not given, this parameter is required.
   hostname                        The hostname or IP address of the vSphere vCenter or ESXi server.
   string                          If the value is not specified in the task, the value of environment variable VMWARE_HOST will be used instead.
                                   Environment variable support added in Ansible 2.6.
                                   The password of the vSphere vCenter or ESXi server.
   password                        If the value is not specified in the task, the value of environment variable VMWARE_PASSWORD will be used instead.
   string                          Environment variable support added in Ansible 2.6.
                                   aliases: pass, pwd
   port           Default:         The port number of the vSphere vCenter or ESXi server.
   integer        443              If the value is not specified in the task, the value of environment variable VMWARE_PORT will be used instead.
   added in 2.5                    Environment variable support added in Ansible 2.6.
   proxy_host                      Address of a proxy that will receive all HTTPS requests and relay them.
   string                          The format is a hostname or a IP.
   added in 2.9                    If the value is not specified in the task, the value of environment variable VMWARE_PROXY_HOST will be used instead.
                                   This feature depends on a version of pyvmomi greater than v6.7.1.2018.12
   proxy_port                      Port of the HTTP proxy that will receive all HTTPS requests and relay them.
   integer                         If the value is not specified in the task, the value of environment variable VMWARE_PROXY_PORT will be used instead.
   added in 2.9
                                   A list of Rule set which needs to be managed.
   rules          Default:         Each member of list is rule set name and state to be set the rule.
   list           []               Both rule name and rule state are required parameters.
                                   Additional IPs and networks can also be specified
                                   Please see examples for more information.
                                   The username of the vSphere vCenter or ESXi server.
   username                        If the value is not specified in the task, the value of environment variable VMWARE_USER will be used instead.
   string                          Environment variable support added in Ansible 2.6.
                                   aliases: admin, user
                    Choices:       Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted.
   validate_certs   • no           If the value is not specified in the task, the value of environment variable VMWARE_VALIDATE_CERTS will be used instead.
   boolean          • yes ←        Environment variable support added in Ansible 2.6.
                                   If set to yes, please make sure Python >= 2.7.9 is installed on the given machine.

NOTES                   *vmware_host_firewall_manager-notes*

   Note

     • Tested on vSphere 6.0, vSphere 6.5

EXAMPLES                   *vmware_host_firewall_manager-examples*

 - name: Enable vvold rule set for all ESXi Host in given Cluster
   vmware_host_firewall_manager:
     hostname: '{{ vcenter_hostname }}'
     username: '{{ vcenter_username }}'
     password: '{{ vcenter_password }}'
     cluster_name: cluster_name
     rules:
         - name: vvold
           enabled: True
   delegate_to: localhost

 - name: Enable vvold rule set for an ESXi Host
   vmware_host_firewall_manager:
     hostname: '{{ vcenter_hostname }}'
     username: '{{ vcenter_username }}'
     password: '{{ vcenter_password }}'
     esxi_hostname: '{{ esxi_hostname }}'
     rules:
         - name: vvold
           enabled: True
   delegate_to: localhost

 - name: Manage multiple rule set for an ESXi Host
   vmware_host_firewall_manager:
     hostname: '{{ vcenter_hostname }}'
     username: '{{ vcenter_username }}'
     password: '{{ vcenter_password }}'
     esxi_hostname: '{{ esxi_hostname }}'
     rules:
         - name: vvold
           enabled: True
         - name: CIMHttpServer
           enabled: False
   delegate_to: localhost

 - name: Manage IP and network based firewall permissions for ESXi
   vmware_host_firewall_manager:
     hostname: '{{ vcenter_hostname }}'
     username: '{{ vcenter_username }}'
     password: '{{ vcenter_password }}'
     esxi_hostname: '{{ esxi_hostname }}'
     rules:
         - name: gdbserver
           enabled: True
           allowed_hosts:
             all_ip: False
             ip_address:
               - 192.168.20.10
               - 192.168.20.11
         - name: CIMHttpServer
           enabled: True
           allowed_hosts:
             all_ip: False
             ip_network:
               - 192.168.100.0/24
         - name: remoteSerialPort
           enabled: True
           allowed_hosts:
             all_ip: False
             ip_address:
               - 192.168.100.11
             ip_network:
               - 192.168.200.0/24
   delegate_to: localhost

RETURN VALUES                   *vmware_host_firewall_manager-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key       Returned                                                                                Description
                           dict with hostname as key and dict with firewall rule set facts as value
                           Sample:
                           {'rule_set_state': {'localhost.localdomain': {'CIMHttpServer': {'current_state': False, 'desired_state': False, 'previous_state': True, 'allowed_hosts':
   rule_set_state success  {'current_allowed_all': True, 'previous_allowed_all': True, 'desired_allowed_all': True, 'current_allowed_ip': [], 'previous_allowed_ip': [], 'desired_allowed_ip': [],
   dictionary              'current_allowed_networks': [], 'previous_allowed_networks': [], 'desired_allowed_networks': []}}, 'remoteSerialPort': {'current_state': True, 'desired_state': True,
                           'previous_state': True, 'allowed_hosts': {'current_allowed_all': False, 'previous_allowed_all': True, 'desired_allowed_all': False, 'current_allowed_ip':
                           ['192.168.100.11'], 'previous_allowed_ip': [], 'desired_allowed_ip': ['192.168.100.11'], 'current_allowed_networks': ['192.168.200.0/24'], 'previous_allowed_networks':
                           [], 'desired_allowed_networks': ['192.168.200.0/24']}}}}}

STATUS                   *vmware_host_firewall_manager-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Abhijeet Kasurde (@Akasurde)
     • Aaron Longchamps (@alongchamps)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *vmware_host_firewall_manager-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/vmware_host_firewall_manager_module.html
