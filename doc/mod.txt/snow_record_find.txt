SYNOPSIS                   *snow_record_find*

     • Gets multiple records from a specified table from ServiceNow based on a query dictionary.

REQUIREMENTS                   *snow_record_find-requirements*

   The below requirements are needed on the host that executes this module.

     • python pysnow (pysnow)

PARAMETERS                   *snow_record_find-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   client_id
   string                                 Client ID generated by ServiceNow.
   added in 2.9
   client_secret
   string                                 Client Secret associated with client id.
   added in 2.9
   instance                               The ServiceNow instance name, without the domain, service-now.com.
   string                                 If the value is not specified in the task, the value of environment variable SN_INSTANCE will be used instead.
                                          Environment variable support added in Ansible 2.9.
   max_records           Default:         Maximum number of records to return.
   integer               20
   order_by              Default:         Field to sort the results on.
   string                "-created_on"    Can prefix with "-" or "+" to change descending or ascending sort order.
                                          Password for username.
   password                               Required whether using Basic or OAuth authentication.
   string                                 If the value is not specified in the task, the value of environment variable SN_PASSWORD will be used instead.
                                          Environment variable support added in Ansible 2.9.
   query                                  Dict to query for records.
   dictionary / required
   return_fields                          Fields of the record to return in the json.
   list                                   By default, all fields will be returned.
   table                 Default:         Table to query for records.
   string                "incident"
                                          Name of user for connection to ServiceNow.
   username                               Required whether using Basic or OAuth authentication.
   string                                 If the value is not specified in the task, the value of environment variable SN_USERNAME will be used instead.
                                          Environment variable support added in Ansible 2.9.

EXAMPLES                   *snow_record_find-examples*

 - name: Search for incident assigned to group, return specific fields
   snow_record_find:
     username: ansible_test
     password: my_password
     instance: dev99999
     table: incident
     query:
       assignment_group: d625dccec0a8016700a222a0f7900d06
     return_fields:
       - number
       - opened_at

 - name: Using OAuth, search for incident assigned to group, return specific fields
   snow_record_find:
     username: ansible_test
     password: my_password
     client_id: "1234567890abcdef1234567890abcdef"
     client_secret: "Password1!"
     instance: dev99999
     table: incident
     query:
       assignment_group: d625dccec0a8016700a222a0f7900d06
     return_fields:
       - number
       - opened_at

 - name: Find open standard changes with my template
   snow_record_find:
     username: ansible_test
     password: my_password
     instance: dev99999
     table: change_request
     query:
       AND:
         equals:
           active: "True"
           type: "standard"
           u_change_stage: "80"
         contains:
           u_template: "MY-Template"
     return_fields:
       - sys_id
       - number
       - sys_created_on
       - sys_updated_on
       - u_template
       - active
       - type
       - u_change_stage
       - sys_created_by
       - description
       - short_description

RETURN VALUES                   *snow_record_find-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   record     always   The full contents of the matching ServiceNow records as a list of records.
   dictionary

STATUS                   *snow_record_find-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Tim Rightnour (@garbled1)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *snow_record_find-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/snow_record_find_module.html
