SYNOPSIS                   *gcp_compute_instance_template_info*

     • Gather info for GCP InstanceTemplate
     • This module was called gcp_compute_instance_template_facts before Ansible 2.9. The usage has not changed.

   Aliases: gcp_compute_instance_template_facts

REQUIREMENTS                   *gcp_compute_instance_template_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_compute_instance_template_info-parameters*

          Parameter           Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application      The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   env_type                                      Specifies which Ansible environment you're running this module within.
   string                                        This should not be set unless you know what you're doing.
                                                 This only alters the User Agent string for any API requests.
   filters                                       A list of filter value pairs. Available filters are listed here https://cloud.google.com/sdk/gcloud/reference/topic/filters.
   list                                          Each additional filter in the list will act be added as an AND condition (filter1 and filter2) .
   project                                       The Google Cloud Platform project to use.
   string
   scopes                                        Array of scopes to be used.
   list
   service_account_contents                      The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                         An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                          The path of a Service Account JSON file if serviceaccount is selected as type.
   path

NOTES                   *gcp_compute_instance_template_info-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_compute_instance_template_info-examples*

 - name: get info on an instance template
   gcp_compute_instance_template_info:
     filters:
     - name = test_object
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"

RETURN VALUES                   *gcp_compute_instance_template_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

                 Key                Returned                                                                       Description
   resources                        always   List of resources
   complex
     creationTimestamp              success  Creation timestamp in RFC3339 text format.
     string
     description                    success  An optional description of this resource. Provide this property when you create the resource.
     string
     id                             success  The unique identifier for the resource. This identifier is defined by the server.
     integer
     name                           success  Name of the resource. The name is 1-63 characters long and complies with RFC1035.
     string
     properties                     success  The instance properties for this instance template.
     complex
       canIpForward                          Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP
       boolean                      success  addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If
                                             unsure, leave this set to false.
       description                  success  An optional text description for the instances that are created from this instance template.
       string
       disks                        success  An array of disks that are associated with the instances that are created from this template.
       complex
         autoDelete                 success  Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
         boolean                             Tip: Disks should be set to autoDelete=true so that leftover disks are not left behind on machine deletion.
         boot                       success  Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
         boolean
         deviceName                 success  Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-" tree of a Linux operating system running within the
         string                              instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.
         diskEncryptionKey          success  Encrypts or decrypts a disk using a customer-supplied encryption key.
         complex
           rawKey                   success  Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
           string
           rsaEncryptedKey          success  Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.
           string
           sha256                   success  The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
           string
         index                      success  Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk
         integer                             would have a unique index number. If not specified, the server will choose an appropriate value.
         initializeParams           success  Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local
         complex                             SSDs attached to the new instance.
           diskName                 success  Specifies the disk name. If not specified, the default is to use the name of the instance.
           string
           diskSizeGb               success  Specifies the size of the disk in base-2 GB.
           integer
           diskType                          Reference to a disk type.
           string                   success  Specifies the disk type to use to create the instance.
                                             If not specified, the default is pd-standard.
           sourceImage              success  The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk
           string                            with one of the public operating system images, specify the image by its family name.
           sourceImageEncryptionKey          The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
           complex                  success  Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source
                                             images are encrypted with your own keys.
                      rawKey        success  Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
                      string
                      sha256        success  The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
                      string
         interface                  success  Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
         string                              Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI.
         mode                       success  The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
         string
         source                              Reference to a disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.
         dictionary                 success  If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.
                                             Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
         type                       success  Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
         string
       guestAccelerators            success  List of the type and count of accelerator cards attached to the instance .
       complex
         acceleratorCount           success  The number of the guest accelerator cards exposed to this instance.
         integer
         acceleratorType            success  Full or partial URL of the accelerator type resource to expose to this instance.
         string
       labels                       success  Labels to apply to this address. A list of key->value pairs.
       dictionary
       machineType                  success  The machine type to use in the VM instance template.
       string
       metadata                     success  The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys.
       dictionary
       minCpuPlatform               success  Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms .
       string
       networkInterfaces            success  An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as
       complex                               connecting to the internet. Only one network interface is supported per instance.
         accessConfigs              success  An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified,
         complex                             then this instance will have no external internet access.
           name                     success  The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For
           string                            example, My external IP or Network Access.
                                             Reference to an address.
           natIP                    success  An external IP address associated with this instance.
           dictionary                        Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address
                                             pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
           type                     success  The type of configuration. The default and only option is ONE_TO_ONE_NAT.
           string
         aliasIpRanges              success  An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.
         complex
           ipCidrRange                       The IP CIDR range represented by this alias IP range.
           string                   success  This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This
                                             range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
           subnetworkRangeName      success  Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left
           string                            unspecified, the primary range of the subnetwork will be used.
         name                       success  The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc .
         string
         network                    success  Specifies the title of an existing network. When creating an instance, if neither the network nor the subnetwork is specified, the default network
         dictionary                          global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
         networkIP                  success  An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned
         string                              by the system.
         subnetwork                          Reference to a VPC network.
         dictionary                 success  If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If
                                             the network is in custom subnet mode, then this field should be specified.
       scheduling                   success  Sets the scheduling options for this instance.
       complex
         automaticRestart           success  Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user).
         boolean                             You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.
         onHostMaintenance                   Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and
         string                     success  only possible behavior is TERMINATE.
                                             For more information, see Setting Instance Scheduling Options.
         preemptible                success  Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been
         boolean                             created.
       serviceAccounts              success  A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
       complex
         email                      success  Email address of the service account.
         string
         scopes                     success  The list of scopes to be made available for this service account.
         list
       tags                         success  A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client
       complex                               during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
         fingerprint                         Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking.
         string                     success  The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an
                                             up-to-date fingerprint hash in order to update or change metadata.
         items                      success  An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
         list

STATUS                   *gcp_compute_instance_template_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_compute_instance_template_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_compute_instance_template_info_module.html
