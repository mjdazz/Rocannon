SYNOPSIS                   *rax_mon_alarm*

     • Create or delete a Rackspace Cloud Monitoring alarm that associates an existing rax_mon_entity, rax_mon_check, and rax_mon_notification_plan with criteria that specify what conditions will
       trigger which levels of notifications. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm

REQUIREMENTS                   *rax_mon_alarm-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • pyrax

PARAMETERS                   *rax_mon_alarm-parameters*

        Parameter                      Choices/Defaults                                                                           Comments
   api_key                                                              Rackspace API key, overrides credentials.
   -                                                                    aliases: password
   auth_endpoint        Default:                                        The URI of the authentication service.
   -                    "https://identity.api.rackspacecloud.com/v2.0/"
   check_id                                                             ID of the check that should be alerted on. May be acquired by registering the value of a rax_mon_check task.
   - / required
   credentials                                                          File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   -                                                                    aliases: creds_file
   criteria                                                             Alarm DSL that describes alerting conditions and their output states. Must be between 1 and 16384 characters long. See
   -                                                                    http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/alerts-language.html for a reference on the alerting language.
   disabled               Choices:
   boolean                • no                                          If yes, create this alarm, but leave it in an inactive state. Defaults to no.
                          • yes
   entity_id                                                            ID of the entity this alarm is attached to. May be acquired by registering the value of a rax_mon_entity task.
   - / required
   env                                                                  Environment as configured in ~/.pyrax.cfg, see
   -                                                                    https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type        Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -                    "rackspace"
   label                                                                Friendly name for this alarm, used to achieve idempotence. Must be a String between 1 and 255 characters long.
   - / required
   metadata                                                             Arbitrary key/value pairs to accompany the alarm. Must be a hash of String keys and values between 1 and 255 characters long.
   -
   notification_plan_id                                                 ID of the notification plan to trigger if this alarm fires. May be acquired by registering the value of a
   - / required                                                         rax_mon_notification_plan task.
   region               Default:                                        Region to create an instance in.
   -                    "DFW"
   state                  Choices:
   -                      • present ←                                   Ensure that the alarm with this label exists or does not exist.
                          • absent
   tenant_id                                                            The tenant ID used for authentication.
   -
   tenant_name                                                          The tenant name used for authentication.
   -
   username                                                             Rackspace username, overrides credentials.
   -
   validate_certs         Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean                • no                                          aliases: verify_ssl
                          • yes

NOTES                   *rax_mon_alarm-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_mon_alarm-examples*

 - name: Alarm example
   gather_facts: False
   hosts: local
   connection: local
   tasks:
   - name: Ensure that a specific alarm exists.
     rax_mon_alarm:
       credentials: ~/.rax_pub
       state: present
       label: uhoh
       entity_id: "{{ the_entity['entity']['id'] }}"
       check_id: "{{ the_check['check']['id'] }}"
       notification_plan_id: "{{ defcon1['notification_plan']['id'] }}"
       criteria: >
         if (rate(metric['average']) > 10) {
           return new AlarmStatus(WARNING);
         }
         return new AlarmStatus(OK);
     register: the_alarm

STATUS                   *rax_mon_alarm-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ash Wilson (@smashwilson)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_mon_alarm-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_mon_alarm_module.html
