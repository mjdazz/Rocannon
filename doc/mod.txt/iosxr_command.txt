SYNOPSIS                   *iosxr_command*

     • Sends arbitrary commands to an IOS XR node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before
       returning or timing out if the condition is not met.
     • This module does not support running commands in configuration mode. Please use iosxr_config to configure iosxr devices.

PARAMETERS                   *iosxr_command-parameters*

    Parameter   Choices/Defaults                                                                               Comments
   commands                      List of commands to send to the remote iosxr device over the configured provider. The resulting output from the command is returned. If the wait_for argument is
   - / required                  provided, the module is not returned until the condition is satisfied or the number of retries has expired.
   interval     Default:         Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to
   -            1                wait before trying the command again.
   match          Choices:       The match argument is used in conjunction with the wait_for argument to specify the match policy. Valid values are all or any. If the value is set to all then all
   -              • any          conditionals in the wait_for must be satisfied. If the value is set to any then only one of the values must be satisfied.
                  • all ←
                                 Deprecated
                                 Starting with Ansible 2.5 we recommend using connection: network_cli.
   provider                      For more information please see the Network Guide.
   dictionary
                                 ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                 A dict object containing connection details.
    host                         Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address for
    string /                     the transport.
    required
    password                     Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not specified
    string                       in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
    port        Default:         Specifies the port to use when building the connection to the remote device.
    integer     22
    ssh_keyfile                  Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session. If the
    path                         value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
    timeout     Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
    integer     10               operation is completed, the module will error.
    username                     Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
    string                       specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   retries      Default:         Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against
   -            10               the wait_for conditions.
   wait_for                      List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not
   -                             true within the configured number of retries, the task fails. See examples.
                                 aliases: waitfor

NOTES                   *iosxr_command-notes*

   Note

     • Make sure the user has been authorized to execute commands terminal length 0, terminal width 512 and terminal exec prompt no-timestamp.
     • This module works with network_cli. See the IOS-XR Platform Options.
     • This module does not support netconf connection.
     • Tested against IOS XR 6.1.3
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *iosxr_command-examples*

 tasks:
   - name: run show version on remote devices
     iosxr_command:
       commands: show version

   - name: run show version and check to see if output contains iosxr
     iosxr_command:
       commands: show version
       wait_for: result[0] contains IOS-XR

   - name: run multiple commands on remote nodes
     iosxr_command:
       commands:
         - show version
         - show interfaces
         - { command: example command that prompts, prompt: expected prompt, answer: yes}

   - name: run multiple commands and evaluate the output
     iosxr_command:
       commands:
         - show version
         - show interfaces
       wait_for:
         - result[0] contains IOS-XR
         - result[1] contains Loopback0

RETURN VALUES                   *iosxr_command-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key                                 Returned                                                                               Description
   failed_conditions                                                            The list of conditionals that have failed
   list              failed                                                     Sample:
                                                                                ['...', '...']
   stdout                                                                       The set of responses from the commands
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                ['...', '...']
   stdout_lines                                                                 The value of stdout split into a list
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                [['...', '...'], ['...'], ['...']]

STATUS                   *iosxr_command-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *iosxr_command-red hat support*

     • Ricardo Carrillo Cruz (@rcarrillocruz)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *iosxr_command-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/iosxr_command_module.html
