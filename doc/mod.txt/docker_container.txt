SYNOPSIS                   *docker_container*

     • Manage the life cycle of docker containers.
     • Supports check mode. Run with --check and --diff to view config difference and list of actions to be taken.

REQUIREMENTS                   *docker_container-requirements*

   The below requirements are needed on the host that executes this module.

     • Docker API >= 1.20
     • Docker SDK for Python: Please note that the docker-py Python module has been superseded by docker (see here for details). For Python 2.6, docker-py must be used. Otherwise, it is recommended
       to install the docker Python module. Note that both modules should not be installed at the same time. Also note that when both modules are installed and one of them is uninstalled, the other
       might no longer function and a reinstall of it is required.
     • Docker SDK for Python >= 1.8.0 (use docker-py for Python 2.6)

PARAMETERS                   *docker_container-parameters*

          Parameter              Choices/Defaults                                                                         Comments
                                                        The version of the Docker API running on the Docker Host.
   api_version             Default:                     Defaults to the latest version of the API supported by Docker SDK for Python and the docker daemon.
   string                  "auto"                       If the value is not specified in the task, the value of environment variable DOCKER_API_VERSION will be used instead. If the environment
                                                        variable is not set, the default value will be used.
                                                        aliases: docker_api_version
   auto_remove               Choices:
   boolean                   • no ←                     Enable auto-removal of the container on daemon side when the container's process exits.
   added in 2.4              • yes
   blkio_weight                                         Block IO (relative weight), between 10 and 1000.
   integer
                                                        Use a CA certificate when performing server verification by providing the path to a CA certificate file.
   ca_cert                                              If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file ca.pem from the directory specified
   path                                                 in the environment variable DOCKER_CERT_PATH will be used.
                                                        aliases: tls_ca_cert, cacert_path
   cap_drop
   list / elements=string                               List of capabilities to drop from the container.
   added in 2.7
   capabilities                                         List of capabilities to add to the container.
   list / elements=string
   cleanup                   Choices:
   boolean                   • no ←                     Use with detach=false to remove the container after successful execution.
                             • yes
                                                        Path to the client's TLS certificate file.
   client_cert                                          If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file cert.pem from the directory
   path                                                 specified in the environment variable DOCKER_CERT_PATH will be used.
                                                        aliases: tls_client_cert, cert_path
                                                        Path to the client's TLS key file.
   client_key                                           If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file key.pem from the directory specified
   path                                                 in the environment variable DOCKER_CERT_PATH will be used.
                                                        aliases: tls_client_key, key_path
   command                                              Command to execute when the container starts. A command may be either a string or a list.
   raw                                                  Prior to version 2.4, strings were split on commas.
                                                        Allows to specify how properties of existing containers are compared with module options to decide whether the container should be recreated
                                                        / updated or not.
                                                        Only options which correspond to the state of a container as handled by the Docker daemon can be specified, as well as networks.
                                                        Must be a dictionary specifying for an option one of the keys strict, ignore and allow_more_present.
                                                        If strict is specified, values are tested for equality, and changes always result in updating or restarting. If ignore is specified, changes
   comparisons                                          are ignored.
   dictionary                                           allow_more_present is allowed only for lists, sets and dicts. If it is specified for lists or sets, the container will only be updated or
   added in 2.8                                         restarted if the module option contains a value which is not present in the container's options. If the option is specified for a dict, the
                                                        container will only be updated or restarted if the module option contains a key which isn't present in the container's option, or if the
                                                        value of a key present differs.
                                                        The wildcard option " can be used to set one of the default values strict or ignore to "all" comparisons which are not explicitly set to
                                                        other values.
                                                        See the examples for details.
   cpu_period                                           Limit CPU CFS (Completely Fair Scheduler) period.
   integer
   cpu_quota                                            Limit CPU CFS (Completely Fair Scheduler) quota.
   integer
   cpu_shares                                           CPU shares (relative weight).
   integer
   cpuset_cpus                                          CPUs in which to allow execution 1,3 or 1-3.
   string
   cpuset_mems                                          Memory nodes (MEMs) in which to allow execution 0-3 or 0,1.
   string
   debug                     Choices:
   boolean                   • no ←                     Debug mode
                             • yes
   detach                    Choices:                   Enable detached mode to leave the container running in background.
   boolean                   • no                       If disabled, the task will reflect the status of the container run (failed if the command failed).
                             • yes ←
   device_read_bps
   list /                                               List of device path and read rate (bytes per second) from device.
   elements=dictionary
   added in 2.8
       path                                             Device path in the container.
       string / required
       rate                                             Device read limit in format <number>[<unit>].
       string / required                                Number is a positive integer. Unit can be one of B (byte), K (kibibyte, 1024B), M (mebibyte), G (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
   device_read_iops
   list /                                               List of device and read rate (IO per second) from device.
   elements=dictionary
   added in 2.8
       path                                             Device path in the container.
       string / required
       rate                                             Device read limit.
       integer / required                               Must be a positive integer.
   device_write_bps
   list /                                               List of device and write rate (bytes per second) to device.
   elements=dictionary
   added in 2.8
       path                                             Device path in the container.
       string / required
       rate                                             Device read limit in format <number>[<unit>].
       string / required                                Number is a positive integer. Unit can be one of B (byte), K (kibibyte, 1024B), M (mebibyte), G (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
   device_write_iops
   list /                                               List of device and write rate (IO per second) to device.
   elements=dictionary
   added in 2.8
       path                                             Device path in the container.
       string / required
       rate                                             Device read limit.
       integer / required                               Must be a positive integer.
   devices                                              List of host device bindings to add to the container.
   list / elements=string                               Each binding is a mapping expressed in the format <path_on_host>:<path_in_container>:<cgroup_permissions>.
   dns_opts                                             List of DNS options.
   list / elements=string
   dns_search_domains                                   List of custom DNS search domains.
   list / elements=string
   dns_servers                                          List of custom DNS servers.
   list / elements=string
                                                        The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example,
   docker_host             Default:                     tcp://192.0.2.23:2376. If TLS is used to encrypt the connection, the module will automatically replace tcp in the connection URL with https.
   string                  "unix://var/run/docker.sock" If the value is not specified in the task, the value of environment variable DOCKER_HOST will be used instead. If the environment variable is
                                                        not set, the default value will be used.
                                                        aliases: docker_url
   domainname
   string                                               Container domainname.
   added in 2.5
   entrypoint                                           Command that overwrites the default ENTRYPOINT of the image.
   list / elements=string
   env                                                  Dictionary of key,value pairs.
   dictionary                                           Values which might be parsed as numbers, booleans or other types by the YAML parser must be quoted (e.g. "true") in order to avoid data loss.
   env_file                                             Path to a file, present on the target, containing environment variables FOO=BAR.
   path                                                 If variable also present in env, then the env value will override.
   etc_hosts                                            Dict of host-to-IP mappings, where each host name is a key in the dictionary. Each host name will be added to the container's /etc/hosts
   dictionary                                           file.
   exposed_ports                                        List of additional container ports which informs Docker that the container listens on the specified network ports at runtime.
   list / elements=string                               If the port is already exposed using EXPOSE in a Dockerfile, it does not need to be exposed again.
                                                        aliases: exposed, expose
   force_kill                Choices:                   Use the kill command when stopping a running container.
   boolean                   • no ←                     aliases: forcekill
                             • yes
   groups                                               List of additional group names and/or IDs that the container process will run as.
   list / elements=string
   healthcheck                                          Configure a check that is run to determine whether or not containers for this service are "healthy".
   dictionary                                           See the docs for the HEALTHCHECK Dockerfile instruction for details on how healthchecks work.
   added in 2.8                                         interval, timeout and start_period are specified as durations. They accept duration as a string in a format that look like: 5h34m56s, 1m30s
                                                        etc. The supported units are us, ms, s, m and h.
       interval                                         Time between running the check.
       string                                           The default used by the Docker daemon is 30s.
       retries                                          Consecutive number of failures needed to report unhealthy.
       integer                                          The default used by the Docker daemon is 3.
       start_period                                     Start period for the container to initialize before starting health-retries countdown.
       string                                           The default used by the Docker daemon is 0s.
       test                                             Command to run to check health.
       raw                                              Must be either a string or a list. If it is a list, the first item must be one of NONE, CMD or CMD-SHELL.
       timeout                                          Maximum time to allow one check to run.
       string                                           The default used by the Docker daemon is 30s.
   hostname                                             The container's hostname.
   string
                             Choices:                   When state is present or started, the module compares the configuration of an existing container to requested configuration. The evaluation
   ignore_image              • no ←                     includes the image version. If the image version in the registry does not match the container, the container will be recreated. You can stop
   boolean                   • yes                      this behavior by setting ignore_image to True.
                                                        "Warning:" This option is ignored if image: ignore or ": ignore is specified in the comparisons option.
   image                                                Repository path and tag used to create the container. If an image is not found or pull is true, the image will be pulled from the registry.
   string                                               If no tag is included, latest will be used.
                                                        Can also be an image ID. If this is the case, the image is assumed to be available locally. The pull option is ignored for this case.
   init                      Choices:                   Run an init inside the container that forwards signals and reaps processes.
   boolean                   • no ←                     This option requires Docker API >= 1.25.
   added in 2.6              • yes
   interactive               Choices:
   boolean                   • no ←                     Keep stdin open after a container is launched, even if not attached.
                             • yes
   ipc_mode                                             Set the IPC mode for the container.
   string                                               Can be one of container:<name|id> to reuse another container's IPC namespace or host to use the host's IPC namespace within the container.
   keep_volumes              Choices:
   boolean                   • no                       Retain anonymous volumes associated with a removed container.
                             • yes ←
   kernel_memory                                        Kernel memory limit in format <number>[<unit>]. Number is a positive integer. Unit can be B (byte), K (kibibyte, 1024B), M (mebibyte), G
   string                                               (gibibyte), T (tebibyte), or P (pebibyte). Minimum is 4M.
                                                        Omitting the unit defaults to bytes.
   kill_signal                                          Override default signal used to kill a running container.
   string
   labels                                               Dictionary of key value pairs.
   dictionary
   links                                                List of name aliases for linked containers in the format container_name:alias.
   list / elements=string                               Setting this will force container to be restarted.
   log_driver                                           Specify the logging driver. Docker uses json-file by default.
   string                                               See here for possible choices.
   log_options                                          Dictionary of options specific to the chosen log_driver.
   dictionary                                           See https://docs.docker.com/engine/admin/logging/overview/ for details.
                                                        aliases: log_opt
   mac_address                                          Container MAC address (e.g. 92:d0:c6:0a:29:33).
   string
   memory                  Default:                     Memory limit in format <number>[<unit>]. Number is a positive integer. Unit can be B (byte), K (kibibyte, 1024B), M (mebibyte), G (gibibyte),
   string                  "0"                          T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
   memory_reservation                                   Memory soft limit in format <number>[<unit>]. Number is a positive integer. Unit can be B (byte), K (kibibyte, 1024B), M (mebibyte), G
   string                                               (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
   memory_swap                                          Total memory limit (memory + swap) in format <number>[<unit>]. Number is a positive integer. Unit can be B (byte), K (kibibyte, 1024B), M
   string                                               (mebibyte), G (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
   memory_swappiness                                    Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100.
   integer                                              If not set, the value will be remain the same if container exists and will be inherited from the host machine if it is (re-)created.
   mounts
   list /                                               Specification for mounts to be added to the container. More powerful alternative to volumes.
   elements=dictionary
   added in 2.9
                             Choices:
       consistency           • cached
       string                • consistent               The consistency requirement for the mount.
                             • default
                             • delegated
       labels                                           User-defined name and labels for the volume. Only valid for the volume type.
       dictionary
       no_copy               Choices:                   False if the volume should be populated with the data from the target. Only valid for the volume type.
       boolean               • no                       The default value is false.
                             • yes
                             Choices:
                             • private
       propagation           • rprivate
       string                • shared                   Propagation mode. Only valid for the bind type.
                             • rshared
                             • slave
                             • rslave
       read_only             Choices:
       boolean               • no                       Whether the mount should be read-only.
                             • yes
       source                                           Mount source (e.g. a volume name or a host path).
       string
       target                                           Path inside the container.
       string / required
       tmpfs_mode                                       The permission mode for the tmpfs mount.
       string
       tmpfs_size                                       The size for the tmpfs mount in bytes in format <number>[<unit>].
       string                                           Number is a positive integer. Unit can be one of B (byte), K (kibibyte, 1024B), M (mebibyte), G (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes.
                             Choices:
       type                  • bind                     The mount type.
       string                • npipe                    Note that npipe is only supported by Docker for Windows.
                             • tmpfs
                             • volume ←
       volume_driver                                    Specify the volume driver. Only valid for the volume type.
       string                                           See here for details.
       volume_options                                   Dictionary of options specific to the chosen volume_driver. See here for details.
       dictionary
   name                                                 Assign a name to a new container or match an existing container.
   string / required                                    When identifying an existing container name may be a name or a long or short container ID.
   network_mode                                         Connect the container to a network. Choices are bridge, host, none or container:<name|id>.
   string
                                                        List of networks the container belongs to.
   networks                                             For examples of the data structure and usage see EXAMPLES below.
   list /                                               To remove a container from one or more networks, use the purge_networks option.
   elements=dictionary                                  Note that as opposed to docker run ..., docker_container does not remove the default network if networks is specified. You need to explicitly
                                                        use purge_networks to enforce the removal of the default network (and all other networks not explicitly mentioned in networks).
                                                        Alternatively, use the networks_cli_compatible option, which will be enabled by default from Ansible 2.12 on.
       aliases
       list /                                           List of aliases for this container in this network. These names can be used in the network to reach this container.
       elements=string
       ipv4_address                                     The container's IPv4 address in this network.
       string
       ipv6_address                                     The container's IPv6 address in this network.
       string
       links
       list /                                           A list of containers to link to.
       elements=string
       name                                             The network's name.
       string / required
                                                        When networks are provided to the module via the networks option, the module behaves differently than docker run --network: docker run
                                                        --network other will create a container with network other attached, but the default network not attached. This module with networks: {name:
                                                        other} will create a container with both default and other attached. If purge_networks is set to yes, the default network will be removed
   networks_cli_compatible   Choices:                   afterwards.
   boolean                   • no                       If networks_cli_compatible is set to yes, this module will behave as docker run --network and will "not" add the default network if networks
   added in 2.8              • yes                      is specified. If networks is not specified, the default network will be attached.
                                                        Note that docker CLI also sets network_mode to the name of the first network added if --network is specified. For more compatibility with
                                                        docker CLI, you explicitly have to set network_mode to the name of the first network you're adding.
                                                        Current value is no. A new default of yes will be set in Ansible 2.12.
   oom_killer                Choices:
   boolean                   • no                       Whether or not to disable OOM Killer for the container.
                             • yes
   oom_score_adj                                        An integer value containing the score given to the container in order to tune OOM killer preferences.
   integer
   output_logs               Choices:                   If set to true, output of the container command will be printed.
   boolean                   • no ←                     Only effective when log_driver is set to json-file or journald.
   added in 2.7              • yes
   paused                    Choices:
   boolean                   • no ←                     Use with the started state to pause running processes inside the container.
                             • yes
   pid_mode                                             Set the PID namespace mode for the container.
   string                                               Note that Docker SDK for Python < 2.0 only supports host. Newer versions of the Docker SDK for Python (docker) allow all values supported by
                                                        the Docker daemon.
   pids_limit                                           Set PIDs limit for the container. It accepts an integer value.
   integer                                              Set -1 for unlimited PIDs.
   added in 2.8
   privileged                Choices:
   boolean                   • no ←                     Give extended privileges to the container.
                             • yes
                                                        List of ports to publish from the container to the host.
                                                        Use docker CLI syntax: 8000, 9000:8000, or 0.0.0.0:9000:8000, where 8000 is a container port, 9000 is a host port, and 0.0.0.0 is a host
                                                        interface.
                                                        Port ranges can be used for source and destination ports. If two ranges with different lengths are specified, the shorter range will be used.
                                                        Bind addresses must be either IPv4 or IPv6 addresses. Hostnames are "not" allowed. This is different from the docker command line utility.
   published_ports                                      Use the dig lookup to resolve hostnames.
   list / elements=string                               A value of all will publish all exposed container ports to random host ports, ignoring any other mappings.
                                                        If networks parameter is provided, will inspect each network to see if there exists a bridge network with optional parameter
                                                        com.docker.network.bridge.host_binding_ipv4. If such a network is found, then published ports where no host IP address is specified will be
                                                        bound to the host IP pointed to by com.docker.network.bridge.host_binding_ipv4. Note that the first bridge network with a
                                                        com.docker.network.bridge.host_binding_ipv4 value encountered in the list of networks is the one that will be used.
                                                        aliases: ports
   pull                      Choices:                   If true, always pull the latest version of an image. Otherwise, will only pull an image when missing.
   boolean                   • no ←                     "Note:" images are only pulled when specified by name. If the image is specified as a image ID (hash), it cannot be pulled.
                             • yes
   purge_networks            Choices:                   Remove the container from ALL networks not included in networks parameter.
   boolean                   • no ←                     Any default networks such as bridge, if not found in networks, will be removed as well.
                             • yes
   read_only                 Choices:
   boolean                   • no ←                     Mount the container's root file system as read-only.
                             • yes
   recreate                  Choices:
   boolean                   • no ←                     Use with present and started states to force the re-creation of an existing container.
                             • yes
   restart                   Choices:
   boolean                   • no ←                     Use with started state to force a matching container to be stopped and restarted.
                             • yes
                             Choices:
   restart_policy            • no                       Container restart policy.
   string                    • on-failure               Place quotes around no option.
                             • always
                             • unless-stopped
   restart_retries                                      Use with restart policy to control maximum number of restart attempts.
   integer
   runtime
   string                                               Runtime to use for the container.
   added in 2.8
   security_opts                                        List of security options in the form of "label:user:User".
   list / elements=string
   shm_size                                             Size of /dev/shm in format <number>[<unit>]. Number is positive integer. Unit can be B (byte), K (kibibyte, 1024B), M (mebibyte), G
   string                                               (gibibyte), T (tebibyte), or P (pebibyte).
                                                        Omitting the unit defaults to bytes. If you omit the size entirely, Docker daemon uses 64M.
   ssl_version                                          Provide a valid SSL version number. Default value determined by ssl.py module.
   string                                               If the value is not specified in the task, the value of environment variable DOCKER_SSL_VERSION will be used instead.
                                                        absent - A container matching the specified name will be stopped and removed. Use force_kill to kill the container rather than stopping it.
                                                        Use keep_volumes to retain anonymous volumes associated with the removed container.
                                                        present - Asserts the existence of a container matching the name and any provided configuration parameters. If no container matches the name,
                                                        a container will be created. If a container matches the name but the provided configuration does not match, the container will be updated, if
                             Choices:                   it can be. If it cannot be updated, it will be removed and re-created with the requested config.
                             • absent                   started - Asserts that the container is first present, and then if the container is not running moves it to a running state. Use restart to
   state                     • present                  force a matching container to be stopped and restarted.
   string                    • stopped                  stopped - Asserts that the container is first present, and then if the container is running moves it to a stopped state.
                             • started ←                To control what will be taken into account when comparing configuration, see the comparisons option. To avoid that the image version will be
                                                        taken into account, you can also use the ignore_image option.
                                                        Use the recreate option to always force re-creation of a matching container, even if it is running.
                                                        If the container should be killed instead of stopped in case it needs to be stopped for recreation, or because state is stopped, please use
                                                        the force_kill option. Use keep_volumes to retain anonymous volumes associated with a removed container.
                                                        Use keep_volumes to retain anonymous volumes associated with a removed container.
   stop_signal                                          Override default signal used to stop the container.
   string
                                                        Number of seconds to wait for the container to stop before sending SIGKILL. When the container is created by this module, its StopTimeout
   stop_timeout                                         configuration will be set to this value.
   integer                                              When the container is stopped, will be used as a timeout for stopping the container. In case the container has a custom StopTimeout
                                                        configuration, the behavior depends on the version of the docker daemon. New versions of the docker daemon will always use the container's
                                                        configured StopTimeout value if it has been configured.
   sysctls
   dictionary                                           Dictionary of key,value pairs.
   added in 2.4
   timeout                 Default:                     The maximum amount of time in seconds to wait on a response from the API.
   integer                 60                           If the value is not specified in the task, the value of environment variable DOCKER_TIMEOUT will be used instead. If the environment variable
                                                        is not set, the default value will be used.
                             Choices:                   Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server. Note that if validate_certs is
   tls                       • no ←                     set to yes as well, it will take precedence.
   boolean                   • yes                      If the value is not specified in the task, the value of environment variable DOCKER_TLS will be used instead. If the environment variable is
                                                        not set, the default value will be used.
   tls_hostname            Default:                     When verifying the authenticity of the Docker Host server, provide the expected name of the server.
   string                  "localhost"                  If the value is not specified in the task, the value of environment variable DOCKER_TLS_HOSTNAME will be used instead. If the environment
                                                        variable is not set, the default value will be used.
   tmpfs
   list / elements=string                               Mount a tmpfs directory.
   added in 2.4
   trust_image_content       Choices:
   boolean                   • no ←                     If yes, skip image verification.
                             • yes
   tty                       Choices:
   boolean                   • no ←                     Allocate a pseudo-TTY.
                             • yes
   ulimits                                              List of ulimit options. A ulimit is specified as nofile:262144:262144.
   list / elements=string
   user                                                 Sets the username or UID used and optionally the groupname or GID for the specified command.
   string                                               Can be of the forms user, user:group, uid, uid:gid, user:gid or uid:group.
   userns_mode
   string                                               Set the user namespace mode for the container. Currently, the only valid value are host and the empty string.
   added in 2.5
   uts                                                  Set the UTS namespace mode for the container.
   string
                             Choices:                   Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.
   validate_certs            • no ←                     If the value is not specified in the task, the value of environment variable DOCKER_TLS_VERIFY will be used instead. If the environment
   boolean                   • yes                      variable is not set, the default value will be used.
                                                        aliases: tls_verify
   volume_driver                                        The container volume driver.
   string
                                                        List of volumes to mount within the container.
                                                        Use docker CLI-style syntax: /host:/container[:mode]
   volumes                                              Mount modes can be a comma-separated list of various modes such as ro, rw, consistent, delegated, cached, rprivate, private, rshared, shared,
   list / elements=string                               rslave, slave, and nocopy. Note that the docker daemon might not support all modes and combinations of such modes.
                                                        SELinux hosts can additionally use z or Z to use a shared or private label for the volume.
                                                        Note that Ansible 2.7 and earlier only supported one mode, which had to be one of ro, rw, z, and Z.
   volumes_from                                         List of container names or IDs to get volumes from.
   list / elements=string
   working_dir
   string                                               Path to the working directory.
   added in 2.4

NOTES                   *docker_container-notes*

   Note

     • For most config changes, the container needs to be recreated, i.e. the existing container has to be destroyed and a new one created. This can cause unexpected data loss and downtime. You can
       use the comparisons option to prevent this.
     • If the module needs to recreate the container, it will only use the options provided to the module to create the new container (except image). Therefore, always specify all options relevant
       to the container.
     • When restart is set to true, the module will only restart the container if no config changes are detected. Please note that several options have default values; if the container to be
       restarted uses different values for these options, it will be recreated instead. The options with default values which can cause this are auto_remove, detach, init, interactive, memory,
       paused, privileged, read_only and tty.
     • Connect to the Docker daemon by providing parameters with each task or by defining environment variables. You can define DOCKER_HOST, DOCKER_TLS_HOSTNAME, DOCKER_API_VERSION,
       DOCKER_CERT_PATH, DOCKER_SSL_VERSION, DOCKER_TLS, DOCKER_TLS_VERIFY and DOCKER_TIMEOUT. If you are using docker machine, run the script shipped with the product that sets up the environment.
       It will set these variables for you. See https://docs.docker.com/machine/reference/env/ for more details.
     • When connecting to Docker daemon with TLS, you might need to install additional Python packages. For the Docker SDK for Python, version 2.4 or newer, this can be done by installing
       docker[tls] with pip.
     • Note that the Docker SDK for Python only allows to specify the path to the Docker configuration for very few functions. In general, it will use $HOME/.docker/config.json if the DOCKER_CONFIG
       environment variable is not specified, and use $DOCKER_CONFIG/config.json otherwise.

EXAMPLES                   *docker_container-examples*

 - name: Create a data container
   docker_container:
     name: mydata
     image: busybox
     volumes:
       - /data

 - name: Re-create a redis container
   docker_container:
     name: myredis
     image: redis
     command: redis-server --appendonly yes
     state: present
     recreate: yes
     exposed_ports:
       - 6379
     volumes_from:
       - mydata

 - name: Restart a container
   docker_container:
     name: myapplication
     image: someuser/appimage
     state: started
     restart: yes
     links:
      - "myredis:aliasedredis"
     devices:
      - "/dev/sda:/dev/xvda:rwm"
     ports:
      - "8080:9000"
      - "127.0.0.1:8081:9001/udp"
     env:
         SECRET_KEY: "ssssh"
         # Values which might be parsed as numbers, booleans or other types by the YAML parser need to be quoted
         BOOLEAN_KEY: "yes"

 - name: Container present
   docker_container:
     name: mycontainer
     state: present
     image: ubuntu:14.04
     command: sleep infinity

 - name: Stop a container
   docker_container:
     name: mycontainer
     state: stopped

 - name: Start 4 load-balanced containers
   docker_container:
     name: "container{{ item }}"
     recreate: yes
     image: someuser/anotherappimage
     command: sleep 1d
   with_sequence: count=4

 - name: remove container
   docker_container:
     name: ohno
     state: absent

 - name: Syslogging output
   docker_container:
     name: myservice
     image: busybox
     log_driver: syslog
     log_options:
       syslog-address: tcp://my-syslog-server:514
       syslog-facility: daemon
       # NOTE: in Docker 1.13+ the "syslog-tag" option was renamed to "tag" for
       # older docker installs, use "syslog-tag" instead
       tag: myservice

 - name: Create db container and connect to network
   docker_container:
     name: db_test
     image: "postgres:latest"
     networks:
       - name: "{{ docker_network_name }}"

 - name: Start container, connect to network and link
   docker_container:
     name: sleeper
     image: ubuntu:14.04
     networks:
       - name: TestingNet
         ipv4_address: "172.1.1.100"
         aliases:
           - sleepyzz
         links:
           - db_test:db
       - name: TestingNet2

 - name: Start a container with a command
   docker_container:
     name: sleepy
     image: ubuntu:14.04
     command: ["sleep", "infinity"]

 - name: Add container to networks
   docker_container:
     name: sleepy
     networks:
       - name: TestingNet
         ipv4_address: 172.1.1.18
         links:
           - sleeper
       - name: TestingNet2
         ipv4_address: 172.1.10.20

 - name: Update network with aliases
   docker_container:
     name: sleepy
     networks:
       - name: TestingNet
         aliases:
           - sleepyz
           - zzzz

 - name: Remove container from one network
   docker_container:
     name: sleepy
     networks:
       - name: TestingNet2
     purge_networks: yes

 - name: Remove container from all networks
   docker_container:
     name: sleepy
     purge_networks: yes

 - name: Start a container and use an env file
   docker_container:
     name: agent
     image: jenkinsci/ssh-slave
     env_file: /var/tmp/jenkins/agent.env

 - name: Create a container with limited capabilities
   docker_container:
     name: sleepy
     image: ubuntu:16.04
     command: sleep infinity
     capabilities:
       - sys_time
     cap_drop:
       - all

 - name: Finer container restart/update control
   docker_container:
     name: test
     image: ubuntu:18.04
     env:
       arg1: "true"
       arg2: "whatever"
     volumes:
       - /tmp:/tmp
     comparisons:
       image: ignore   # don't restart containers with older versions of the image
       env: strict   # we want precisely this environment
       volumes: allow_more_present   # if there are more volumes, that's ok, as long as `/tmp:/tmp` is there

 - name: Finer container restart/update control II
   docker_container:
     name: test
     image: ubuntu:18.04
     env:
       arg1: "true"
       arg2: "whatever"
     comparisons:
       '"': ignore  # by default, ignore "all" options (including image)
       env: strict   # except for environment variables; there, we want to be strict

 - name: Start container with healthstatus
   docker_container:
     name: nginx-proxy
     image: nginx:1.13
     state: started
     healthcheck:
       # Check if nginx server is healthy by curl'ing the server.
       # If this fails or timeouts, the healthcheck fails.
       test: ["CMD", "curl", "--fail", "http://nginx.host.com"]
       interval: 1m30s
       timeout: 10s
       retries: 3
       start_period: 30s

 - name: Remove healthcheck from container
   docker_container:
     name: nginx-proxy
     image: nginx:1.13
     state: started
     healthcheck:
       # The "NONE" check needs to be specified
       test: ["NONE"]

 - name: start container with block device read limit
   docker_container:
     name: test
     image: ubuntu:18.04
     state: started
     device_read_bps:
       # Limit read rate for /dev/sda to 20 mebibytes per second
       - path: /dev/sda
         rate: 20M
     device_read_iops:
       # Limit read rate for /dev/sdb to 300 IO per second
       - path: /dev/sdb
         rate: 300

RETURN VALUES                   *docker_container-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
                       Facts representing the current state of the container. Matches the docker inspection output.
                       Note that facts are part of the registered vars since Ansible 2.8. For compatibility reasons, the facts are also accessible directly as docker_container. Note that the
                       returned fact will be removed in Ansible 2.12.
                       Before 2.3 this was ansible_docker_container but was renamed in 2.3 to docker_container due to conflicts with the connection plugin.
   container           Empty if state is absent
   dictionary always   If detached is false, will include Output attribute containing any output from container run.
                       Sample:
                       { "AppArmorProfile": "", "Args": [], "Config": { "AttachStderr": false, "AttachStdin": false, "AttachStdout": false, "Cmd": [ "/usr/bin/supervisord" ], "Domainname": "",
                       "Entrypoint": null, "Env": [ "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" ], "ExposedPorts": { "443/tcp": {}, "80/tcp": {} }, "Hostname":
                       "8e47bf643eb9", "Image": "lnmp_nginx:v1", "Labels": {}, "OnBuild": null, "OpenStdin": false, "StdinOnce": false, "Tty": false, "User": "", "Volumes": {
                       "/tmp/lnmp/nginx-sites/logs/": {} }, ... }

STATUS                   *docker_container-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Cove Schneider (@cove)
     • Joshua Conner (@joshuaconner)
     • Pavel Antonov (@softzilla)
     • Thomas Steinbach (@ThomasSteinbach)
     • Philippe Jandot (@zfil)
     • Daan Oosterveld (@dusdanig)
     • Chris Houseknecht (@chouseknecht)
     • Kassian Sun (@kassiansun)
     • Felix Fontein (@felixfontein)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *docker_container-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
