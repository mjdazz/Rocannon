SYNOPSIS                   *nxos_gir*

     • Trigger a graceful removal or insertion (GIR) of the switch.

PARAMETERS                   *nxos_gir-parameters*

                     Parameter                    Choices/Defaults                                                              Comments
                                                                    Deprecated
                                                                    Starting with Ansible 2.5 we recommend using connection: network_cli.
                                                                    This option is only required if you are using NX-API.
   provider                                                         For more information please see the NXOS Platform Options guide.
   dictionary
                                                                    ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                                                    A dict object containing connection details.
                   auth_pass                                        Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this
                   string                                           argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be
                   added in 2.5.3                                   used instead.
                   authorize                        Choices:        Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will
                   boolean                          • no ←          attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
                   added in 2.5.3                   • yes           variable ANSIBLE_NET_AUTHORIZE will be used instead.
                   host                                             Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is
                   string / required                                used as the destination address for the transport.
                   password                                         Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli
                   string                                           or nxapi transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be
                                                                    used instead.
                   port                           Default:          Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port
                   integer                        "0 (use common    value will default to the appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                                                  port)"
                   ssh_keyfile                                      Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli
                   string                                           transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used
                                                                    instead.
                   timeout                        Default:          Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the
                   integer                        10                timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running
                                                                    commands (sh mac, sh bgp, etc).
                   transport                        Choices:        Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to
                   string / required                • cli ←         the device over cli (ssh) or nxapi.
                                                    • nxapi
                   use_proxy                        Choices:
                   boolean                          • no            If no, the environment variables http_proxy and https_proxy will be ignored.
                   added in 2.5                     • yes ←
                   use_ssl                          Choices:
                   boolean                          • no ←          Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                                                    • yes
                   username                                         Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the
                   string                                           CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value
                                                                    of environment variable ANSIBLE_NET_USERNAME will be used instead.
                   validate_certs                   Choices:        If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed
                   boolean                          • no            certificates. If the transport argument is not nxapi, this value is ignored.
                                                    • yes ←
   state                                            Choices:
   - / required                                     • present ←     Specify desired state of the resource.
                                                    • absent
   system_mode_maintenance                          Choices:        When system_mode_maintenance=true it puts all enabled protocols in maintenance mode (using the isolate command). When
   boolean                                          • no            system_mode_maintenance=false it puts all enabled protocols in normal mode (using the no isolate command).
                                                    • yes
                                                                    When system_mode_maintenance_dont_generate_profile=true it prevents the dynamic searching of enabled protocols and executes
   system_mode_maintenance_dont_generate_profile    Choices:        commands configured in a maintenance-mode profile. Use this option if you want the system to use a maintenance-mode profile that
   boolean                                          • no            you have created. When system_mode_maintenance_dont_generate_profile=false it prevents the dynamic searching of enabled protocols
                                                    • yes           and executes commands configured in a normal-mode profile. Use this option if you want the system to use a normal-mode profile
                                                                    that you have created.
                                                    Choices:
                                                    • hw_error
                                                    • svc_failure
                                                    • kern_failure
   system_mode_maintenance_on_reload_reset_reason   • wdog_timeout  Boots the switch into maintenance mode automatically in the event of a specified system crash. Note that not all reset reasons
   -                                                • fatal_error   are applicable for all platforms. Also if reset reason is set to match_any, it is not idempotent as it turns on all reset
                                                    • lc_failure    reasons. If reset reason is match_any and state is absent, it turns off all the reset reasons.
                                                    • match_any
                                                    • manual_reload
                                                    • any_other
                                                    • maintenance
   system_mode_maintenance_shutdown                 Choices:        Shuts down all protocols, vPC domains, and interfaces except the management interface (using the shutdown command). This option
   boolean                                          • no            is disruptive while system_mode_maintenance (which uses the isolate command) is not.
                                                    • yes
   system_mode_maintenance_timeout                                  Keeps the switch in maintenance mode for a specified number of minutes. Range is 5-65535.
   -

NOTES                   *nxos_gir-notes*

   Note

     • Tested against NXOSv 7.3.(0)D1(1) on VIRL
     • state has effect only in combination with system_mode_maintenance_timeout or system_mode_maintenance_on_reload_reset_reason.
     • Using system_mode_maintenance and system_mode_maintenance_dont_generate_profile would make the module fail, but the system mode will be triggered anyway.
     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_gir-examples*

 # Trigger system maintenance mode
 - nxos_gir:
     system_mode_maintenance: true
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Trigger system normal mode
 - nxos_gir:
     system_mode_maintenance: false
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Configure on-reload reset-reason for maintenance mode
 - nxos_gir:
     system_mode_maintenance_on_reload_reset_reason: manual_reload
     state: present
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Add on-reload reset-reason for maintenance mode
 - nxos_gir:
     system_mode_maintenance_on_reload_reset_reason: hw_error
     state: present
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Remove on-reload reset-reason for maintenance mode
 - nxos_gir:
     system_mode_maintenance_on_reload_reset_reason: manual_reload
     state: absent
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Set timeout for maintenance mode
 - nxos_gir:
     system_mode_maintenance_timeout: 30
     state: present
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"
 # Remove timeout for maintenance mode
 - nxos_gir:
     system_mode_maintenance_timeout: 30
     state: absent
     host: "{{ inventory_hostname }}"
     username: "{{ un }}"
     password: "{{ pwd }}"

RETURN VALUES                   *nxos_gir-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key          Returned                                                                               Description
   changed                        check to see if a change was made on the device
   boolean           always       Sample:
                                  True
   final_system_mode              describe the last system mode
   string            verbose mode Sample:
                                  normal
   updates                        commands sent to the device
   list              verbose mode Sample:
                                  ['terminal dont-ask', 'system mode maintenance timeout 10']

STATUS                   *nxos_gir-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_gir-red hat support*

     • Gabriele Gerbino (@GGabriele)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_gir-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_gir_module.html
