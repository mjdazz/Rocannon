SYNOPSIS                   *gcp_compute_autoscaler*

     • Represents an Autoscaler resource.
     • Autoscalers allow you to automatically scale virtual machine instances in managed instance groups according to an autoscaling policy that you define.

REQUIREMENTS                   *gcp_compute_autoscaler-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_compute_autoscaler-parameters*

            Parameter           Choices/Defaults                                                                       Comments
                                 Choices:
   auth_kind                     • application    The type of credential used.
   string / required             • machineaccount
                                 • serviceaccount
   autoscaling_policy                             The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization,
   dictionary / required                          customMetricUtilizations, and loadBalancingUtilization.
                                                  If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
                                                  The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler
                                                  from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler
    cool_down_period_sec       Default:           waits is 60 seconds.
    integer                    "60"               Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to
                                                  initialize. To do this, create an instance and time the startup process.
                                                  aliases: cooldownPeriod
    cpu_utilization                               Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
    dictionary
                                                  The target CPU utilization that the autoscaler should maintain.
                                                  Must be a float value in the range (0, 1]. If not specified, the default is 0.6.
      utilization_target                          If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of
      string                                      instances you specified or until the average CPU of your instances reaches the target utilization.
                                                  If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or
                                                  until the average utilization reaches the target utilization.
                                                  aliases: target
    custom_metric_utilizations                    Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
    list                                          aliases: metric
                                                  The identifier (type) of the Stackdriver Monitoring metric.
      metric                                      The metric cannot have negative values.
      string / required                           The metric must have a value type of INT64 or DOUBLE.
                                                  aliases: name
                                                  The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual
      utilization_target                          machines handling requests to increase or decrease proportionally to the metric.
      string                                      For example, a good metric to use as a utilizationTarget is www.googleapis.com/compute/instance/network/received_bytes_count.
                                                  The autoscaler will work to keep this value constant for each of the instances.
                                                  aliases: target
      utilization_target_type                     Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
      string                                      Some valid choices include: "GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"
                                                  aliases: type
    load_balancing_utilization                    Configuration parameters of autoscaling based on a load balancer.
    dictionary
      utilization_target                          Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float
      string                                      value. If not defined, the default is 0.8.
                                                  aliases: target
    max_num_replicas                              The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number
    integer / required                            of replicas should not be lower than minimal number of replicas.
                                                  aliases: maxReplicas
    min_num_replicas                              The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default
    integer                                       value depending on maximum number of instances allowed.
                                                  aliases: minReplicas
   description                                    An optional description of this resource.
   string
   env_type                                       Specifies which Ansible environment you're running this module within.
   string                                         This should not be set unless you know what you're doing.
                                                  This only alters the User Agent string for any API requests.
   name                                           Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]"[a-z0-9])?` which means the first
   string / required                              character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which
                                                  cannot be a dash.
   project                                        The Google Cloud Platform project to use.
   string
   scopes                                         Array of scopes to be used.
   list
   service_account_contents                       The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                          An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                           The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                         Choices:
   string                        • present ←      Whether the given object should exist in GCP
                                 • absent
                                                  URL of the managed instance group that this autoscaler will scale.
   target                                         This field represents a link to a InstanceGroupManager resource in GCP. It can be specified in two ways. First, you can place a dictionary with key
   dictionary / required                          'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance_group_manager
                                                  task and then set this target field to "{{ name-of-resource }}"
   zone                                           URL of the zone where the instance group resides.
   string / required

NOTES                   *gcp_compute_autoscaler-notes*

   Note

     • API Reference: https://cloud.google.com/compute/docs/reference/rest/v1/autoscalers
     • Autoscaling Groups of Instances: https://cloud.google.com/compute/docs/autoscaler/
     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_compute_autoscaler-examples*

 - name: create a network
   gcp_compute_network:
     name: network-instancetemplate
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: network

 - name: create a address
   gcp_compute_address:
     name: address-instancetemplate
     region: us-central1
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: address

 - name: create a instance template
   gcp_compute_instance_template:
     name: "{{ resource_name }}"
     properties:
       disks:
       - auto_delete: 'true'
         boot: 'true'
         initialize_params:
           source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts
       machine_type: n1-standard-1
       network_interfaces:
       - network: "{{ network }}"
         access_configs:
         - name: test-config
           type: ONE_TO_ONE_NAT
           nat_ip: "{{ address }}"
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: instancetemplate

 - name: create a instance group manager
   gcp_compute_instance_group_manager:
     name: "{{ resource_name }}"
     base_instance_name: test1-child
     instance_template: "{{ instancetemplate }}"
     target_size: 3
     zone: us-central1-a
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present
   register: igm

 - name: create a autoscaler
   gcp_compute_autoscaler:
     name: test_object
     zone: us-central1-a
     target: "{{ igm }}"
     autoscaling_policy:
       max_num_replicas: 5
       min_num_replicas: 1
       cool_down_period_sec: 60
       cpu_utilization:
         utilization_target: 0.5
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_compute_autoscaler-return values*

   Common return values are documented here, the following are the fields unique to this module:

              Key             Returned                                                                          Description
   autoscalingPolicy                   The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization,
   complex                    success  customMetricUtilizations, and loadBalancingUtilization.
                                       If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
                                       The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from
     coolDownPeriodSec                 collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60
     integer                  success  seconds.
                                       Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do
                                       this, create an instance and time the startup process.
     cpuUtilization           success  Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
     complex
                                       The target CPU utilization that the autoscaler should maintain.
                                       Must be a float value in the range (0, 1]. If not specified, the default is 0.6.
        utilizationTarget     success  If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you
        string                         specified or until the average CPU of your instances reaches the target utilization.
                                       If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the
                                       average utilization reaches the target utilization.
     customMetricUtilizations success  Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
     complex
        metric                         The identifier (type) of the Stackdriver Monitoring metric.
        string                success  The metric cannot have negative values.
                                       The metric must have a value type of INT64 or DOUBLE.
                                       The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling
        utilizationTarget     success  requests to increase or decrease proportionally to the metric.
        string                         For example, a good metric to use as a utilizationTarget is www.googleapis.com/compute/instance/network/received_bytes_count.
                                       The autoscaler will work to keep this value constant for each of the instances.
        utilizationTargetType success  Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
        string
     loadBalancingUtilization success  Configuration parameters of autoscaling based on a load balancer.
     complex
        utilizationTarget     success  Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not
        string                         defined, the default is 0.8.
     maxNumReplicas           success  The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas
     integer                           should not be lower than minimal number of replicas.
     minNumReplicas           success  The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value
     integer                           depending on maximum number of instances allowed.
   creationTimestamp          success  Creation timestamp in RFC3339 text format.
   string
   description                success  An optional description of this resource.
   string
   id                         success  Unique identifier for the resource.
   integer
   name                       success  Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]"[a-z0-9])?` which means the first character must
   string                              be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   target                     success  URL of the managed instance group that this autoscaler will scale.
   dictionary
   zone                       success  URL of the zone where the instance group resides.
   string

STATUS                   *gcp_compute_autoscaler-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_compute_autoscaler-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_compute_autoscaler_module.html
