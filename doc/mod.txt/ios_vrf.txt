SYNOPSIS                   *ios_vrf*

     • This module provides declarative management of VRF definitions on Cisco IOS devices. It allows playbooks to manage individual or the entire VRF collection. It also supports purging VRF
       definitions from the configuration that are not explicitly defined.

PARAMETERS                   *ios_vrf-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   associated_interfaces                  This is a intent option and checks the operational state of the for given vrf name for associated interfaces. If the value in the associated_interfaces
   -                                      does not match with the operational state of vrf interfaces on device it will result in failure.
   added in 2.5
                                          Deprecated
                                          Starting with Ansible 2.5 we recommend using connection: network_cli and become: yes with become_pass.
                                          For more information please see the IOS Platform Options guide.
   auth_pass
   string                                 ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                          Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the
                                          value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
                                          Deprecated
                                          Starting with Ansible 2.5 we recommend using connection: network_cli and become: yes.
                           Choices:       For more information please see the IOS Platform Options guide.
   authorize               • no ←
   boolean                 • yes          ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                          Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
                                          commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
   delay                 Default:
   -                     10               Time in seconds to wait before checking for the operational state on remote device.
   added in 2.4
   description                            Provides a short description of the VRF definition in the current active configuration. The VRF definition value accepts alphanumeric characters used to
   -                                      provide additional information about the VRF.
   interfaces                             Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed interfaces in order to be placed into a VRF.
   -
   name                                   The name of the VRF definition to be managed on the remote IOS device. The VRF definition name is an ASCII string name used to uniquely identify the VRF.
   -                                      This argument is mutually exclusive with the vrfs argument
                                          Deprecated
                                          Starting with Ansible 2.5 we recommend using connection: network_cli.
   provider                               For more information please see the IOS Platform Options guide.
   dictionary
                                          ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                          A dict object containing connection details.
      auth_pass                           Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the
      string                              value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
      authorize            Choices:       Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
      boolean              • no ←         commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
                           • yes
      host                                Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination
      string / required                   address for the transport.
      password                            Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
      string                              specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
      port               Default:         Specifies the port to use when building the connection to the remote device.
      integer            22
      ssh_keyfile                         Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session.
      path                                If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
      timeout            Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
      integer            10               operation is completed, the module will error.
      username                            Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
      string                              specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   purge                   Choices:
   boolean                 • no ←         Instructs the module to consider the VRF definition absolute. It will remove any previously configured VRFs on the device.
                           • yes
   rd                                     The router-distinguisher value uniquely identifies the VRF to routing processes on the remote IOS system. The RD value takes the form of A:B where A and B
   -                                      are both numeric values.
   route_both
   -                                      Adds an export and import list of extended route target communities to the VRF.
   added in 2.5
   route_both_ipv4
   -                                      Adds an export and import list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   route_both_ipv6
   -                                      Adds an export and import list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   route_export
   -                                      Adds an export list of extended route target communities to the VRF.
   added in 2.5
   route_export_ipv4
   -                                      Adds an export list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   route_export_ipv6
   -                                      Adds an export list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   route_import
   -                                      Adds an import list of extended route target communities to the VRF.
   added in 2.5
   route_import_ipv4
   -                                      Adds an import list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   route_import_ipv6
   -                                      Adds an import list of extended route target communities in address-family configuration submode to the VRF.
   added in 2.7
   state                   Choices:       Configures the state of the VRF definition as it relates to the device operational configuration. When set to present, the VRF should be configured in the
   -                       • present ←    device active configuration and when set to absent the VRF should not be in the device active configuration
                           • absent
   vrfs                                   The set of VRF definition objects to be configured on the remote IOS device. Ths list entries can either be the VRF name or a hash of VRF definitions and
   -                                      attributes. This argument is mutually exclusive with the name argument.

NOTES                   *ios_vrf-notes*

   Note

     • Tested against IOS 15.6
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *ios_vrf-examples*

 - name: configure a vrf named management
   ios_vrf:
     name: management
     description: oob mgmt vrf
     interfaces:
       - Management1

 - name: remove a vrf named test
   ios_vrf:
     name: test
     state: absent

 - name: configure set of VRFs and purge any others
   ios_vrf:
     vrfs:
       - red
       - blue
       - green
     purge: yes

 - name: Creates a list of import RTs for the VRF with the same parameters
   ios_vrf:
     name: test_import
     rd: 1:100
     route_import:
       - 1:100
       - 3:100

 - name: Creates a list of import RTs in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_import_ipv4
     rd: 1:100
     route_import_ipv4:
       - 1:100
       - 3:100

 - name: Creates a list of import RTs in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_import_ipv6
     rd: 1:100
     route_import_ipv6:
       - 1:100
       - 3:100

 - name: Creates a list of export RTs for the VRF with the same parameters
   ios_vrf:
     name: test_export
     rd: 1:100
     route_export:
       - 1:100
       - 3:100

 - name: Creates a list of export RTs in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_export_ipv4
     rd: 1:100
     route_export_ipv4:
       - 1:100
       - 3:100

 - name: Creates a list of export RTs in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_export_ipv6
     rd: 1:100
     route_export_ipv6:
       - 1:100
       - 3:100

 - name: Creates a list of import and export route targets for the VRF with the same parameters
   ios_vrf:
     name: test_both
     rd: 1:100
     route_both:
       - 1:100
       - 3:100

 - name: Creates a list of import and export route targets in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_both_ipv4
     rd: 1:100
     route_both_ipv4:
       - 1:100
       - 3:100

 - name: Creates a list of import and export route targets in address-family configuration submode for the VRF with the same parameters
   ios_vrf:
     name: test_both_ipv6
     rd: 1:100
     route_both_ipv6:
       - 1:100
       - 3:100

RETURN VALUES                   *ios_vrf-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          The list of configuration mode commands to send to the device
   list     always   Sample:
                     ['vrf definition ansible', 'description management vrf', {'rd': '1:100'}]
   delta             The time elapsed to perform all operations
   string   always   Sample:
                     0:00:10.469466
   end               The time the job ended
   string   always   Sample:
                     2016-11-16 10:38:25.595612
   start             The time the job started
   string   always   Sample:
                     2016-11-16 10:38:15.126146

STATUS                   *ios_vrf-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *ios_vrf-red hat support*

     • Peter Sprygada (@privateip)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ios_vrf-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ios_vrf_module.html
