SYNOPSIS                   *docker_volume*

     • Create/remove Docker volumes.
     • Performs largely the same function as the “docker volume” CLI subcommand.

REQUIREMENTS                   *docker_volume-requirements*

   The below requirements are needed on the host that executes this module.

     • Docker SDK for Python: Please note that the docker-py Python module has been superseded by docker (see here for details). For Python 2.6, docker-py must be used. Otherwise, it is recommended
       to install the docker Python module. Note that both modules should not be installed at the same time. Also note that when both modules are installed and one of them is uninstalled, the other
       might no longer function and a reinstall of it is required.
     • Docker SDK for Python >= 1.10.0 (use docker-py for Python 2.6)
     • The docker server >= 1.9.0

PARAMETERS                   *docker_volume-parameters*

     Parameter          Choices/Defaults                                                                              Comments
                                               The version of the Docker API running on the Docker Host.
   api_version    Default:                     Defaults to the latest version of the API supported by Docker SDK for Python and the docker daemon.
   string         "auto"                       If the value is not specified in the task, the value of environment variable DOCKER_API_VERSION will be used instead. If the environment variable is
                                               not set, the default value will be used.
                                               aliases: docker_api_version
                                               Use a CA certificate when performing server verification by providing the path to a CA certificate file.
   ca_cert                                     If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file ca.pem from the directory specified in the
   path                                        environment variable DOCKER_CERT_PATH will be used.
                                               aliases: tls_ca_cert, cacert_path
                                               Path to the client's TLS certificate file.
   client_cert                                 If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file cert.pem from the directory specified in the
   path                                        environment variable DOCKER_CERT_PATH will be used.
                                               aliases: tls_client_cert, cert_path
                                               Path to the client's TLS key file.
   client_key                                  If the value is not specified in the task and the environment variable DOCKER_CERT_PATH is set, the file key.pem from the directory specified in the
   path                                        environment variable DOCKER_CERT_PATH will be used.
                                               aliases: tls_client_key, key_path
   debug            Choices:
   boolean          • no ←                     Debug mode
                    • yes
                                               The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example,
   docker_host    Default:                     tcp://192.0.2.23:2376. If TLS is used to encrypt the connection, the module will automatically replace tcp in the connection URL with https.
   string         "unix://var/run/docker.sock" If the value is not specified in the task, the value of environment variable DOCKER_HOST will be used instead. If the environment variable is not set,
                                               the default value will be used.
                                               aliases: docker_url
   driver         Default:                     Specify the type of volume. Docker provides the local driver, but 3rd party drivers can also be used.
   string         "local"
   driver_options                              Dictionary of volume settings. Consult docker docs for valid options and values:
   dictionary                                  https://docs.docker.com/engine/reference/commandline/volume_create/#driver-specific-options
   force            Choices:                   With state present causes the volume to be deleted and recreated if the volume already exist and the driver, driver options or labels differ. This
   boolean          • no ←                     will cause any data in the existing volume to be lost.
                    • yes                      Deprecated. Will be removed in Ansible 2.12. Set recreate to options-changed instead for the same behavior of setting force to yes.
   labels                                      Dictionary of label key/values to set for the volume
   dictionary
                    Choices:                   Controls when a volume will be recreated when state is present. Please note that recreating an existing volume will cause ""any data in the existing
   recreate         • always                   volume to be lost!"" The volume will be deleted and a new volume with the same name will be created.
   string           • never ←                  The value always forces the volume to be always recreated.
   added in 2.8     • options-changed          The value never makes sure the volume will not be recreated.
                                               The value options-changed makes sure the volume will be recreated if the volume already exist and the driver, driver options or labels differ.
   ssl_version                                 Provide a valid SSL version number. Default value determined by ssl.py module.
   string                                      If the value is not specified in the task, the value of environment variable DOCKER_SSL_VERSION will be used instead.
   state            Choices:                   absent deletes the volume.
   string           • absent                   present creates the volume, if it does not already exist.
                    • present ←
   timeout        Default:                     The maximum amount of time in seconds to wait on a response from the API.
   integer        60                           If the value is not specified in the task, the value of environment variable DOCKER_TIMEOUT will be used instead. If the environment variable is not
                                               set, the default value will be used.
                    Choices:                   Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server. Note that if validate_certs is set to yes
   tls              • no ←                     as well, it will take precedence.
   boolean          • yes                      If the value is not specified in the task, the value of environment variable DOCKER_TLS will be used instead. If the environment variable is not set,
                                               the default value will be used.
   tls_hostname   Default:                     When verifying the authenticity of the Docker Host server, provide the expected name of the server.
   string         "localhost"                  If the value is not specified in the task, the value of environment variable DOCKER_TLS_HOSTNAME will be used instead. If the environment variable is
                                               not set, the default value will be used.
                    Choices:                   Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.
   validate_certs   • no ←                     If the value is not specified in the task, the value of environment variable DOCKER_TLS_VERIFY will be used instead. If the environment variable is
   boolean          • yes                      not set, the default value will be used.
                                               aliases: tls_verify
   volume_name                                 Name of the volume to operate on.
   string /                                    aliases: name
   required

NOTES                   *docker_volume-notes*

   Note

     • Connect to the Docker daemon by providing parameters with each task or by defining environment variables. You can define DOCKER_HOST, DOCKER_TLS_HOSTNAME, DOCKER_API_VERSION,
       DOCKER_CERT_PATH, DOCKER_SSL_VERSION, DOCKER_TLS, DOCKER_TLS_VERIFY and DOCKER_TIMEOUT. If you are using docker machine, run the script shipped with the product that sets up the environment.
       It will set these variables for you. See https://docs.docker.com/machine/reference/env/ for more details.
     • When connecting to Docker daemon with TLS, you might need to install additional Python packages. For the Docker SDK for Python, version 2.4 or newer, this can be done by installing
       docker[tls] with pip.
     • Note that the Docker SDK for Python only allows to specify the path to the Docker configuration for very few functions. In general, it will use $HOME/.docker/config.json if the DOCKER_CONFIG
       environment variable is not specified, and use $DOCKER_CONFIG/config.json otherwise.

EXAMPLES                   *docker_volume-examples*

 - name: Create a volume
   docker_volume:
     name: volume_one

 - name: Remove a volume
   docker_volume:
     name: volume_one
     state: absent

 - name: Create a volume with options
   docker_volume:
     name: volume_two
     driver_options:
       type: btrfs
       device: /dev/sda2

RETURN VALUES                   *docker_volume-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   volume              Volume inspection results for the affected volume.
   dictionary success  Note that facts are part of the registered vars since Ansible 2.8. For compatibility reasons, the facts are also accessible directly as docker_volume. Note that the returned
                       fact will be removed in Ansible 2.12.

STATUS                   *docker_volume-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Alex Grönholm (@agronholm)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *docker_volume-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/docker_volume_module.html
