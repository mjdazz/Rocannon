SYNOPSIS                   *netapp_e_facts*

     • The netapp_e_facts module returns a collection of facts regarding NetApp E-Series storage arrays.
     • When contacting a storage array directly the collection includes details about the array, controllers, management interfaces, hostside interfaces, driveside interfaces, disks, storage pools,
       volumes, snapshots, and features.
     • When contacting a web services proxy the collection will include basic information regarding the storage systems that are under its management.

PARAMETERS                   *netapp_e_facts-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   api_password                       The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.
   string / required
   api_url                            The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2
   string / required
   api_username                       The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.
   string / required
   ssid              Default:         The ID of the array to manage. This value must be unique for each array.
   string            1
   validate_certs      Choices:
   boolean             • no           Should https certificates be validated?
                       • yes ←

NOTES                   *netapp_e_facts-notes*

   Note

     • The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the
       Embedded Web Services API.
     • Embedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.
     • netapp_e_storage_system may be utilized for configuring the systems managed by a WSP instance.

EXAMPLES                   *netapp_e_facts-examples*

 ---
 - name: Get array facts
   netapp_e_facts:
       ssid: "{{ netapp_array_id }}"
       api_url: "https://{{ netapp_e_api_host }}:8443/devmgr/v2"
       api_username: "{{ netapp_api_username }}"
       api_password: "{{ netapp_api_password }}"
       validate_certs: "{{ netapp_api_validate_certs }}"
 - name: Get array facts
   netapp_e_facts:
       ssid: 1
       api_url: https://192.168.1.100:8443/devmgr/v2
       api_username: myApiUser
       api_password: myApiPass
       validate_certs: true

RETURN VALUES                   *netapp_e_facts-return values*

   Common return values are documented here, the following are the fields unique to this module:

                Key                Returned                                                                        Description
   msg                                       Success message
   string                         on success Sample:
                                             ['Gathered facts for storage array. Array ID [1].', 'Gathered facts for web services proxy.']
                                  on
                                  successful
                                  inquiry
   storage_array_facts            from from  provides details about the array, controllers, management interfaces, hostside interfaces, driveside interfaces, disks, storage pools, volumes,
   complex                        embedded   snapshots, and features.
                                  web
                                  services
                                  rest api
     netapp_controllers                      storage array controller list that contains basic controller identification and status
     complex                                 Sample:
                                             [[{'name': 'A', 'serial': '021632007299', 'status': 'optimal'}, {'name': 'B', 'serial': '021632007300', 'status': 'failed'}]]
                                             drive list that contains identification, type, and status information for each drive
     netapp_disks                            Sample:
     complex                                 [[{'available': False, 'firmware_version': 'MS02', 'id': '01000000500003960C8B67880000000000000000', 'media_type': 'ssd', 'product_id': 'PX02SMU080 ',
                                             'serial_number': '15R0A08LT2BA', 'status': 'optimal', 'tray_ref': '0E00000000000000000000000000000000000000', 'usable_bytes': '799629205504'}]]
     netapp_driveside_interfaces             drive side interface list that contains identification, type, and speed for each interface
     complex                                 Sample:
                                             [[{'controller': 'A', 'interface_speed': '12g', 'interface_type': 'sas'}], [{'controller': 'B', 'interface_speed': '10g', 'interface_type': 'iscsi'}]]
     netapp_enabled_features                 specifies the enabled features on the storage array.
     complex                      on success Sample:
                                             [['flashReadCache', 'performanceTier', 'protectionInformation', 'secureVolume']]
     netapp_host_groups                      specifies the host groups on the storage arrays.
     complex                      on success Sample:
                                             [[{'id': '85000000600A098000A4B28D003610705C40B964', 'name': 'group1'}]]
                                             lists the available host types on the storage array.
                                             Sample:
     netapp_host_types                       [[{'index': 0, 'type': 'FactoryDefault'}, {'index': 1, 'type': 'W2KNETNCL'}, {'index': 2, 'type': 'SOL'}, {'index': 5, 'type': 'AVT_4M'}, {'index': 6,
     complex                      on success 'type': 'LNX'}, {'index': 7, 'type': 'LnxALUA'}, {'index': 8, 'type': 'W2KNETCL'}, {'index': 9, 'type': 'AIX MPIO'}, {'index': 10, 'type':
                                             'VmwTPGSALUA'}, {'index': 15, 'type': 'HPXTPGS'}, {'index': 17, 'type': 'SolTPGSALUA'}, {'index': 18, 'type': 'SVC'}, {'index': 22, 'type':
                                             'MacTPGSALUA'}, {'index': 23, 'type': 'WinTPGSALUA'}, {'index': 24, 'type': 'LnxTPGSALUA'}, {'index': 25, 'type': 'LnxTPGSALUA_PM'}, {'index': 26,
                                             'type': 'ONTAP_ALUA'}, {'index': 27, 'type': 'LnxTPGSALUA_SF'}, {'index': 28, 'type': 'LnxDHALUA'}, {'index': 29, 'type': 'ATTOClusterAllOS'}]]
                                             specifies the hosts on the storage arrays.
     netapp_hosts                 on success Sample:
     complex                                 [[{'id': '8203800000000000000000000000000000000000', 'name': 'host1', 'group_id': '85000000600A098000A4B28D003610705C40B964', 'host_type_index': 28,
                                             'ports': [{'type': 'fc', 'address': '1000FF7CFFFFFF01', 'label': 'FC_1'}, {'type': 'fc', 'address': '1000FF7CFFFFFF00', 'label': 'FC_2'}]}]]
                                             host side interface list that contains identification, configuration, type, speed, and status information for each interface
     netapp_hostside_interfaces              Sample:
     complex                                 [[{'iscsi': [{'controller': 'A', 'current_interface_speed': '10g', 'ipv4_address': '10.10.10.1', 'ipv4_enabled': True, 'ipv4_gateway': '10.10.10.1',
                                             'ipv4_subnet_mask': '255.255.255.0', 'ipv6_enabled': False, 'iqn': 'iqn.1996-03.com.netapp:2806.600a098000a81b6d0000000059d60c76', 'link_status': 'up',
                                             'mtu': 9000, 'supported_interface_speeds': ['10g']}]}]]
                                             management interface list that contains identification, configuration, and status for each interface
     netapp_management_interfaces            Sample:
     complex                                 [[{'alias': 'ict-2800-A', 'channel': 1, 'controller': 'A', 'dns_config_method': 'dhcp', 'dns_servers': [], 'ipv4_address': '10.1.1.1',
                                             'ipv4_address_config_method': 'static', 'ipv4_enabled': True, 'ipv4_gateway': '10.113.1.1', 'ipv4_subnet_mask': '255.255.255.0', 'ipv6_enabled': False,
                                             'link_status': 'up', 'mac_address': '00A098A81B5D', 'name': 'wan0', 'ntp_config_method': 'disabled', 'ntp_servers': [], 'remote_ssh_access': False}]]
                                             provides storage array identification, firmware version, and available capabilities
     netapp_storage_array                    Sample:
     dictionary                              [{'chassis_serial': '021540006043', 'firmware': '08.40.00.01', 'name': 'ict-2800-11_40', 'wwn': '600A098000A81B5D0000000059D60C76', 'cacheBlockSizes':
                                             [4096, 8192, 16384, 32768], 'supportedSegSizes': [8192, 16384, 32768, 65536, 131072, 262144, 524288]}]
                                             storage pool list that contains identification and capacity information for each pool
     netapp_storage_pools                    Sample:
     complex                                 [[{'available_capacity': '3490353782784', 'id': '04000000600A098000A81B5D000002B45A953A61', 'name': 'Raid6', 'total_capacity': '5399466745856',
                                             'used_capacity': '1909112963072'}]]
                                             storage volume list that contains identification and capacity information for each volume
     netapp_volumes                          Sample:
     complex                                 [[{'capacity': '5368709120', 'id': '02000000600A098000AAC0C3000002C45A952BAA', 'is_thin_provisioned': False, 'name': '5G', 'parent_storage_pool_id':
                                             '04000000600A098000A81B5D000002B45A953A61'}]]
                                             list of available volumes keyed by the mapped initiators.
     netapp_volumes_by_initiators            Sample:
     complex                                 [{'192_168_1_1': [{'id': '02000000600A098000A4B9D1000015FD5C8F7F9E', 'meta_data': {'filetype': 'xfs', 'public': True}, 'name': 'some_volume',
                                             'workload_name': 'test2_volumes', 'wwn': '600A098000A4B9D1000015FD5C8F7F9E'}]}]
     netapp_workload_tags                    workload tag list
     complex                                 Sample:
                                             [[{'id': '87e19568-43fb-4d8d-99ea-2811daaa2b38', 'name': 'ftp_server', 'workloadAttributes': [{'key': 'use', 'value': 'general'}]}]]
                                             snapshot image list that contains identification, capacity, and status information for each snapshot image
     snapshot_images                         Sample:
     complex                                 [[{'active_cow': True, 'creation_method': 'user', 'id': '34000000600A098000A81B5D00630A965B0535AC', 'pit_capacity': '5368709120',
                                             'reposity_cap_utilization': '0', 'rollback_source': False, 'status': 'optimal'}]]

STATUS                   *netapp_e_facts-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Kevin Hulquest (@hulquest)
     • Nathan Swartz (@ndswartz)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *netapp_e_facts-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/netapp_e_facts_module.html
