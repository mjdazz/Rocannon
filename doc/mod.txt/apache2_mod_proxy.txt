SYNOPSIS                   *apache2_mod_proxy*

     • Set and/or get members’ attributes of an Apache httpd 2.4 mod_proxy balancer pool, using HTTP POST and GET requests. The httpd mod_proxy balancer-member status page has to be enabled and
       accessible, as this module relies on parsing this page. This module supports ansible check_mode, and requires BeautifulSoup python module.

PARAMETERS                   *apache2_mod_proxy-parameters*

        Parameter        Choices/Defaults                                                                           Comments
   balancer_url_suffix Default:             Suffix of the balancer pool url required to access the balancer pool status page (e.g. balancer_vhost[:port]/balancer_url_suffix).
   -                   "/balancer-manager/"
   balancer_vhost                           (ipv4|ipv6|fqdn):port of the Apache httpd 2.4 mod_proxy balancer pool.
   - / required
   member_host                              (ipv4|ipv6|fqdn) of the balancer member to get or to set attributes to. Port number is autodetected and should not be specified here. If undefined,
   -                                        apache2_mod_proxy module will return a members list of dictionaries of all the current balancer pool members' attributes.
                         Choices:
                         • present
                         • absent
   state                 • enabled          Desired state of the member host. (absent|disabled),drained,hot_standby,ignore_errors can be simultaneously invoked by separating them with a comma (e.g.
   -                     • disabled         state=drained,ignore_errors).
                         • drained
                         • hot_standby
                         • ignore_errors
   tls                   Choices:
   boolean               • no ←             Use https to access balancer management page.
                         • yes
   validate_certs        Choices:
   boolean               • no               Validate ssl/tls certificates.
                         • yes ←

EXAMPLES                   *apache2_mod_proxy-examples*

 # Get all current balancer pool members' attributes:
 - apache2_mod_proxy:
     balancer_vhost: 10.0.0.2

 # Get a specific member's attributes:
 - apache2_mod_proxy:
     balancer_vhost: myws.mydomain.org
     balancer_suffix: /lb/
     member_host: node1.myws.mydomain.org

 # Enable all balancer pool members:
 - apache2_mod_proxy:
     balancer_vhost: '{{ myloadbalancer_host }}'
   register: result
 - apache2_mod_proxy:
     balancer_vhost: '{{ myloadbalancer_host }}'
     member_host: '{{ item.host }}'
     state: present
   with_items: '{{ result.members }}'

 # Gracefully disable a member from a loadbalancer node:
 - apache2_mod_proxy:
     balancer_vhost: '{{ vhost_host }}'
     member_host: '{{ member.host }}'
     state: drained
   delegate_to: myloadbalancernode
 - wait_for:
     host: '{{ member.host }}'
     port: '{{ member.port }}'
     state: drained
   delegate_to: myloadbalancernode
 - apache2_mod_proxy:
     balancer_vhost: '{{ vhost_host }}'
     member_host: '{{ member.host }}'
     state: absent
   delegate_to: myloadbalancernode

RETURN VALUES                   *apache2_mod_proxy-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
                       specific balancer member information dictionary, returned when apache2_mod_proxy module is invoked with member_host parameter.
                       Sample:
   member     success  {'attributes': {'Busy': '0', 'Elected': '42', 'Factor': '1', 'From': '136K', 'Load': '0', 'Route': None, 'RouteRedir': None, 'Set': '0', 'Status': 'Init Ok ', 'To': ' 47K',
   dictionary          'Worker URL': None}, 'balancer_url': 'http://10.10.0.2/balancer-manager/', 'host': '10.10.0.20', 'management_url':
                       'http://10.10.0.2/lb/?b=mywsbalancer&w=http://10.10.0.20:8080/ws&nonce=8925436c-79c6-4841-8936-e7d13b79239b', 'path': '/ws', 'port': 8080, 'protocol': 'http', 'status':
                       {'disabled': False, 'drained': False, 'hot_standby': False, 'ignore_errors': False}}
                       list of member (defined above) dictionaries, returned when apache2_mod_proxy is invoked with no member_host and state args.
                       Sample:
                       [{'attributes': {'Busy': '0', 'Elected': '42', 'Factor': '1', 'From': '136K', 'Load': '0', 'Route': None, 'RouteRedir': None, 'Set': '0', 'Status': 'Init Ok ', 'To': ' 47K',
   members             'Worker URL': None}, 'balancer_url': 'http://10.10.0.2/balancer-manager/', 'host': '10.10.0.20', 'management_url':
   list       success  'http://10.10.0.2/lb/?b=mywsbalancer&w=http://10.10.0.20:8080/ws&nonce=8925436c-79c6-4841-8936-e7d13b79239b', 'path': '/ws', 'port': 8080, 'protocol': 'http', 'status':
                       {'disabled': False, 'drained': False, 'hot_standby': False, 'ignore_errors': False}}, {'attributes': {'Busy': '0', 'Elected': '42', 'Factor': '1', 'From': '136K', 'Load':
                       '0', 'Route': None, 'RouteRedir': None, 'Set': '0', 'Status': 'Init Ok ', 'To': ' 47K', 'Worker URL': None}, 'balancer_url': 'http://10.10.0.2/balancer-manager/', 'host':
                       '10.10.0.21', 'management_url': 'http://10.10.0.2/lb/?b=mywsbalancer&w=http://10.10.0.21:8080/ws&nonce=8925436c-79c6-4841-8936-e7d13b79239b', 'path': '/ws', 'port': 8080,
                       'protocol': 'http', 'status': {'disabled': False, 'drained': False, 'hot_standby': False, 'ignore_errors': False}}]

STATUS                   *apache2_mod_proxy-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Olivier Boukili (@oboukili)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *apache2_mod_proxy-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/apache2_mod_proxy_module.html
