SYNOPSIS                   *aci_vrf*

     • Manage contexts or VRFs on Cisco ACI fabrics.
     • Each context is a private network associated to a tenant, i.e. VRF.

PARAMETERS                   *aci_vrf-parameters*

           Parameter         Choices/Defaults                                                                        Comments
                                              The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
   certificate_name                           If a private_key filename was provided, this defaults to the private_key basename, without extension.
   string                                     If PEM-formatted content was provided for private_key, this defaults to the username value.
                                              aliases: cert_name
   description                                The description for the VRF.
   string                                     aliases: descr
   host                                       IP Address or hostname of APIC resolvable by Ansible control host.
   string / required                          aliases: hostname
                               Choices:       Influence the output of this ACI module.
   output_level                • debug        normal means the standard output, incl. current dict
   string                      • info         info adds informational output, incl. previous, proposed and sent dicts
                               • normal ←     debug adds debugging output, incl. filter_string, method, response, status and url information
   password                                   The password to use for authentication.
   string / required                          This option is mutual exclusive with private_key. If private_key is provided too, it will be used instead.
   policy_control_direction    Choices:
   string                      • egress       Determines if the policy should be enforced by the fabric on ingress or egress.
                               • ingress
   policy_control_preference   Choices:
   string                      • enforced     Determines if the fabric should enforce contract policies to allow routing and packet forwarding.
                               • unenforced
   port                                       Port number to be used for REST connection.
   integer                                    The default value depends on parameter use_ssl.
                                              Either a PEM-formatted private key file or the private key content used for signature-based authentication.
   private_key                                This value also influences the default certificate_name that is used.
   string / required                          This option is mutual exclusive with password. If password is provided too, it will be ignored.
                                              aliases: cert_key
                               Choices:
   state                       • absent       Use present or absent for adding or removing.
   string                      • present ←    Use query for listing an object or multiple objects.
                               • query
   tenant                                     The name of the Tenant the VRF should belong to.
   string                                     aliases: tenant_name
   timeout                   Default:         The socket level timeout in seconds.
   integer                   30
   use_proxy                   Choices:
   boolean                     • no           If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts.
                               • yes ←
   use_ssl                     Choices:
   boolean                     • no           If no, an HTTP connection will be used instead of the default HTTPS connection.
                               • yes ←
   username                  Default:         The username to use for authentication.
   string                    "admin"          aliases: user
   validate_certs              Choices:       If no, SSL certificates will not be validated.
   boolean                     • no           This should only set to no when used on personally controlled sites using self-signed certificates.
                               • yes ←
   vrf                                        The name of the VRF.
   string                                     aliases: context, name, vrf_name

NOTES                   *aci_vrf-notes*

   Note

     • The tenant used must exist before using this module in your playbook. The aci_tenant module can be used for this.

SEE ALSO                   *aci_vrf-see also*

   See also

   aci_tenant – Manage tenants (fv:Tenant)
   The official documentation on the aci_tenant module.

   APIC Management Information Model reference
   More information about the internal APIC class fv:Ctx.

   Cisco ACI Guide
   Detailed information on how to manage your ACI infrastructure using Ansible.

   Developing Cisco ACI modules
   Detailed guide on how to write your own Cisco ACI modules to contribute.

EXAMPLES                   *aci_vrf-examples*

 - name: Add a new VRF to a tenant
   aci_vrf:
     host: apic
     username: admin
     password: SomeSecretPassword
     vrf: vrf_lab
     tenant: lab_tenant
     descr: Lab VRF
     policy_control_preference: enforced
     policy_control_direction: ingress
     state: present
   delegate_to: localhost

 - name: Remove a VRF for a tenant
   aci_vrf:
     host: apic
     username: admin
     password: SomeSecretPassword
     vrf: vrf_lab
     tenant: lab_tenant
     state: absent
   delegate_to: localhost

 - name: Query a VRF of a tenant
   aci_vrf:
     host: apic
     username: admin
     password: SomeSecretPassword
     vrf: vrf_lab
     tenant: lab_tenant
     state: query
   delegate_to: localhost
   register: query_result

 - name: Query all VRFs
   aci_vrf:
     host: apic
     username: admin
     password: SomeSecretPassword
     state: query
   delegate_to: localhost
   register: query_result

RETURN VALUES                   *aci_vrf-return values*

   Common return values are documented here, the following are the fields unique to this module:

        Key         Returned                                                                                 Description
   current                      The existing configuration from the APIC after the module has finished
   list          success        Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production environment', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   error                        The error information as returned from the APIC
   dictionary    failure        Sample:
                                {'code': '122', 'text': 'unknown managed object class foo'}
   filter_string failure or     The filter string used for the request
   string        debug          Sample:
                                ?rsp-prop-include=config-only
   method        failure or     The HTTP method used for the request to the APIC
   string        debug          Sample:
                                POST
   previous                     The original configuration from the APIC before the module has started
   list          info           Sample:
                                [{'fvTenant': {'attributes': {'descr': 'Production', 'dn': 'uni/tn-production', 'name': 'production', 'nameAlias': '', 'ownerKey': '', 'ownerTag': ''}}}]
   proposed                     The assembled configuration from the user-provided parameters
   dictionary    info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment', 'name': 'production'}}}
   raw                          The raw output returned by the APIC REST API (xml or json)
   string        parse error    Sample:
                                <?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>
   response      failure or     The HTTP response from the APIC
   string        debug          Sample:
                                OK (30 bytes)
   sent                         The actual/minimal configuration pushed to the APIC
   list          info           Sample:
                                {'fvTenant': {'attributes': {'descr': 'Production environment'}}}
   status        failure or     The HTTP status from the APIC
   integer       debug          Sample:
                                200
   url           failure or     The HTTP url used for the request to the APIC
   string        debug          Sample:
                                https://10.11.12.13/api/mo/uni/tn-production.json

STATUS                   *aci_vrf-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by an Ansible Partner. [certified]

     • Jacob McGill (@jmcgill298)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aci_vrf-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aci_vrf_module.html
