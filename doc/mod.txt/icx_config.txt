SYNOPSIS                   *icx_config*

     • Ruckus ICX configurations use a simple block indent file syntax for segmenting configuration into sections. This module provides an implementation for working with ICX configuration sections
       in a deterministic way.

PARAMETERS                   *icx_config-parameters*

        Parameter      Choices/Defaults                                                                           Comments
   after                                The ordered set of commands to append to the end of the command stack if a change needs to be made. Just like with before this allows the playbook designer
   list                                 to append a set of commands to be executed after the command set.
   backup                Choices:       This argument will cause the module to create a full backup of the current running-config from the remote device before any changes are made. The backup file
   boolean               • no ←         is written to the backup folder in the playbook root directory or role root directory, if playbook is part of an ansible role. If the directory does not
                         • yes          exist, it is created.
   before                               The ordered set of commands to push on to the command stack if a change needs to be made. This allows the playbook designer the opportunity to perform
   list                                 configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.
   defaults              Choices:       This argument specifies whether or not to collect all defaults when getting the remote device running config. When enabled, the module will get the current
   boolean               • no ←         config by issuing the command show running-config all.
                         • yes
                                        When using the ansible-playbook --diff command line argument the module can generate diffs against different sources.
                         Choices:       When this option is configure as startup, the module will return the diff of the running-config against the configuration.
   diff_against          • running      When this option is configured as intended, the module will return the diff of the running-config against the configuration provided in the intended_config
   string                • startup      argument.
                         • intended     When this option is configured as running, the module will return the before and after diff of the running-config with respect to any changes made to the
                                        device configuration.
   diff_ignore_lines                    Use this argument to specify one or more lines that should be ignored during the diff. This is used for lines in the configuration that are automatically
   list                                 updated by the system. This argument takes a list of regular expressions or exact line matches.
   intended_config                      The intended_config provides the master configuration that the node should conform to and is used to check the final running-config against. This argument
   string                               will not modify any settings on the remote device and is strictly used to check the compliance of the current device's configuration against. When specifying
                                        this argument, the task should also modify the diff_against value and set it to intended.
   lines                                The ordered set of commands that should be configured in the section. The commands must be the exact same commands as found in the device running-config. Be
   list                                 sure to note the configuration command syntax as some commands are automatically modified by the device config parser.
                                        aliases: commands
                         Choices:
   match                 • line ←       Instructs the module on the way to perform the matching of the set of commands against the current device config. If match is set to line, commands are
   string                • strict       matched line by line. If match is set to strict, command lines are matched with respect to position. If match is set to exact, command lines must be an equal
                         • exact        match. Finally, if match is set to none, the module will not attempt to compare the source configuration with the running configuration on the remote device.
                         • none
   multiline_delimiter Default:         This argument is used when pushing a multiline configuration element to the ICX device. It specifies the character to use as the delimiting character. This
   string              "@"              only applies to the configuration action.
   parents                              The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against. If the parents argument is omitted, the
   list                                 commands are checked against the set of top level or global commands.
   replace               Choices:       Instructs the module on the way to perform the configuration on the device. If the replace argument is set to line then the modified lines are pushed to the
   string                • line ←       device in configuration mode. If the replace argument is set to block then the entire command block is pushed to the device in configuration mode if any line
                         • block        is not correct.
                                        The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of
   running_config                       source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook. The running_config argument
   string                               allows the implementer to pass in the configuration to use as the base config for comparison.
                                        aliases: config
                         Choices:       When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default. Using this argument will change
   save_when             • always       that before. If the argument is set to always, then the running-config will always be copied to the start-up configuration and the modified flag will always
   string                • never ←      be set to True. If the argument is set to modified, then the running-config will only be copied to the start-up configuration if it has changed since the
                         • modified     last save to configuration. If the argument is set to never, the running-config will never be copied to the configuration. If the argument is set to changed,
                         • changed      then the running-config will only be copied to the configuration if the task has made a change.
   src                                  Specifies the source path to the file that contains the configuration or configuration template to load. The path to the source file can either be the full
   string                               path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with lines, parents.

NOTES                   *icx_config-notes*

   Note

     • Tested against ICX 10.1.
     • For information on using ICX platform, see the ICX OS Platform Options guide.

EXAMPLES                   *icx_config-examples*

 - name: configure top level configuration
   icx_config:
     lines: hostname {{ inventory_hostname }}

 - name: configure interface settings
   icx_config:
     lines:
       - port-name test string
       - ip address 172.31.1.1 255.255.255.0
     parents: interface ethernet 1/1/2

 - name: configure ip helpers on multiple interfaces
   icx_config:
     lines:
       - ip helper-address 172.26.1.10
       - ip helper-address 172.26.3.8
     parents: "{{ item }}"
   with_items:
     - interface ethernet 1/1/2
     - interface ethernet 1/1/3

 - name: load new acl into device
   icx_config:
     lines:
       - permit ip host 192.0.2.1 any log
       - permit ip host 192.0.2.2 any log
       - permit ip host 192.0.2.3 any log
       - permit ip host 192.0.2.4 any log
     parents: ip access-list extended test
     before: no ip access-list extended test
     match: exact

 - name: check the running-config against master config
   icx_config:
     diff_against: intended
     intended_config: "{{ lookup('file', 'master.cfg') }}"

 - name: check the configuration against the running-config
   icx_config:
     diff_against: startup
     diff_ignore_lines:
       - ntp clock ."

 - name: for idempotency, use full-form commands
   icx_config:
     lines:
       # - en
       - enable
     # parents: int eth1/0/11
     parents: interface ethernet 1/1/2

 # Set boot image based on comparison to a group_var (version) and the version
 # that is returned from the `icx_facts` module
 - name: SETTING BOOT IMAGE
   icx_config:
     lines:
       - no boot system
       - boot system flash bootflash:{{new_image}}
     host: "{{ inventory_hostname }}"
   when: ansible_net_version != version

 - name: render template onto an ICX device
   icx_config:
     backup: yes
     src: "{{ lookup('file', 'config.j2') }}"

RETURN VALUES                   *icx_config-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key          Returned                                                                                  Description
   backup_path                    The full path to the backup file
   string      when backup is yes Sample:
                                  /playbooks/ansible/backup/[email protected]:28:34
   commands                       The set of commands that will be pushed to the remote device
   list        always             Sample:
                                  ['hostname foo', 'router ospf 1', 'router-id 192.0.2.1']
   updates                        The set of commands that will be pushed to the remote device
   list        always             Sample:
                                  ['hostname foo', 'router ospf 1', 'router-id 192.0.2.1']

STATUS                   *icx_config-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ruckus Wireless (@Commscope)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *icx_config-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/icx_config_module.html
