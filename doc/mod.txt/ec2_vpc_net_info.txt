SYNOPSIS                   *ec2_vpc_net_info*

     • Gather information about ec2 VPCs in AWS
     • This module was called ec2_vpc_net_facts before Ansible 2.9. The usage did not change.

   Aliases: ec2_vpc_net_facts

REQUIREMENTS                   *ec2_vpc_net_info-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • python >= 2.6

PARAMETERS                   *ec2_vpc_net_info-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   filters                                       A dict of filters to apply. Each dict item consists of a filter key and a filter value. See
   -                                             https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html for possible filters.
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←
   vpc_ids
   -                                             A list of VPC IDs that exist in your account.
   added in 2.5

NOTES                   *ec2_vpc_net_info-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_vpc_net_info-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 # Gather information about all VPCs
 - ec2_vpc_net_info:

 # Gather information about a particular VPC using VPC ID
 - ec2_vpc_net_info:
     vpc_ids: vpc-00112233

 # Gather information about any VPC with a tag key Name and value Example
 - ec2_vpc_net_info:
     filters:
       "tag:Name": Example

RETURN VALUES                   *ec2_vpc_net_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

                  Key                Returned                                                                       Description
   vpcs                              success  Returns an array of complex objects as described below.
   complex
     cidr_block                      always   The IPv4 CIDR block assigned to the VPC.
     string
     classic_link_dns_supported      always   True/False depending on attribute setting for classic link DNS support.
     boolean
     classic_link_enabled            always   True/False depending on if classic link support is enabled.
     boolean
     enable_dns_hostnames            always   True/False depending on attribute setting for DNS hostnames support.
     boolean
     enable_dns_support              always   True/False depending on attribute setting for DNS support.
     boolean
     id                              always   The ID of the VPC (for backwards compatibility).
     string
     instance_tenancy                always   The instance tenancy setting for the VPC.
     string
     ipv6_cidr_block_association_set always   An array of IPv6 cidr block association set information.
     complex
          association_id             always   The association ID
          string
          ipv6_cidr_block            always   The IPv6 CIDR block that is associated with the VPC.
          string
          ipv6_cidr_block_state      always   A hash/dict that contains a single item. The state of the cidr block association.
          dictionary
                      state          always   The CIDR block association state.
                      string
     is_default                      always   True if this is the default VPC for account.
     boolean
     state                           always   The state of the VPC.
     string
     tags                            always   A dict of tags associated with the VPC.
     dictionary
     vpc_id                          always   The ID of the VPC .
     string

STATUS                   *ec2_vpc_net_info-status*

     • This module is guaranteed to have backward compatible interface changes going forward. [stableinterface]
     • This module is maintained by the Ansible Core Team. [core]

RED HAT SUPPORT                   *ec2_vpc_net_info-red hat support*

     • Rob White (@wimnat)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_vpc_net_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_vpc_net_info_module.html
