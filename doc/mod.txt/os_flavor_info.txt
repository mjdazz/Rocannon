SYNOPSIS                   *os_flavor_info*

     • Retrieve information about available OpenStack instance flavors. By default, information about ALL flavors are retrieved. Filters can be applied to get information for only matching flavors.
       For example, you can filter on the amount of RAM available to the flavor, or the number of virtual CPUs available to the flavor, or both. When specifying multiple filters, ALL filters must
       match on a flavor before that flavor is returned as a fact.
     • This module was called os_flavor_facts before Ansible 2.9, returning ansible_facts. Note that the os_flavor_info module no longer returns ansible_facts!

   Aliases: os_flavor_facts

REQUIREMENTS                   *os_flavor_info-requirements*

   The below requirements are needed on the host that executes this module.

     • openstacksdk
     • openstacksdk >= 0.12.0
     • python >= 2.7

PARAMETERS                   *os_flavor_info-parameters*

       Parameter     Choices/Defaults                                                                            Comments
   api_timeout                        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library.
   integer
                                      Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default password plugin, this would contain auth_url, username,
   auth                               password, project_name and any information about domains (for example, os_user_domain_name or os_project_domain_name) if the cloud supports them. For other
   dictionary                         plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack
                                      OS_" environment variables are present.
   auth_type                          Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the
   string                             contents of the auth parameter should be updated accordingly.
   availability_zone                  Ignored. Present for backwards compatibility
   -
   ca_cert                            A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
   string                             aliases: cacert
   client_cert                        A path to a client certificate to use as part of the SSL transaction.
   string                             aliases: cert
   client_key                         A path to a client key to use as part of the SSL transaction.
   string                             aliases: key
   cloud                              Named cloud or cloud config to operate against. If cloud is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides
   raw                                default values for auth and auth_type. This parameter is not needed if auth is provided or if OpenStack OS_" environment variables are present. If cloud is a
                                      dict, it contains a complete cloud configuration like would be in a section of clouds.yaml.
   ephemeral           Choices:
   boolean             • no ←         A string used for filtering flavors based on the amount of ephemeral storage. Format is the same as the ram parameter
                       • yes
                       Choices:
   interface           • admin        Endpoint URL type to fetch from the service catalog.
   string              • internal     aliases: endpoint_type
                       • public ←
   limit                              Limits the number of flavors returned. All matching flavors are returned by default.
   -
   name                               A flavor name. Cannot be used with ram or vcpus or ephemeral.
   -
                                      A string used for filtering flavors based on the amount of RAM (in MB) desired. This string accepts the following special values: 'MIN' (return flavors with
   ram                 Choices:       the minimum amount of RAM), and 'MAX' (return flavors with the maximum amount of RAM).
   boolean             • no ←         A specific amount of RAM may also be specified. Any flavors with this exact amount of RAM will be returned.
                       • yes          A range of acceptable RAM may be given using a special syntax. Simply prefix the amount of RAM with one of these acceptable range values: '<', '>', '<=', '>='.
                                      These values represent less than, greater than, less than or equal to, and greater than or equal to, respectively.
   region_name                        Name of the region.
   string
   timeout           Default:         How long should ansible wait for the requested resource.
   integer           180
   validate_certs      Choices:       Whether or not SSL API requests should be verified.
   boolean             • no ←         Before Ansible 2.3 this defaulted to yes.
                       • yes          aliases: verify
   vcpus               Choices:
   boolean             • no ←         A string used for filtering flavors based on the number of virtual CPUs desired. Format is the same as the ram parameter.
                       • yes
   wait                Choices:
   boolean             • no           Should ansible wait until the requested resource is complete.
                       • yes ←

NOTES                   *os_flavor_info-notes*

   Note

     • The result contains a list of unsorted flavors.
     • The standard OpenStack environment variables, such as OS_USERNAME may be used instead of providing explicit values.
     • Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or
       ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at
       https://docs.openstack.org/openstacksdk/

EXAMPLES                   *os_flavor_info-examples*

 # Gather information about all available flavors
 - os_flavor_info:
     cloud: mycloud
   register: result

 - debug:
     msg: "{{ result.openstack_flavors }}"

 # Gather information for the flavor named "xlarge-flavor"
 - os_flavor_info:
     cloud: mycloud
     name: "xlarge-flavor"

 # Get all flavors that have exactly 512 MB of RAM.
 - os_flavor_info:
     cloud: mycloud
     ram: "512"

 # Get all flavors that have 1024 MB or more of RAM.
 - os_flavor_info:
     cloud: mycloud
     ram: ">=1024"

 # Get a single flavor that has the minimum amount of RAM. Using the 'limit'
 # option will guarantee only a single flavor is returned.
 - os_flavor_info:
     cloud: mycloud
     ram: "MIN"
     limit: 1

 # Get all flavors with 1024 MB of RAM or more, AND exactly 2 virtual CPUs.
 - os_flavor_info:
     cloud: mycloud
     ram: ">=1024"
     vcpus: "2"

 # Get all flavors with 1024 MB of RAM or more, exactly 2 virtual CPUs, and
 # less than 30gb of ephemeral storage.
 - os_flavor_info:
     cloud: mycloud
     ram: ">=1024"
     vcpus: "2"
     ephemeral: "<30"

RETURN VALUES                   *os_flavor_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key         Returned                                                                               Description
   openstack_flavors On success. Dictionary describing the flavors.
   complex
        disk                     Size of local disk, in GB.
        integer      success     Sample:
                                 10
        ephemeral                Ephemeral space size, in GB.
        integer      success     Sample:
                                 10
        id                       Flavor ID.
        string       success     Sample:
                                 515256b8-7027-4d73-aa54-4e30a4a4a339
        is_public                Make flavor accessible to the public.
        boolean      success     Sample:
                                 True
        name                     Flavor name.
        string       success     Sample:
                                 tiny
        ram                      Amount of memory, in MB.
        integer      success     Sample:
                                 1024
        swap                     Swap space size, in MB.
        integer      success     Sample:
                                 100
        vcpus                    Number of virtual CPUs.
        integer      success     Sample:
                                 2

STATUS                   *os_flavor_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • David Shrewsbury (@Shrews)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *os_flavor_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/os_flavor_info_module.html
