SYNOPSIS                   *ec2_asg_lifecycle_hook*

     • When no given Hook found, will create one.
     • In case Hook found, but provided parameters are differes, will update existing Hook.
     • In case state=absent and Hook exists, will delete it.

REQUIREMENTS                   *ec2_asg_lifecycle_hook-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3>=1.4.4
     • python >= 2.6

PARAMETERS                   *ec2_asg_lifecycle_hook-parameters*

            Parameter                       Choices/Defaults                                                                       Comments
   autoscaling_group_name                                                The name of the Auto Scaling group to which you want to assign the lifecycle hook.
   - / required
   aws_access_key                                                        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
   string                                                                used.
                                                                         aliases: ec2_access_key, access_key
   aws_secret_key                                                        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment
   string                                                                variable is used.
                                                                         aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:                               Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task,
   boolean                        • no ←                                 outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total
   added in 2.8                   • yes                                  list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   default_result                 Choices:                               Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure
   -                              • ABANDON ←                            occurs. This parameter can be either CONTINUE or ABANDON.
                                  • CONTINUE
   ec2_url                                                               Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules
   string                                                                where region is required. Must be specified for all other modules if region is not used. If not set then the value of the
                                                                         EC2_URL environment variable, if any, is used.
   heartbeat_timeout            Default:                                 The amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto
   -                            "3600 (1 hour)"                          Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling
                                                                         RecordLifecycleActionHeartbeat.
   lifecycle_hook_name                                                   The name of the lifecycle hook.
   - / required
   notification_meta_data                                                Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
   -
   notification_target_arn                                               The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for
   -                                                                     the lifecycle hook. This target can be either an SQS queue or an SNS topic. If you specify an empty string, this overrides
                                                                         the current ARN.
   profile                                                               Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                                                The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is
   string                                                                used. See http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                                         aliases: aws_region, ec2_region
   role_arn                                                              The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
   -
   security_token                                                        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is
   string                                                                used.
                                                                         aliases: access_token
   state                          Choices:
   -                              • present ←                            Create or delete Lifecycle Hook. Present updates existing one or creates if not found.
                                  • absent
   transition                     Choices:
   - / required                   • autoscaling:EC2_INSTANCE_TERMINATING The instance state to which you want to attach the lifecycle hook.
                                  • autoscaling:EC2_INSTANCE_LAUNCHING
   validate_certs                 Choices:
   boolean                        • no                                   When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *ec2_asg_lifecycle_hook-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_asg_lifecycle_hook-examples*

 # Create / Update lifecycle hook
 - ec2_asg_lifecycle_hook:
     region: eu-central-1
     state: present
     autoscaling_group_name: example
     lifecycle_hook_name: example
     transition: autoscaling:EC2_INSTANCE_LAUNCHING
     heartbeat_timeout: 7000
     default_result: ABANDON

 # Delete lifecycle hook
 - ec2_asg_lifecycle_hook:
     region: eu-central-1
     state: absent
     autoscaling_group_name: example
     lifecycle_hook_name: example

STATUS                   *ec2_asg_lifecycle_hook-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Igor ‘Tsigankov’ Eyrich (@tsiganenok) <tsiganenok@gmail.com>

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_asg_lifecycle_hook-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_asg_lifecycle_hook_module.html
