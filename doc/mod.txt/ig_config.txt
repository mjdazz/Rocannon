SYNOPSIS                   *ig_config*

     • Manage the configuration database on an Ingate SBC.

REQUIREMENTS                   *ig_config-requirements*

   The below requirements are needed on the host that executes this module.

     • ingatesdk >= 1.0.6

PARAMETERS                   *ig_config-parameters*

       Parameter      Choices/Defaults                                                                            Comments
   add                  Choices:
   boolean              • no           Add a row to a table.
                        • yes
   client                              A dict object containing connection details.
   -
    address                            The hostname or IP address to the unit.
    string / required
    password                           The password for the REST API user.
    string / required
    port                               Which HTTP(S) port to connect to.
    integer
    scheme              Choices:
    string / required   • http         Which HTTP protocol to use.
                        • https
    timeout                            The timeout (in seconds) for REST API requests.
    integer
    username                           The username of the REST API user.
    string / required
    validate_certs      Choices:       Verify the unit's HTTPS certificate.
    boolean             • no           aliases: verify_ssl
                        • yes ←
    version             Choices:       REST API version.
    string              • v1 ←
   columns                             A dict containing column names/values.
   -
   delete               Choices:
   boolean              • no           Delete all rows in a table or a specific row.
                        • yes
   download             Choices:
   boolean              • no           Download the configuration database from the unit.
                        • yes
   factory              Choices:
   boolean              • no           Reset the preliminary configuration to its factory defaults.
                        • yes
   filename                            The name of the file to store the downloaded configuration in. Refer to the download option.
   -
   get                  Choices:
   boolean              • no           Return all rows in a table or a specific row.
                        • yes
   modify               Choices:
   boolean              • no           Modify a row in a table.
                        • yes
   no_response          Choices:
   boolean              • no           Expect no response when storing the preliminary configuration. Refer to the store option.
                        • yes
   path                                Where in the filesystem to store the downloaded configuration. Refer to the download option.
   -
   return_rowid         Choices:
   boolean              • no           Get rowid(s) from a table where the columns match.
                        • yes
   revert               Choices:
   boolean              • no           Reset the preliminary configuration.
                        • yes
   rowid                               A row id.
   integer
   store                Choices:
   boolean              • no           Store the preliminary configuration.
                        • yes
   store_download       Choices:
   boolean              • no ←         If the downloaded configuration should be stored on disk. Refer to the download option.
                        • yes
   table                               The name of the table.
   -

NOTES                   *ig_config-notes*

   Note

     • If store_download is set to True, and path and filename is omitted, the file will be stored in the current directory with an automatic filename.
     • This module requires that the Ingate Python SDK is installed on the host. To install the SDK use the pip command from your shell pip install ingatesdk.

EXAMPLES                   *ig_config-examples*

 - name: Add/remove DNS servers
   hosts: 192.168.1.1
   connection: local
   vars:
     client_rw:
       version: v1
       address: "{{ inventory_hostname }}"
       scheme: http
       username: alice
       password: foobar
   tasks:

   - name: Load factory defaults
     ig_config:
       client: "{{ client_rw }}"
       factory: true
     register: result
   - debug:
       var: result

   - name: Revert to last known applied configuration
     ig_config:
       client: "{{ client_rw }}"
       revert: true
     register: result
   - debug:
       var: result

   - name: Change the unit name
     ig_config:
       client: "{{ client_rw }}"
       modify: true
       table: misc.unitname
       columns:
         unitname: "Test Ansible"
     register: result
   - debug:
       var: result

   - name: Add a DNS server
     ig_config:
       client: "{{ client_rw }}"
       add: true
       table: misc.dns_servers
       columns:
         server: 192.168.1.21
     register: result
   - debug:
       var: result

   - name: Add a DNS server
     ig_config:
       client: "{{ client_rw }}"
       add: true
       table: misc.dns_servers
       columns:
         server: 192.168.1.22
     register: result
   - debug:
       var: result

   - name: Add a DNS server
     ig_config:
       client: "{{ client_rw }}"
       add: true
       table: misc.dns_servers
       columns:
         server: 192.168.1.23
     register: last_dns
   - debug:
       var: last_dns

   - name: Modify the last added DNS server
     ig_config:
       client: "{{ client_rw }}"
       modify: true
       table: misc.dns_servers
       rowid: "{{ last_dns['add'][0]['id'] }}"
       columns:
         server: 192.168.1.24
     register: result
   - debug:
       var: result

   - name: Return the last added DNS server
     ig_config:
       client: "{{ client_rw }}"
       get: true
       table: misc.dns_servers
       rowid: "{{ last_dns['add'][0]['id'] }}"
     register: result
   - debug:
       var: result

   - name: Remove last added DNS server
     ig_config:
       client: "{{ client_rw }}"
       delete: true
       table: misc.dns_servers
       rowid: "{{ last_dns['add'][0]['id'] }}"
     register: result
   - debug:
       var: result

   - name: Return the all rows from table misc.dns_servers
     ig_config:
       client: "{{ client_rw }}"
       get: true
       table: misc.dns_servers
     register: result
   - debug:
       var: result

   - name: Remove remaining DNS servers
     ig_config:
       client: "{{ client_rw }}"
       delete: true
       table: misc.dns_servers
     register: result
   - debug:
       var: result

   - name: Get rowid for interface eth0
     ig_config:
       client: "{{ client_rw }}"
       return_rowid: true
       table: network.local_nets
       columns:
         interface: eth0
     register: result
   - debug:
       var: result

   - name: Store the preliminary configuration
     ig_config:
       client: "{{ client_rw }}"
       store: true
     register: result
   - debug:
       var: result

   - name: Do backup of the configuration database
     ig_config:
       client: "{{ client_rw }}"
       download: true
       store_download: true
     register: result
   - debug:
       var: result

RETURN VALUES                   *ig_config-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key                    Returned                                                                                 Description
   add          when add is yes and success          A list containing information about the added row
   complex
      data                                           Column names/values
      complex   success                              Sample:
                                                     {'number': '2', 'server': '10.48.254.33'}
      href                                           The REST API URL to the added row
      string    success                              Sample:
                                                     http://192.168.1.1/api/v1/misc/dns_servers/2
      id                                             The row id
      integer   success                              Sample:
                                                     22
   delete       when delete is yes and success       A list containing information about the deleted row(s)
   complex
      data                                           Column names/values
      complex   success                              Sample:
                                                     {'number': '2', 'server': '10.48.254.33'}
      id                                             The row id
      integer   success                              Sample:
                                                     22
      table                                          The name of the table
      string    success                              Sample:
                                                     misc.dns_servers
   download     when download is yes and success     Configuration database and meta data
   complex
      config    success                              The configuration database
      string
      filename                                       A suggested name for the configuration
      string    success                              Sample:
                                                     testname_2018-10-01T214040.cfg
      mimetype                                       The mimetype
      string    success                              Sample:
                                                     application/x-config-database
   factory      when factory is yes and success      A command status message
   complex
      msg                                            The command status message
      string    success                              Sample:
                                                     reverted the configuration to the factory configuration.
   get          when get is yes and success          A list containing information about the row(s)
   complex
      data                                           Column names/values
      complex   success                              Sample:
                                                     {'number': '2', 'server': '10.48.254.33'}
      href                                           The REST API URL to the row
      string    success                              Sample:
                                                     http://192.168.1.1/api/v1/misc/dns_servers/1
      id                                             The row id
      integer   success                              Sample:
                                                     1
      table                                          The name of the table
      string    success                              Sample:
                                                     Testname
   modify       when modify is yes and success       A list containing information about the modified row
   complex
      data                                           Column names/values
      complex   success                              Sample:
                                                     {'number': '2', 'server': '10.48.254.33'}
      href                                           The REST API URL to the modified row
      string    success                              Sample:
                                                     http://192.168.1.1/api/v1/misc/dns_servers/1
      id                                             The row id
      integer   success                              Sample:
                                                     10
      table                                          The name of the table
      string    success                              Sample:
                                                     Testname
   return_rowid                                      The matched row id(s).
   list         when return_rowid is yes and success Sample:
                                                     [1, 3]
   revert       when revert is yes and success       A command status message
   complex
      msg                                            The command status message
      string    success                              Sample:
                                                     reverted the configuration to the last applied configuration.
   store        when store is yes and success        A command status message
   complex
      msg                                            The command status message
      string    success                              Sample:
                                                     Successfully applied and saved the configuration.

STATUS                   *ig_config-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ingate Systems AB (@ingatesystems)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ig_config-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ig_config_module.html
