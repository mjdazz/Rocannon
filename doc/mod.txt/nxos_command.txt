SYNOPSIS                   *nxos_command*

     • Sends an arbitrary command to an NXOS node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before
       returning or timing out if the condition is not met.

PARAMETERS                   *nxos_command-parameters*

      Parameter    Choices/Defaults                                                                             Comments
                                    The commands to send to the remote NXOS device. The resulting output from the command is returned. If the wait_for argument is provided, the module is not
   commands                         returned until the condition is satisfied or the number of retires as expired.
   - / required                     The commands argument also accepts an alternative form that allows for complex values that specify the command to run and the output format to return. This can
                                    be done on a command by command basis. The complex argument supports the keywords command and output where command is the command to run and output is one of
                                    'text' or 'json'.
   interval        Default:         Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditional, the interval indicates how to
   -               1                long to wait before trying the command again.
   match           Default:         The match argument is used in conjunction with the wait_for argument to specify the match policy. Valid values are all or any. If the value is set to all then
   -               "all"            all conditionals in the wait_for must be satisfied. If the value is set to any then only one of the values must be satisfied.
                                    Deprecated
                                    Starting with Ansible 2.5 we recommend using connection: network_cli.
                                    This option is only required if you are using NX-API.
   provider                         For more information please see the NXOS Platform Options guide.
   dictionary
                                    ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                    A dict object containing connection details.
    auth_pass                       Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the value is
    string                          not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
    added in 2.5.3
    authorize        Choices:       Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all commands
    boolean          • no ←         in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
    added in 2.5.3   • yes
    host                            Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address for
    string /                        the transport.
    required
    password                        Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or nxapi transports. If the
    string                          value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
    port           Default:         Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port value will default to the
    integer        "0 (use common   appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                   port)"
    ssh_keyfile                     Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli transport. If the value is not specified
    string                          in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
    timeout        Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
    integer        10               operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc).
    transport        Choices:       Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to the device over cli (ssh) or
    string /         • cli ←        nxapi.
    required         • nxapi
    use_proxy        Choices:
    boolean          • no           If no, the environment variables http_proxy and https_proxy will be ignored.
    added in 2.5     • yes ←
    use_ssl          Choices:
    boolean          • no ←         Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                     • yes
    username                        Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or the nxapi
    string                          authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be
                                    used instead.
    validate_certs   Choices:       If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the transport argument
    boolean          • no           is not nxapi, this value is ignored.
                     • yes ←
   retries         Default:         Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated
   -               10               against the wait_for conditionals.
   wait_for                         Specifies what to evaluate from the output of the command and what conditionals to apply. This argument will cause the task to wait for a particular conditional
   -                                to be true before moving forward. If the conditional is not true by the configured retries, the task fails. See examples.
                                    aliases: waitfor

NOTES                   *nxos_command-notes*

   Note

     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_command-examples*

 ---
 - name: run show version on remote devices
   nxos_command:
     commands: show version

 - name: run show version and check to see if output contains Cisco
   nxos_command:
     commands: show version
     wait_for: result[0] contains Cisco

 - name: run multiple commands on remote nodes
   nxos_command:
     commands:
       - show version
       - show interfaces

 - name: run multiple commands and evaluate the output
   nxos_command:
     commands:
       - show version
       - show interfaces
     wait_for:
       - result[0] contains Cisco
       - result[1] contains loopback0

 - name: run commands and specify the output format
   nxos_command:
     commands:
       - command: show version
         output: json

 - name: run commands that require answering a prompt
   nxos_command:
     commands:
       - configure terminal
       - command: 'no feature npv'
         prompt: 'Do you want to continue'
         answer: 'y'

RETURN VALUES                   *nxos_command-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key                                 Returned                                                                               Description
   failed_conditions                                                            The list of conditionals that have failed
   list              failed                                                     Sample:
                                                                                ['...', '...']
   stdout                                                                       The set of responses from the commands
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                ['...', '...']
   stdout_lines                                                                 The value of stdout split into a list
   list              always apart from low level errors (such as action plugin) Sample:
                                                                                [['...', '...'], ['...'], ['...']]

STATUS                   *nxos_command-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_command-red hat support*

     • Peter Sprygada (@privateip)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_command-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_command_module.html
