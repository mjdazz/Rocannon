SYNOPSIS                   *s3_lifecycle*

     • Manage s3 bucket lifecycle rules in AWS

REQUIREMENTS                   *s3_lifecycle-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • python >= 2.6
     • python-dateutil

PARAMETERS                   *s3_lifecycle-parameters*

               Parameter              Choices/Defaults                                                                    Comments
   aws_access_key                                      AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                              aliases: ec2_access_key, access_key
   aws_secret_key                                      AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                              aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs         Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to
   boolean                              • no ←         the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                         • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                             Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is
   string                                              required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if
                                                       any, is used.
   expiration_date                                     Indicates the lifetime of the objects that are subject to the rule by the date they will expire. The value must be ISO-8601 format, the time
   -                                                   must be midnight and a GMT timezone must be specified.
   expiration_days                                     Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
   -
   name                                                Name of the s3 bucket
   - / required
   noncurrent_version_expiration_days
   -                                                   Delete noncurrent versions this many days after they become noncurrent
   added in 2.6
   noncurrent_version_storage_class     Choices:
   -                                    • glacier ←    Transition noncurrent versions to this storage class
   added in 2.6                         • onezone_ia
                                        • standard_ia
   noncurrent_version_transition_days
   -                                                   Transition noncurrent versions this many days after they become noncurrent
   added in 2.6
   noncurrent_version_transitions                      A list of transition behaviors to be applied to noncurrent versions for the rule. Each storage class may be used only once. Each transition
   -                                                   behavior contains these elements transition_days storage_class
   added in 2.6
   prefix                                              Prefix identifying one or more objects to which the rule applies. If no prefix is specified, the rule will apply to the whole bucket.
   -
   profile                                             Uses a boto profile. Only works with boto >= 2.24.0.
   string
   purge_transitions                    Choices:       "Whether to replace all the current transition(s) with the new transition(s). When false, the provided transition(s) will be added, replacing
   boolean                              • no           transitions with the same storage_class. When true, existing transitions will be removed and replaced with the new transition(s)
   added in 2.6                         • yes ←
   region                                              The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                              http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                       aliases: aws_region, ec2_region
   rule_id                                             Unique identifier for the rule. The value cannot be longer than 255 characters. A unique value for the rule will be generated if no value is
   -                                                   provided.
   security_token                                      AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                              aliases: access_token
   state                                Choices:
   -                                    • present ←    Create or remove the lifecycle rule
                                        • absent
   status                               Choices:
   -                                    • enabled ←    If 'enabled', the rule is currently being applied. If 'disabled', the rule is not currently being applied.
                                        • disabled
                                        Choices:
   storage_class                        • glacier ←    The storage class to transition to. Currently there are two supported values - 'glacier', 'onezone_ia', or 'standard_ia'.
   -                                    • onezone_ia   The 'standard_ia' class is only being available from Ansible version 2.2.
                                        • standard_ia
   transition_date                                     Indicates the lifetime of the objects that are subject to the rule by the date they will transition to a different storage class. The value
   -                                                   must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified. If transition_days is not specified, this parameter
                                                       is required."
   transition_days                                     Indicates when, in days, an object transitions to a different storage class. If transition_date is not specified, this parameter is required.
   -
   transitions                                         A list of transition behaviors to be applied to the rule. Each storage class may be used only once. Each transition behavior may contain these
   -                                                   elements transition_days transition_date storage_class
   added in 2.6
   validate_certs                       Choices:
   boolean                              • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                        • yes ←

NOTES                   *s3_lifecycle-notes*

   Note

     • If specifying expiration time as days then transition time must also be specified in days
     • If specifying expiration time as a date then transition time must also be specified as a date
     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *s3_lifecycle-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 # Configure a lifecycle rule on a bucket to expire (delete) items with a prefix of /logs/ after 30 days
 - s3_lifecycle:
     name: mybucket
     expiration_days: 30
     prefix: /logs/
     status: enabled
     state: present

 # Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier after 7 days and then delete after 90 days
 - s3_lifecycle:
     name: mybucket
     transition_days: 7
     expiration_days: 90
     prefix: /logs/
     status: enabled
     state: present

 # Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier on 31 Dec 2020 and then delete on 31 Dec 2030.
 # Note that midnight GMT must be specified.
 # Be sure to quote your date strings
 - s3_lifecycle:
     name: mybucket
     transition_date: "2020-12-30T00:00:00.000Z"
     expiration_date: "2030-12-30T00:00:00.000Z"
     prefix: /logs/
     status: enabled
     state: present

 # Disable the rule created above
 - s3_lifecycle:
     name: mybucket
     prefix: /logs/
     status: disabled
     state: present

 # Delete the lifecycle rule created above
 - s3_lifecycle:
     name: mybucket
     prefix: /logs/
     state: absent

 # Configure a lifecycle rule to transition all backup files older than 31 days in /backups/ to standard infrequent access class.
 - s3_lifecycle:
     name: mybucket
     prefix: /backups/
     storage_class: standard_ia
     transition_days: 31
     state: present
     status: enabled

 # Configure a lifecycle rule to transition files to infrequent access after 30 days and glacier after 90
 - s3_lifecycle:
     name: mybucket
     prefix: /logs/
     state: present
     status: enabled
     transitions:
       - transition_days: 30
         storage_class: standard_ia
       - transition_days: 90
         storage_class: glacier

STATUS                   *s3_lifecycle-status*

     • This module is guaranteed to have backward compatible interface changes going forward. [stableinterface]
     • This module is maintained by the Ansible Community. [community]

     • Rob White (@wimnat)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *s3_lifecycle-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/s3_lifecycle_module.html
