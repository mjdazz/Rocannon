SYNOPSIS                   *ovirt_permission*

     • Module to manage permissions of users/groups in oVirt/RHV.

REQUIREMENTS                   *ovirt_permission-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.7
     • ovirt-engine-sdk-python >= 4.3.0

PARAMETERS                   *ovirt_permission-parameters*

        Parameter         Choices/Defaults                                                                           Comments
   auth
   dictionary /                              Dictionary with values needed to create HTTP/HTTPS connection to oVirt:
   required
                                             A PEM file containing the trusted CA certificates.
       ca_file                               The certificate presented by the server will be verified using these CA certificates.
       string                                If ca_file parameter is not set, system wide CA certificate store is used.
                                             Default value is set by OVIRT_CAFILE environment variable.
       headers                               Dictionary of HTTP headers to be added to each API call.
       dictionary
       hostname                              A string containing the hostname of the server, usually something like `server.example.com`.
       string                                Default value is set by OVIRT_HOSTNAME environment variable.
                                             Either url or hostname is required.
       insecure           Choices:
       boolean            • no               A boolean flag that indicates if the server TLS certificate and host name should be checked.
                          • yes
       kerberos           Choices:
       boolean            • no               A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
                          • yes
       password                              The password of the user.
       string /                              Default value is set by OVIRT_PASSWORD environment variable.
       required
       token                                 Token to be used instead of login with username/password.
       string                                Default value is set by OVIRT_TOKEN environment variable.
       url                                   A string containing the API URL of the server, usually something like `https://server.example.com/ovirt-engine/api`.
       string                                Default value is set by OVIRT_URL environment variable.
                                             Either url or hostname is required.
       username                              The name of the user, something like [email protected].
       string /                              Default value is set by OVIRT_USERNAME environment variable.
       required
   authz_name                                Authorization provider of the user/group.
   - / required                              aliases: domain
   fetch_nested           Choices:           If True the module will fetch additional data from the API.
   boolean                • no               It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying nested_attributes.
                          • yes
   group_name                                Name of the group to manage.
   -                                         Note that if group does not exist in the system this module will fail, you should ensure the group exists by using ovirt_groups module.
   namespace                                 Namespace of the authorization provider, where user/group resides.
   -
   nested_attributes                         Specifies list of the attributes which should be fetched from the API.
   list                                      This parameter apply only when fetch_nested is true.
   object_id                                 ID of the object where the permissions should be managed.
   -
   object_name                               Name of the object where the permissions should be managed.
   -
                          Choices:
                          • cluster
                          • cpu_profile
                          • data_center
                          • disk
                          • disk_profile
   object_type            • host             The object where the permissions should be managed.
   -                      • network
                          • storage_domain
                          • system
                          • template
                          • vm ←
                          • vm_pool
                          • vnic_profile
   poll_interval        Default:             Number of the seconds the module waits until another poll request on entity status is sent.
   integer              3
   quota_name
   -                                         Name of the quota to assign permission. Works only with object_type data_center.
   added in 2.7
   role                 Default:             Name of the role to be assigned to user/group on specific object.
   -                    "UserRole"
   state                  Choices:
   -                      • absent           Should the permission be present/absent.
                          • present ←
   timeout              Default:             The amount of time in seconds the module should wait for the instance to get into desired state.
   integer              180
   user_name                                 Username of the user to manage. In most LDAPs it's uid of the user, but in Active Directory you must specify UPN of the user.
   -                                         Note that if user does not exist in the system this module will fail, you should ensure the user exists by using ovirt_users module.
   wait                   Choices:
   boolean                • no               yes if the module should wait for the entity to get into desired state.
                          • yes ←

NOTES                   *ovirt_permission-notes*

   Note

     • In order to use this module you have to install oVirt Python SDK. To ensure it’s installed with correct version you can create the following task: pip: name=ovirt-engine-sdk-python
       version=4.3.0

EXAMPLES                   *ovirt_permission-examples*

 # Examples don't contain auth parameter for simplicity,
 # look at ovirt_auth module to see how to reuse authentication:

 - name: Add user user1 from authorization provider example.com-authz
   ovirt_permission:
     user_name: user1
     authz_name: example.com-authz
     object_type: vm
     object_name: myvm
     role: UserVmManager

 - name: Remove permission from user
   ovirt_permission:
     state: absent
     user_name: user1
     authz_name: example.com-authz
     object_type: cluster
     object_name: mycluster
     role: ClusterAdmin

 - name: Assign QuotaConsumer role to user
   ovirt_permissions:
     state: present
     user_name: user1
     authz_name: example.com-authz
     object_type: data_center
     object_name: mydatacenter
     quota_name: myquota
     role: QuotaConsumer

 - name: Assign QuotaConsumer role to group
   ovirt_permissions:
     state: present
     group_name: group1
     authz_name: example.com-authz
     object_type: data_center
     object_name: mydatacenter
     quota_name: myquota
     role: QuotaConsumer

RETURN VALUES                   *ovirt_permission-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key      Returned                                                                                  Description
              On success ID of the permission which is managed
   id         if         Sample:
   string     permission 7de90f31-222c-436c-a1ca-7e655bd5b60c
              is found.
              On success
   permission if         Dictionary of all the permission attributes. Permission attributes can be found on your oVirt/RHV instance at following url:
   dictionary permission http://ovirt.github.io/ovirt-engine-api-model/master/#types/permission.
              is found.

STATUS                   *ovirt_permission-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Ondra Machacek (@machacekondra)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ovirt_permission-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ovirt_permission_module.html
