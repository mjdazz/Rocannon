SYNOPSIS                   *ec2_vpc_endpoint*

     • Creates AWS VPC endpoints.
     • Deletes AWS VPC endpoints.
     • This module support check mode.

REQUIREMENTS                   *ec2_vpc_endpoint-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • python >= 2.6

PARAMETERS                   *ec2_vpc_endpoint-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   client_token                                  Optional client token to ensure idempotency
   -
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   policy                                        A properly formatted json policy as string, see https://github.com/ansible/ansible/issues/7005#issuecomment-42894813. Cannot be used with
   -                                             policy_file.
                                                 Option when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service.
                                                 The path to the properly json formatted policy file, see https://github.com/ansible/ansible/issues/7005#issuecomment-42894813 on how to use it
   policy_file                                   properly. Cannot be used with policy.
   -                                             Option when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service.
                                                 aliases: policy_path
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   route_table_ids                               List of one or more route table ids to attach to the endpoint. A route is added to the route table with the destination of the endpoint if provided.
   -
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   service                                       An AWS supported vpc endpoint service. Use the ec2_vpc_endpoint_info module to describe the supported endpoint services.
   -                                             Required when creating an endpoint.
   state                          Choices:       present to ensure resource is created.
   -                              • present ←    absent to remove resource
                                  • absent
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←
   vpc_endpoint_id                               One or more vpc endpoint ids to remove from the AWS account
   -
   vpc_id                                        Required when creating a VPC endpoint.
   -
   wait                           Choices:       When specified, will wait for either available status for state present. Unfortunately this is ignored for delete actions due to a difference in
   boolean                        • no ←         behaviour from AWS.
                                  • yes
   wait_timeout                 Default:         Used in conjunction with wait. Number of seconds to wait for status. Unfortunately this is ignored for delete actions due to a difference in
   -                            320              behaviour from AWS.

NOTES                   *ec2_vpc_endpoint-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_vpc_endpoint-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 - name: Create new vpc endpoint with a json template for policy
   ec2_vpc_endpoint:
     state: present
     region: ap-southeast-2
     vpc_id: vpc-12345678
     service: com.amazonaws.ap-southeast-2.s3
     policy: " {{ lookup( 'template', 'endpoint_policy.json.j2') }} "
     route_table_ids:
       - rtb-12345678
       - rtb-87654321
   register: new_vpc_endpoint

 - name: Create new vpc endpoint the default policy
   ec2_vpc_endpoint:
     state: present
     region: ap-southeast-2
     vpc_id: vpc-12345678
     service: com.amazonaws.ap-southeast-2.s3
     route_table_ids:
       - rtb-12345678
       - rtb-87654321
   register: new_vpc_endpoint

 - name: Create new vpc endpoint with json file
   ec2_vpc_endpoint:
     state: present
     region: ap-southeast-2
     vpc_id: vpc-12345678
     service: com.amazonaws.ap-southeast-2.s3
     policy_file: "{{ role_path }}/files/endpoint_policy.json"
     route_table_ids:
       - rtb-12345678
       - rtb-87654321
   register: new_vpc_endpoint

 - name: Delete newly created vpc endpoint
   ec2_vpc_endpoint:
     state: absent
     nat_gateway_id: "{{ new_vpc_endpoint.result['VpcEndpointId'] }}"
     region: ap-southeast-2

RETURN VALUES                   *ec2_vpc_endpoint-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key    Returned                                                                                   Description
                      The resulting endpoints from the module call
   endpoints          Sample:
   list      success  [{'creation_timestamp': '2017-02-20T05:04:15+00:00', 'policy_document': {'Id': 'Policy1450910922815', 'Statement': [{'Action': 's3:"', 'Effect': 'Allow', 'Principal': '"',
                      'Resource': ['arn:aws:s3:::"/"', 'arn:aws:s3:::"'], 'Sid': 'Stmt1450910920641'}], 'Version': '2012-10-17'}, 'route_table_ids': ['rtb-abcd1234'], 'service_name':
                      'com.amazonaws.ap-southeast-2.s3', 'vpc_endpoint_id': 'vpce-a1b2c3d4', 'vpc_id': 'vpc-abbad0d0'}]

STATUS                   *ec2_vpc_endpoint-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Karen Cheng (@Etherdaemon)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_vpc_endpoint-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_vpc_endpoint_module.html
