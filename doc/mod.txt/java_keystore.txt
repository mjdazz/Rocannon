SYNOPSIS                   *java_keystore*

     • Create or delete a Java keystore in JKS format for a given certificate.

REQUIREMENTS                   *java_keystore-requirements*

   The below requirements are needed on the host that executes this module.

     • openssl
     • keytool

PARAMETERS                   *java_keystore-parameters*

    Parameter   Choices/Defaults                                                                               Comments
   certificate                   Certificate that should be used to create the key store.
   - / required
   dest                          Absolute path where the jks should be generated.
   - / required
   force          Choices:
   boolean        • no ←         Key store will be created even if it already exists.
                  • yes
   group                         Name of the group that should own jks file.
   -
   mode                          Mode the file should be.
   -
   name                          Name of the certificate.
   - / required
   owner                         Name of the user that should own jks file.
   -
   password                      Password that should be used to secure the key store.
   - / required
   private_key                   Private key that should be used to create the key store.
   - / required

EXAMPLES                   *java_keystore-examples*

 # Create a key store for the given certificate (inline)
 - java_keystore:
     name: example
     certificate: |
       -----BEGIN CERTIFICATE-----
       h19dUZ2co2fI/ibYiwxWk4aeNE6KWvCaTQOMQ8t6Uo2XKhpL/xnjoAgh1uCQN/69
       MG+34+RhUWzCfdZH7T8/qDxJw2kEPKluaYh7KnMsba+5jHjmtzix5QIDAQABo4IB
       -----END CERTIFICATE-----
     private_key: |
       -----BEGIN RSA PRIVATE KEY-----
       DBVFTEVDVFJJQ0lURSBERSBGUkFOQ0UxFzAVBgNVBAsMDjAwMDIgNTUyMDgxMzE3
       GLlDNMw/uHyME7gHFsqJA7O11VY6O5WQ4IDP3m/s5ZV6s+Nn6Lerz17VZ99
       -----END RSA PRIVATE KEY-----
     password: changeit
     dest: /etc/security/keystore.jks

 # Create a key store for the given certificate (lookup)
 - java_keystore:
     name: example
     certificate: "{{lookup('file', '/path/to/certificate.crt') }}"
     private_key: "{{lookup('file', '/path/to/private.key') }}"
     password: changeit
     dest: /etc/security/keystore.jks

RETURN VALUES                   *java_keystore-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key        Returned                                                                                    Description
   cmd                         Executed command to get action done
   string  changed and failure Sample:
                               openssl x509 -noout -in /tmp/cert.crt -fingerprint -sha256
   msg                         Output from stdout of keytool/openssl command after execution of given command or an error.
   string  changed and failure Sample:
                               Unable to find the current certificate fingerprint in ...
   rc                          keytool/openssl command execution return value
   integer changed and failure Sample:
                               0

STATUS                   *java_keystore-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Guillaume Grossetie (@Mogztter)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *java_keystore-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/java_keystore_module.html
