SYNOPSIS                   *manageiq_user*

     • The manageiq_user module supports adding, updating and deleting users in ManageIQ.

REQUIREMENTS                   *manageiq_user-requirements*

   The below requirements are needed on the host that executes this module.

     • manageiq-client https://github.com/ManageIQ/manageiq-api-client-python/

PARAMETERS                   *manageiq_user-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   email                                  The users' E-mail address.
   -
   group                                  The name of the group to which the user belongs.
   -
   manageiq_connection                    ManageIQ connection configuration information.
   dictionary / required
      ca_cert                             The path to a CA bundle file or directory with certificates. defaults to None.
      path                                aliases: ca_bundle_path
      password                            ManageIQ password. MIQ_PASSWORD env var if set. otherwise, required if no token is passed in.
      string
      token                               ManageIQ token. MIQ_TOKEN env var if set. otherwise, required if no username or password is passed in.
      string
      url                                 ManageIQ environment url. MIQ_URL env var if set. otherwise, it is required to pass it.
      string / required
      username                            ManageIQ username. MIQ_USERNAME env var if set. otherwise, required if no token is passed in.
      string
      validate_certs       Choices:       Whether SSL certificates should be verified for HTTPS requests. defaults to True.
      boolean              • no           aliases: verify_ssl
                           • yes ←
   name                                   The users' full name.
   -
   password                               The users' password.
   -
   state                   Choices:
   -                       • absent       absent - user should not exist, present - user should be.
                           • present ←
   update_password         Choices:
   -                       • always ←     always will update passwords unconditionally. on_create will only set the password for a newly created user.
   added in 2.5            • on_create
   userid                                 The unique userid in manageiq, often mentioned as username.
   - / required

EXAMPLES                   *manageiq_user-examples*

 - name: Create a new user in ManageIQ
   manageiq_user:
     userid: 'jdoe'
     name: 'Jane Doe'
     password: 'VerySecret'
     group: 'EvmGroup-user'
     email: '[email protected]'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

 - name: Create a new user in ManageIQ using a token
   manageiq_user:
     userid: 'jdoe'
     name: 'Jane Doe'
     password: 'VerySecret'
     group: 'EvmGroup-user'
     email: '[email protected]'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       token: 'sometoken'
       validate_certs: False

 - name: Delete a user in ManageIQ
   manageiq_user:
     state: 'absent'
     userid: 'jdoe'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

 - name: Delete a user in ManageIQ using a token
   manageiq_user:
     state: 'absent'
     userid: 'jdoe'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       token: 'sometoken'
       validate_certs: False

 - name: Update email of user in ManageIQ
   manageiq_user:
     userid: 'jdoe'
     email: '[email protected]'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       username: 'admin'
       password: 'smartvm'
       validate_certs: False

 - name: Update email of user in ManageIQ using a token
   manageiq_user:
     userid: 'jdoe'
     email: '[email protected]'
     manageiq_connection:
       url: 'http://127.0.0.1:3000'
       token: 'sometoken'
       validate_certs: False

STATUS                   *manageiq_user-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Daniel Korn (@dkorn)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *manageiq_user-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/manageiq_user_module.html
