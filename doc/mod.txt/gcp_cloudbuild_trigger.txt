SYNOPSIS                   *gcp_cloudbuild_trigger*

     • Configuration for an automated build in response to source repository changes.

REQUIREMENTS                   *gcp_cloudbuild_trigger-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_cloudbuild_trigger-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   build                                       Contents of the build template. Either a filename or build template must be provided.
   dictionary
                                               A list of images to be pushed upon the successful completion of all build steps.
        images                                 The images are pushed using the builder service account's credentials.
        list                                   The digests of the pushed images will be stored in the Build resource's results field.
                                               If any of the images fail to be pushed, the build status is marked FAILURE.
        steps                                  The operations to be performed on the workspace.
        list
            args                               A list of arguments that will be presented to the step when it is started.
            list                               If the image used to run the step's container has an entrypoint, the args are used as arguments to that entrypoint. If the image does not define an
                                               entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.
                                               Working directory to use when running this step's container.
            dir                                If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working
            string                             directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified.
                                               If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the
                                               step's execution.
            entrypoint                         Entrypoint to be used instead of the build step image's default entrypoint.
            string                             If unset, the image's default entrypoint is used .
            env                                A list of environment variable definitions to be used when running a step.
            list                               The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
            id                                 Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.
            string
                                               The name of the container image that will run this particular build step.
                                               If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using
                                               the builder service account's credentials if necessary.
            name                               The Docker daemon's cache will already have the latest versions of all of the officially supported build steps
            string                             (https://github.com/GoogleCloudPlatform/cloud-builders).
                                               The Docker daemon will also have cached many of the layers for some popular images, like "ubuntu", "debian", but they will be refreshed at the time
                                               you attempt to use them.
                                               If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later
                                               build step.
            secret_env                         A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's
            list                               `Secret`.
            timeout                            Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes
            string                             or the build itself times out.
            timing                             Output only. Stores timing information for executing this build step.
            string
                                               List of volumes to mount into the build step.
            volumes                            Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are
            list                               discarded.
                                               Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.
                  name                         Name of the volume to mount.
                  string                       Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.
                  path                         Path at which to mount the volume.
                  string                       Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.
            wait_for                           The ID(s) of the step(s) that this build step depends on.
            list                               This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start
                                               when all previous build steps in the `Build.Steps` list have completed successfully.
        tags                                   Tags for annotation of a Build. These are not docker tags.
        list
   description                                 Human-readable description of the trigger.
   string
   disabled                   Choices:
   boolean                    • no             Whether the trigger is disabled or not. If true, the trigger will never result in a build.
                              • yes
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
   filename                                    Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.
   string
   id                                          The unique identifier for the trigger.
   string
                                               ignoredFiles and includedFiles are file glob matches using http://godoc/pkg/path/filepath#Match extended with support for `""`.
   ignored_files                               If ignoredFiles and changed files are both empty, then they are not used to determine whether or not to trigger a build.
   list                                        If ignoredFiles is not empty, then we ignore any files that match any of the ignored_file globs. If the change has no files that are outside of the
                                               ignoredFiles globs, then we do not trigger a build.
                                               ignoredFiles and includedFiles are file glob matches using http://godoc/pkg/path/filepath#Match extended with support for `""`.
   included_files                              If any of the files altered in the commit pass the ignoredFiles filter and includedFiles is empty, then as far as this filter is concerned, we should
   list                                        trigger the build.
                                               If any of the files altered in the commit pass the ignoredFiles filter and includedFiles is not empty, then we make sure that at least one of those
                                               files matches a includedFiles glob. If not, then we do not trigger a build.
   project                                     The Google Cloud Platform project to use.
   string
   scopes                                      Array of scopes to be used.
   list
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                      Choices:
   string                     • present ←      Whether the given object should exist in GCP
                              • absent
   substitutions                               Substitutions data for Build resource.
   dictionary
   trigger_template                            Template describing the types of source changes to trigger a build.
   dictionary                                  Branch and tag names in trigger templates are interpreted as regular expressions. Any branch or tag change that matches that regular expression will
                                               trigger a build.
        branch_name                            Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        string
        commit_sha                             Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        string
        dir                                    Directory, relative to the source root, in which to run the build.
        string                                 This must be a relative path. If a step's dir is specified and is an absolute path, this value is ignored for that step's execution.
        project_id                             ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.
        string
        repo_name           Default:           Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
        string              "default"
        tag_name                               Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        string

NOTES                   *gcp_cloudbuild_trigger-notes*

   Note

     • API Reference: https://cloud.google.com/cloud-build/docs/api/reference/rest/
     • Automating builds using build triggers: https://cloud.google.com/cloud-build/docs/running-builds/automate-builds
     • The id for this resource is created by the API after you create the resource the first time. If you want to manage this resource after creation, you’ll have to copy the generated id into the
       playbook. If you do not, new triggers will be created on subsequent runs.
     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_cloudbuild_trigger-examples*

 - name: create a repository
   gcp_sourcerepo_repository:
     name: projects/{{ gcp_project }}/repos/{{ resource_name }}
     project: "{{ gcp_project }}"
     auth_kind: "{{ gcp_cred_kind }}"
     service_account_file: "{{ gcp_cred_file }}"
     state: present

 - name: create a trigger
   gcp_cloudbuild_trigger:
     trigger_template:
       branch_name: master
       project_id: test_project
       repo_name: test_object
     filename: cloudbuild.yaml
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_cloudbuild_trigger-return values*

   Common return values are documented here, the following are the fields unique to this module:

         Key       Returned                                                                                Description
   build           success  Contents of the build template. Either a filename or build template must be provided.
   complex
                            A list of images to be pushed upon the successful completion of all build steps.
      images       success  The images are pushed using the builder service account's credentials.
      list                  The digests of the pushed images will be stored in the Build resource's results field.
                            If any of the images fail to be pushed, the build status is marked FAILURE.
      steps        success  The operations to be performed on the workspace.
      complex
        args                A list of arguments that will be presented to the step when it is started.
        list       success  If the image used to run the step's container has an entrypoint, the args are used as arguments to that entrypoint. If the image does not define an entrypoint, the first
                            element in args is used as the entrypoint, and the remainder will be used as arguments.
                            Working directory to use when running this step's container.
        dir        success  If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which
        string              case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified.
                            If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution.
        entrypoint success  Entrypoint to be used instead of the build step image's default entrypoint.
        string              If unset, the image's default entrypoint is used .
        env        success  A list of environment variable definitions to be used when running a step.
        list                The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
        id         success  Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.
        string
                            The name of the container image that will run this particular build step.
                            If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service
        name                account's credentials if necessary.
        string     success  The Docker daemon's cache will already have the latest versions of all of the officially supported build steps (https://github.com/GoogleCloudPlatform/cloud-builders).
                            The Docker daemon will also have cached many of the layers for some popular images, like "ubuntu", "debian", but they will be refreshed at the time you attempt to use
                            them.
                            If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step.
        secretEnv  success  A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.
        list
        timeout    success  Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself
        string              times out.
        timing     success  Output only. Stores timing information for executing this build step.
        string
        volumes             List of volumes to mount into the build step.
        complex    success  Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded.
                            Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.
           name    success  Name of the volume to mount.
           string           Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.
           path    success  Path at which to mount the volume.
           string           Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.
        waitFor             The ID(s) of the step(s) that this build step depends on.
        list       success  This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous
                            build steps in the `Build.Steps` list have completed successfully.
      tags         success  Tags for annotation of a Build. These are not docker tags.
      list
   createTime      success  Time when the trigger was created.
   string
   description     success  Human-readable description of the trigger.
   string
   disabled        success  Whether the trigger is disabled or not. If true, the trigger will never result in a build.
   boolean
   filename        success  Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.
   string
   id              success  The unique identifier for the trigger.
   string
                            ignoredFiles and includedFiles are file glob matches using http://godoc/pkg/path/filepath#Match extended with support for `""`.
   ignoredFiles    success  If ignoredFiles and changed files are both empty, then they are not used to determine whether or not to trigger a build.
   list                     If ignoredFiles is not empty, then we ignore any files that match any of the ignored_file globs. If the change has no files that are outside of the ignoredFiles globs,
                            then we do not trigger a build.
                            ignoredFiles and includedFiles are file glob matches using http://godoc/pkg/path/filepath#Match extended with support for `""`.
   includedFiles   success  If any of the files altered in the commit pass the ignoredFiles filter and includedFiles is empty, then as far as this filter is concerned, we should trigger the build.
   list                     If any of the files altered in the commit pass the ignoredFiles filter and includedFiles is not empty, then we make sure that at least one of those files matches a
                            includedFiles glob. If not, then we do not trigger a build.
   substitutions   success  Substitutions data for Build resource.
   dictionary
   triggerTemplate success  Template describing the types of source changes to trigger a build.
   complex                  Branch and tag names in trigger templates are interpreted as regular expressions. Any branch or tag change that matches that regular expression will trigger a build.
      branchName   success  Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
      string
      commitSha    success  Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
      string
      dir          success  Directory, relative to the source root, in which to run the build.
      string                This must be a relative path. If a step's dir is specified and is an absolute path, this value is ignored for that step's execution.
      projectId    success  ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.
      string
      repoName     success  Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
      string
      tagName      success  Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
      string

STATUS                   *gcp_cloudbuild_trigger-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_cloudbuild_trigger-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_cloudbuild_trigger_module.html
