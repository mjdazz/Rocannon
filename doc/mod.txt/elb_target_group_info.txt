SYNOPSIS                   *elb_target_group_info*

     • Gather information about ELB target groups in AWS
     • This module was called elb_target_group_facts before Ansible 2.9. The usage did not change.

   Aliases: elb_target_group_facts

REQUIREMENTS                   *elb_target_group_info-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • python >= 2.6

PARAMETERS                   *elb_target_group_info-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   collect_targets_health         Choices:
   boolean                        • no ←         When set to "yes", output contains targets health description
   added in 2.8                   • yes
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   load_balancer_arn                             The Amazon Resource Name (ARN) of the load balancer.
   -
   names                                         The names of the target groups.
   -
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   target_group_arns                             The Amazon Resource Names (ARN) of the target groups.
   -
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *elb_target_group_info-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *elb_target_group_info-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 # Gather information about all target groups
 - elb_target_group_info:

 # Gather information about the target group attached to a particular ELB
 - elb_target_group_info:
     load_balancer_arn: "arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff"

 # Gather information about a target groups named 'tg1' and 'tg2'
 - elb_target_group_info:
     names:
       - tg1
       - tg2

RETURN VALUES                   *elb_target_group_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

                     Key                            Returned                                                                    Description
   target_groups                           always                     a list of target groups
   complex
     deregistration_delay_timeout_seconds                             The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused.
     integer                               always                     Sample:
                                                                      300
     health_check_interval_seconds                                    The approximate amount of time, in seconds, between health checks of an individual target.
     integer                               always                     Sample:
                                                                      30
     health_check_path                                                The destination for the health check request.
     string                                always                     Sample:
                                                                      /index.html
     health_check_port                                                The port to use to connect with the target.
     string                                always                     Sample:
                                                                      traffic-port
     health_check_protocol                                            The protocol to use to connect with the target.
     string                                always                     Sample:
                                                                      HTTP
     health_check_timeout_seconds                                     The amount of time, in seconds, during which no response means a failed health check.
     integer                               always                     Sample:
                                                                      5
     healthy_threshold_count                                          The number of consecutive health checks successes required before considering an unhealthy target healthy.
     integer                               always                     Sample:
                                                                      5
     load_balancer_arns                    always                     The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.
     list
     matcher                                                          The HTTP codes to use when checking for a successful response from a target.
     dictionary                            always                     Sample:
                                                                      {'http_code': '200'}
     port                                                             The port on which the targets are listening.
     integer                               always                     Sample:
                                                                      80
     protocol                                                         The protocol to use for routing traffic to the targets.
     string                                always                     Sample:
                                                                      HTTP
     stickiness_enabled                                               Indicates whether sticky sessions are enabled.
     boolean                               always                     Sample:
                                                                      True
     stickiness_lb_cookie_duration_seconds                            Indicates whether sticky sessions are enabled.
     integer                               always                     Sample:
                                                                      86400
     stickiness_type                                                  The type of sticky sessions.
     string                                always                     Sample:
                                                                      lb_cookie
     tags                                                             The tags attached to the target group.
     dictionary                            always                     Sample:
                                                                      { 'Tag': 'Example' }
     target_group_arn                                                 The Amazon Resource Name (ARN) of the target group.
     string                                always                     Sample:
                                                                      arn:aws:elasticloadbalancing:ap-southeast-2:01234567890:targetgroup/mytargetgroup/aabbccddee0044332211
     target_group_name                                                The name of the target group.
     string                                always                     Sample:
                                                                      mytargetgroup
     targets_health_description            when
     complex                               collect_targets_health is  Targets health description.
                                           enabled
              health_check_port                                       The port to check target health.
              string                       always                     Sample:
                                                                      80
              target                       always                     The target metadata.
              complex
                          id                                          The ID of the target.
                          string           always                     Sample:
                                                                      i-0123456789
                          port                                        The port to use to connect with the target.
                          integer          always                     Sample:
                                                                      80
              target_health                always                     The target health status.
              complex
                          state                                       The state of the target health.
                          string           always                     Sample:
                                                                      healthy
     unhealthy_threshold_count                                        The number of consecutive health check failures required before considering the target unhealthy.
     integer                               always                     Sample:
                                                                      2
     vpc_id                                                           The ID of the VPC for the targets.
     string                                always                     Sample:
                                                                      vpc-0123456

STATUS                   *elb_target_group_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Rob White (@wimnat)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *elb_target_group_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/elb_target_group_info_module.html
