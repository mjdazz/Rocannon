SYNOPSIS                   *ec2_vpc_nacl*

     • Read the AWS documentation for Network ACLS https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html

REQUIREMENTS                   *ec2_vpc_nacl-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • json
     • python >= 2.6

PARAMETERS                   *ec2_vpc_nacl-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
                                                 A list of rules for outgoing traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one
   egress                       Default:         of ['tcp', 'udp', 'icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 network range to allow or deny, the ICMP type (-1
   -                            []               means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP
                                                 or UDP protocols. See examples.
                                                 List of rules for incoming traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one of
   ingress                      Default:         ['tcp', 'udp', 'icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 network range to allow or deny, the ICMP type (-1
   -                            []               means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP
                                                 or UDP protocols. See examples.
   nacl_id                                       NACL id identifying a network ACL.
   -                                             One and only one of the name or nacl_id is required.
   added in 2.4
   name                                          Tagged name identifying a network ACL.
   -                                             One and only one of the name or nacl_id is required.
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:       Creates or modifies an existing NACL
   -                              • present ←    Deletes a NACL and reassociates subnets to the default NACL
                                  • absent
   subnets                                       The list of subnets that should be associated with the network ACL.
   -                                             Must be specified as a list
                                                 Each subnet can be specified as subnet ID, or its tagged name.
   tags                                          Dictionary of tags to look for and apply when creating a network ACL.
   -
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←
   vpc_id                                        VPC id of the requesting VPC.
   -                                             Required when state present.

NOTES                   *ec2_vpc_nacl-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ec2_vpc_nacl-examples*

 # Complete example to create and delete a network ACL
 # that allows SSH, HTTP and ICMP in, and all traffic out.
 - name: "Create and associate production DMZ network ACL with DMZ subnets"
   ec2_vpc_nacl:
     vpc_id: vpc-12345678
     name: prod-dmz-nacl
     region: ap-southeast-2
     subnets: ['prod-dmz-1', 'prod-dmz-2']
     tags:
       CostCode: CC1234
       Project: phoenix
       Description: production DMZ
     ingress:
         # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,
         #                                             port from, port to
         - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
         - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
         - [300, 'icmp', 'allow', '0.0.0.0/0', 0, 8]
     egress:
         - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
     state: 'present'

 - name: "Remove the ingress and egress rules - defaults to deny all"
   ec2_vpc_nacl:
     vpc_id: vpc-12345678
     name: prod-dmz-nacl
     region: ap-southeast-2
     subnets:
       - prod-dmz-1
       - prod-dmz-2
     tags:
       CostCode: CC1234
       Project: phoenix
       Description: production DMZ
     state: present

 - name: "Remove the NACL subnet associations and tags"
   ec2_vpc_nacl:
     vpc_id: 'vpc-12345678'
     name: prod-dmz-nacl
     region: ap-southeast-2
     state: present

 - name: "Delete nacl and subnet associations"
   ec2_vpc_nacl:
     vpc_id: vpc-12345678
     name: prod-dmz-nacl
     state: absent

 - name: "Delete nacl by its id"
   ec2_vpc_nacl:
     nacl_id: acl-33b4ee5b
     state: absent

RETURN VALUES                   *ec2_vpc_nacl-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   task       success  The result of the create, or delete action.
   dictionary

STATUS                   *ec2_vpc_nacl-status*

     • This module is guaranteed to have backward compatible interface changes going forward. [stableinterface]
     • This module is maintained by the Ansible Community. [community]

     • Mike Mochan (@mmochan)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ec2_vpc_nacl-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ec2_vpc_nacl_module.html
