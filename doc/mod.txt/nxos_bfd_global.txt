SYNOPSIS                   *nxos_bfd_global*

     • Manages Bidirectional Forwarding Detection (BFD) global-level configuration.

PARAMETERS                   *nxos_bfd_global-parameters*

         Parameter       Choices/Defaults                                                                          Comments
   echo_interface                         Loopback interface used for echo frames.
   string                                 Valid values are loopback interface name or 'deleted'.
                                          Not supported on N5K/N6K
   echo_rx_interval                       BFD Echo receive interval in milliseconds.
   integer
   fabricpath_interval                    BFD fabricpath interval timer values.
   dictionary                             Value must be a dict defining values for keys (tx, min_rx, and multiplier).
   fabricpath_slow_timer                  BFD fabricpath slow rate timer in milliseconds.
   integer
   fabricpath_vlan                        BFD fabricpath control vlan.
   integer
   interval                               BFD interval timer values.
   dictionary                             Value must be a dict defining values for keys (tx, min_rx, and multiplier)
   ipv4_echo_rx_interval                  BFD IPv4 session echo receive interval in milliseconds.
   integer
   ipv4_interval                          BFD IPv4 interval timer values.
   dictionary                             Value must be a dict defining values for keys (tx, min_rx, and multiplier).
   ipv4_slow_timer                        BFD IPv4 slow rate timer in milliseconds.
   integer
   ipv6_echo_rx_interval                  BFD IPv6 session echo receive interval in milliseconds.
   integer
   ipv6_interval                          BFD IPv6 interval timer values.
   dictionary                             Value must be a dict defining values for keys (tx, min_rx, and multiplier).
   ipv6_slow_timer                        BFD IPv6 slow rate timer in milliseconds.
   integer
                                          Deprecated
                                          Starting with Ansible 2.5 we recommend using connection: network_cli.
                                          This option is only required if you are using NX-API.
   provider                               For more information please see the NXOS Platform Options guide.
   dictionary
                                          ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                          A dict object containing connection details.
       auth_pass                          Specifies the password to use if required to enter privileged mode on the remote device. If authorize is false, then this argument does nothing. If the
       string                             value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead.
       added in 2.5.3
       authorize           Choices:       Instructs the module to enter privileged mode on the remote device before sending any commands. If not specified, the device will attempt to execute all
       boolean             • no ←         commands in non-privileged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead.
       added in 2.5.3      • yes
       host                               Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination
       string / required                  address for the transport.
       password                           Specifies the password to use to authenticate the connection to the remote device. This is a common argument used for either cli or nxapi transports. If
       string                             the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
       port              Default:         Specifies the port to use when building the connection to the remote device. This value applies to either cli or nxapi. The port value will default to the
       integer           "0 (use common   appropriate transport common port if none is provided in the task. (cli=22, http=80, https=443).
                         port)"
       ssh_keyfile                        Specifies the SSH key to use to authenticate the connection to the remote device. This argument is only used for the cli transport. If the value is not
       string                             specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
       timeout           Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
       integer           10               operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc).
       transport           Choices:       Configures the transport connection to use when connecting to the remote device. The transport argument supports connectivity to the device over cli (ssh)
       string / required   • cli ←        or nxapi.
                           • nxapi
       use_proxy           Choices:
       boolean             • no           If no, the environment variables http_proxy and https_proxy will be ignored.
       added in 2.5        • yes ←
       use_ssl             Choices:
       boolean             • no ←         Configures the transport to use SSL if set to yes only when the transport=nxapi, otherwise this value is ignored.
                           • yes
       username                           Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate either the CLI login or the nxapi
       string                             authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will
                                          be used instead.
       validate_certs      Choices:       If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. If the transport
       boolean             • no           argument is not nxapi, this value is ignored.
                           • yes ←
   slow_timer                             BFD slow rate timer in milliseconds.
   integer
   startup_timer                          BFD delayed startup timer in seconds.
   integer                                Not supported on N5K/N6K/N7K

NOTES                   *nxos_bfd_global-notes*

   Note

     • Tested against NXOSv 9.2(2)
     • BFD global will automatically enable ‘feature bfd’ if it is disabled.
     • BFD global does not have a ‘state’ parameter. All of the BFD commands are unique and are defined if ‘feature bfd’ is enabled.
     • For information on using CLI and NX-API see the NXOS Platform Options guide
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *nxos_bfd_global-examples*

 - nxos_bfd_global:
     echo_interface: Ethernet1/2
     echo_rx_interval: 50
     interval:
       tx: 50
       min_rx: 50
       multiplier: 4

RETURN VALUES                   *nxos_bfd_global-return values*

   Common return values are documented here, the following are the fields unique to this module:

   Key  Returned                                                                                     Description
   cmds          commands sent to the device
   list always   Sample:
                 ['bfd echo-interface loopback1', 'bfd slow-timer 2000']

STATUS                   *nxos_bfd_global-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *nxos_bfd_global-red hat support*

     • Chris Van Heuveln (@chrisvanheuveln)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *nxos_bfd_global-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/nxos_bfd_global_module.html
