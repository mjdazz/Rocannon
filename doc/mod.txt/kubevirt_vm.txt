SYNOPSIS                   *kubevirt_vm*

     • Use Openshift Python SDK to manage the state of KubeVirt virtual machines.

REQUIREMENTS                   *kubevirt_vm-requirements*

   The below requirements are needed on the host that executes this module.

     • openshift >= 0.8.2
     • python >= 2.7

PARAMETERS                   *kubevirt_vm-parameters*

        Parameter       Choices/Defaults                                                                            Comments
   affinity
   dictionary                              Describes node affinity scheduling rules for the vm.
   added in 2.9
                                           If the affinity requirements specified by this field are not met at scheduling time, the vm will not be scheduled onto the node. If the affinity
          hard                             requirements specified by this field cease to be met at some point during vm execution (e.g. due to a vm label update), the system may or may not try to
          dictionary                       eventually evict the vm from its node. When there are multiple elements, the lists of nodes corresponding to each term are intersected, i.e. all terms
                                           must be satisfied.
                                           The scheduler will prefer to schedule vms to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates
          soft                             one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the
          dictionary                       scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this
                                           field and adding weight to the sum if the node has vms which matches the corresponding term; the nodes with the highest sum are the most preferred.
   anti_affinity
   dictionary                              Describes vm anti-affinity scheduling rules e.g. avoid putting this vm in the same node, zone, etc. as some other vms.
   added in 2.9
                                           If the anti-affinity requirements specified by this field are not met at scheduling time, the vm will not be scheduled onto the node. If the anti-affinity
          hard                             requirements specified by this field cease to be met at some point during vm execution (e.g. due to a vm label update), the system may or may not try to
          dictionary                       eventually evict the vm from its node. When there are multiple elements, the lists of nodes corresponding to each term are intersected, i.e. all terms
                                           must be satisfied.
                                           The scheduler will prefer to schedule vms to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that
          soft                             violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of
          dictionary                       the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements
                                           of this field and adding weight to the sum if the node has vms which matches the corresponding term; the nodes with the highest sum are the most
                                           preferred.
   api_key                                 Token used to authenticate with the API. Can also be specified via K8S_AUTH_API_KEY environment variable.
   string
   bootloader                              Specify the bootloader of the virtual machine.
   string                                  All virtual machines use BIOS by default for booting.
   ca_cert                                 Path to a CA certificate used to authenticate with the API. The full certificate chain must be provided to avoid certificate validation errors. Can also
   path                                    be specified via K8S_AUTH_SSL_CA_CERT environment variable.
                                           aliases: ssl_ca_cert
   client_cert                             Path to a certificate used to authenticate with the API. Can also be specified via K8S_AUTH_CERT_FILE environment variable.
   path                                    aliases: cert_file
   client_key                              Path to a key file used to authenticate with the API. Can also be specified via K8S_AUTH_KEY_FILE environment variable.
   path                                    aliases: key_file
   cloud_init_nocloud                      Represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the virtual machine. A proper cloud-init installation is
   dictionary                              required inside the guest. More information https://kubevirt.io/api-reference/master/definitions.html#_v1_cloudinitnocloudsource
   context                                 The name of a context found in the config file. Can also be specified via K8S_AUTH_CONTEXT environment variable.
   string
   cpu_cores                               Number of CPU cores.
   integer
                                           List of dictionary to fine-tune features provided by the selected CPU model.
   cpu_features                            Note: Policy attribute can either be omitted or contain one of the following policies: force, require, optional, disable, forbid.
   list                                    Note: In case a policy is omitted for a feature, it will default to require.
                                           More information about policies: https://libvirt.org/formatdomain.html#elementsCPU
   cpu_limit                               Is converted to its millicore value and multiplied by 100. The resulting value is the total amount of CPU time that a container can use every 100ms. A
   integer                                 virtual machine cannot use more than its share of CPU time during this interval.
                                           CPU model.
   cpu_model                               You can check list of available models here: https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml.
   string                                  Note: User can define default CPU model via as default-cpu-model in kubevirt-config ConfigMap, if not set host-model is used.
                                           Note: Be sure that node CPU model where you run a VM, has the same or higher CPU family.
                                           Note: If CPU model wasn't defined, the VM will have CPU model closest to one that used on the node where the VM is running.
   cpu_shares                              Specify CPU shares.
   integer
   datavolumes                             DataVolumes are a way to automate importing virtual machine disks onto pvcs during the virtual machine's launch flow. Without using a DataVolume, users
   list                                    have to prepare a pvc with a disk image before assigning it to a VM or VMI manifest. With a DataVolume, both the pvc creation and import is automated on
                                           behalf of the user.
                                           List of dictionaries which specify disks of the virtual machine.
   disks                                   A disk can be made accessible via four different types: disk, lun, cdrom, floppy.
   list                                    All possible configuration options are available in https://kubevirt.io/api-reference/master/definitions.html#_v1_disk
                                           Each disk must have specified a volume that declares which volume type of the disk All possible configuration options of volume are available in
                                           https://kubevirt.io/api-reference/master/definitions.html#_v1_volume.
   ephemeral             Choices:          If (true) ephemeral virtual machine will be created. When destroyed it won't be accessible again.
   boolean               • no ←            Works only with state present and absent.
                         • yes
   force                 Choices:
   boolean               • no ←            If set to no, and state is present, an existing object will be replaced.
                         • yes
   headless                                Specify if the virtual machine should have attached a minimal Video and Graphics device configuration.
   -                                       By default a minimal Video and Graphics device configuration will be applied to the VirtualMachineInstance. The video device is vga compatible and comes
                                           with a memory size of 16 MB.
   host                                    Provide a URL for accessing the API. Can also be specified via K8S_AUTH_HOST environment variable.
   string
   hostname
   -                                       Specifies the hostname of the virtual machine. The hostname will be set either by dhcp, cloud-init if configured or virtual machine name will be used.
   added in 2.9
   hugepage_size                           Specify huge page size.
   string
                                           An interface defines a virtual network interface of a virtual machine (also called a frontend).
   interfaces                              All possible configuration options interfaces are available in https://kubevirt.io/api-reference/master/definitions.html#_v1_interface
   list                                    Each interface must have specified a network that declares which logical or physical device it is connected to (also called as backend). All possible
                                           configuration options of network are available in https://kubevirt.io/api-reference/master/definitions.html#_v1_network.
   kubeconfig                              Path to an existing Kubernetes config file. If not provided, and no other connection options are provided, the openshift client will attempt to load the
   path                                    default configuration file from ~/.kube/config.json. Can also be specified via K8S_AUTH_KUBECONFIG environment variable.
                                           Labels are key/value pairs that are attached to virtual machines. Labels are intended to be used to specify identifying attributes of virtual machines
   labels                                  that are meaningful and relevant to users, but do not directly imply semantics to the core system. Labels can be used to organize and to select subsets of
   dictionary                              virtual machines. Labels can be attached to virtual machines at creation time and subsequently added and modified at any time.
                                           More on labels that are used for internal implementation https://kubevirt.io/user-guide/#/misc/annotations_and_labels
   machine_type                            QEMU machine type is the actual chipset of the virtual machine.
   string
   memory                                  The amount of memory to be requested by virtual machine.
   string                                  For example 1024Mi.
   memory_limit                            The maximum memory to be used by virtual machine.
   string                                  For example 1024Mi.
                         Choices:          Whether to override the default patch merge approach with a specific type.
   merge_type            • json            If more than one merge type is given, the merge types will be tried in order.
   list                  • merge           Defaults to ['strategic-merge', 'merge'], which is ideal for using the same parameters on resource kinds that combine Custom Resources and built-in
                         • strategic-merge resources, as Custom Resource Definitions typically aren't updatable by the usual strategic merge.
                                           See https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment
   name                                    Name of the virtual machine.
   string / required
   namespace                               Namespace where the virtual machine exists.
   string / required
   node_affinity
   dictionary                              Describes vm affinity scheduling rules e.g. co-locate this vm in the same node, zone, etc. as some other vms
   added in 2.9
          hard                             If the affinity requirements specified by this field are not met at scheduling time, the vm will not be scheduled onto the node. If the affinity
          dictionary                       requirements specified by this field cease to be met at some point during vm execution (e.g. due to an update), the system may or may not try to
                                           eventually evict the vm from its node.
                                           The scheduler will prefer to schedule vms to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates
          soft                             one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the
          dictionary                       scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this
                                           field and adding weight to the sum if the node matches the corresponding match_expressions; the nodes with the highest sum are the most preferred.
   password                                Provide a password for authenticating with the API. Can also be specified via K8S_AUTH_PASSWORD environment variable.
   string                                  Please read the description of the username option for a discussion of when this option is applicable.
   proxy                                   The URL of an HTTP proxy to use for the connection. Can also be specified via K8S_AUTH_PROXY environment variable.
   -                                       Please note that this module does not pick up typical proxy settings from the environment (e.g. HTTP_PROXY).
   added in 2.9
                                           A partial YAML definition of the object being created/updated. Here you can define Kubernetes resource parameters not covered by this module's parameters.
   resource_definition                     NOTE: resource_definition has lower priority than module parameters. If you try to define e.g. metadata.namespace here, that value will be ignored and
   dictionary                              namespace used instead.
                                           aliases: definition, inline
   smbios_uuid                             In order to provide a consistent view on the virtualized hardware for the guest OS, the SMBIOS UUID can be set.
   string
                         Choices:          Set the virtual machine to either present, absent, running or stopped.
   state                 • present ←       present - Create or update a virtual machine. (And run it if it's ephemeral.)
   string                • absent          absent - Remove a virtual machine.
                         • running         running - Create or update a virtual machine and run it.
                         • stopped         stopped - Stop a virtual machine. (This deletes ephemeral VMs.)
   subdomain                               If specified, the fully qualified virtual machine hostname will be hostname.subdomain.namespace.svc.cluster_domain. If not specified, the virtual machine
   -                                       will not have a domain name at all. The DNS entry will resolve to the virtual machine, no matter if the virtual machine itself can pick up a hostname.
   added in 2.9
   tablets                                 Specify tablets to be used as input devices
   list
   template                                Name of Template to be used in creation of a virtual machine.
   string
   template_parameters                     New values of parameters from Template.
   dictionary
   username                                Provide a username for authenticating with the API. Can also be specified via K8S_AUTH_USERNAME environment variable.
   string                                  Please note that this only works with clusters configured to use HTTP Basic Auth. If your cluster has a different form of authentication (e.g. OAuth2 in
                                           OpenShift), this option will not work as expected and you should look into the k8s_auth module, as that might do what you need.
   validate_certs        Choices:          Whether or not to verify the API server's SSL certificates. Can also be specified via K8S_AUTH_VERIFY_SSL environment variable.
   boolean               • no              aliases: verify_ssl
                         • yes
   wait                  Choices:
   boolean               • no              True if the module should wait for the resource to get into desired state.
                         • yes ←
   wait_sleep          Default:
   -                   5                   Number of seconds to sleep between checks.
   added in 2.9
   wait_timeout        Default:            The amount of time in seconds the module should wait for the resource to get into desired state.
   integer             120

NOTES                   *kubevirt_vm-notes*

   Note

     • The OpenShift Python client wraps the K8s Python client, providing full access to all of the APIS and models available on both platforms. For API version details and additional information
       visit https://github.com/openshift/openshift-restclient-python
     • To avoid SSL certificate validation errors when validate_certs is True, the full certificate chain for the API server must be provided via ca_cert or in the kubeconfig file.
     • In order to use this module you have to install Openshift Python SDK. To ensure it’s installed with correct version you can create the following task: pip: name=openshift>=0.8.2

EXAMPLES                   *kubevirt_vm-examples*

 - name: Start virtual machine 'myvm'
   kubevirt_vm:
       state: running
       name: myvm
       namespace: vms

 - name: Create virtual machine 'myvm' and start it
   kubevirt_vm:
       state: running
       name: myvm
       namespace: vms
       memory: 64Mi
       cpu_cores: 1
       bootloader: efi
       smbios_uuid: 5d307ca9-b3ef-428c-8861-06e72d69f223
       cpu_model: Conroe
       headless: true
       hugepage_size: 2Mi
       tablets:
         - bus: virtio
           name: tablet1
       cpu_limit: 3
       cpu_shares: 2
       disks:
         - name: containerdisk
           volume:
             containerDisk:
               image: kubevirt/cirros-container-disk-demo:latest
               path: /custom-disk/cirros.img
           disk:
             bus: virtio

 - name: Create virtual machine 'myvm' with multus network interface
   kubevirt_vm:
       name: myvm
       namespace: vms
       memory: 512M
       interfaces:
         - name: default
           bridge: {}
           network:
             pod: {}
         - name: mynet
           bridge: {}
           network:
             multus:
               networkName: mynetconf

 - name: Combine inline definition with Ansible parameters
   kubevirt_vm:
       # Kubernetes specification:
       definition:
         metadata:
           labels:
             app: galaxy
             service: web
             origin: vmware

       # Ansible parameters:
       state: running
       name: myvm
       namespace: vms
       memory: 64M
       disks:
         - name: containerdisk
           volume:
             containerDisk:
               image: kubevirt/cirros-container-disk-demo:latest
               path: /custom-disk/cirros.img
           disk:
             bus: virtio

 - name: Start ephemeral virtual machine 'myvm' and wait to be running
   kubevirt_vm:
       ephemeral: true
       state: running
       wait: true
       wait_timeout: 180
       name: myvm
       namespace: vms
       memory: 64M
       labels:
         kubevirt.io/vm: myvm
       disks:
         - name: containerdisk
           volume:
             containerDisk:
               image: kubevirt/cirros-container-disk-demo:latest
               path: /custom-disk/cirros.img
           disk:
             bus: virtio

 - name: Start fedora vm with cloud init
   kubevirt_vm:
       state: running
       wait: true
       name: myvm
       namespace: vms
       memory: 1024M
       cloud_init_nocloud:
         userData: |-
           #cloud-config
           password: fedora
           chpasswd: { expire: False }
       disks:
         - name: containerdisk
           volume:
             containerDisk:
               image: kubevirt/fedora-cloud-container-disk-demo:latest
               path: /disk/fedora.qcow2
           disk:
             bus: virtio
       node_affinity:
         soft:
           - weight: 1
             term:
               match_expressions:
                 - key: security
                   operator: In
                   values:
                     - S2

 - name: Create virtual machine with datavolume and specify node affinity
   kubevirt_vm:
     name: myvm
     namespace: default
     memory: 1024Mi
     datavolumes:
       - name: mydv
         source:
           http:
             url: https://url/disk.qcow2
         pvc:
           accessModes:
             - ReadWriteOnce
           storage: 5Gi
     node_affinity:
       hard:
         - term:
             match_expressions:
               - key: security
                 operator: In
                 values:
                   - S1

 - name: Remove virtual machine 'myvm'
   kubevirt_vm:
       state: absent
       name: myvm
       namespace: vms

RETURN VALUES                   *kubevirt_vm-return values*

   Common return values are documented here, the following are the fields unique to this module:

       Key     Returned                                                                                  Description
   kubevirt_vm success  The virtual machine dictionary specification returned by the API.
   complex              This dictionary contains all values returned by the KubeVirt API all options are described here https://kubevirt.io/api-reference/master/definitions.html#_v1_virtualmachine

STATUS                   *kubevirt_vm-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • KubeVirt Team (@kubevirt)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *kubevirt_vm-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/kubevirt_vm_module.html
