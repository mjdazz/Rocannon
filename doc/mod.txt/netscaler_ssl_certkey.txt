SYNOPSIS                   *netscaler_ssl_certkey*

     • Manage ssl certificate keys.

REQUIREMENTS                   *netscaler_ssl_certkey-requirements*

   The below requirements are needed on the host that executes this module.

     • nitro python sdk

PARAMETERS                   *netscaler_ssl_certkey-parameters*

       Parameter      Choices/Defaults                                                                            Comments
                                       Name of and, optionally, path to the X509 certificate file that is used to form the certificate-key pair. The certificate file should be present on the
   cert                                appliance's hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high
   -                                   availability setup. /nsconfig/ssl/ is the default path.
                                       Minimum length = 1
                                       Name for the certificate and private-key pair. Must begin with an ASCII alphanumeric or underscore _ character, and must contain only ASCII alphanumeric,
   certkey                             underscore _, hash #, period ., space  , colon :, at @, equals =, and hyphen - characters. Cannot be changed after the certificate-key pair is created.
   -                                   The following requirement applies only to the NetScaler CLI:
                                       If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cert" or 'my cert').
                                       Minimum length = 1
   expirymonitor        Choices:
   -                    • enabled      Issue an alert when the certificate is about to expire.
                        • disabled
                        Choices:       Input format of the certificate and the private-key files. The three formats supported by the appliance are:
   inform               • DER          PEM - Privacy Enhanced Mail
   -                    • PEM          DER - Distinguished Encoding Rule
                        • PFX          PFX - Personal Information Exchange.
                                       Name of and, optionally, path to the private-key file that is used to form the certificate-key pair. The certificate file should be present on the appliance's
   key                                 hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high availability setup.
   -                                   /nsconfig/ssl/ is the default path.
                                       Minimum length = 1
   nitro_pass                          The password with which to authenticate to the netscaler node.
   string / required
   nitro_protocol       Choices:
   string               • http ←       Which protocol to use when accessing the nitro API objects.
                        • https
   nitro_timeout      Default:         Time in seconds until a timeout error is thrown when establishing a new session with Netscaler
   float              310
   nitro_user                          The username with which to authenticate to the netscaler node.
   string / required
   notificationperiod                  Time, in number of days, before certificate expiration, at which to generate an alert that the certificate is about to expire.
   -                                   Minimum value = 10
                                       Maximum value = 100
   nsip                                The ip address of the netscaler appliance where the nitro API calls will be made.
   string / required                   The port can be specified with the colon (:). E.g. 192.168.1.1:555.
   passplain                           Pass phrase used to encrypt the private-key. Required when adding an encrypted private-key in PEM format.
   -                                   Minimum length = 1
   password                            Passphrase that was used to encrypt the private-key. Use this option to load encrypted private-keys in PEM format.
   -
   save_config          Choices:       If yes the module will save the configuration on the netscaler node if it makes any changes.
   boolean              • no           The module will not save the configuration on the netscaler node if it made no changes.
                        • yes ←
   state                Choices:       The state of the resource being configured by the module on the netscaler node.
   string               • absent       When present the resource will be created if needed and configured according to the module's parameters.
                        • present ←    When absent the resource will be deleted from the netscaler node.
   validate_certs       Choices:
   boolean              • no           If no, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.
                        • yes ←

NOTES                   *netscaler_ssl_certkey-notes*

   Note

     • For more information on using Ansible to manage Citrix NetScaler Network devices see https://www.ansible.com/ansible-netscaler.

EXAMPLES                   *netscaler_ssl_certkey-examples*

 - name: Setup ssl certkey
   delegate_to: localhost
   netscaler_ssl_certkey:
     nitro_user: nsroot
     nitro_pass: nsroot
     nsip: 172.18.0.2

     certkey: certirificate_1
     cert: server.crt
     key: server.key
     expirymonitor: enabled
     notificationperiod: 30
     inform: PEM
     password: False
     passplain: somesecret

RETURN VALUES                   *netscaler_ssl_certkey-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   diff                List of differences between the actual configured object and the configuration specified in the module
   dictionary failure  Sample:
                       { 'targetlbvserver': 'difference. ours: (str) server1 other: (str) server2' }
   loglines            list of logged messages by the module
   list       always   Sample:
                       ['message 1', 'message 2']
   msg                 Message detailing the failure reason
   string     failure  Sample:
                       Action does not exist

STATUS                   *netscaler_ssl_certkey-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • George Nikolopoulos (@giorgos-nikolopoulos)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *netscaler_ssl_certkey-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/netscaler_ssl_certkey_module.html
