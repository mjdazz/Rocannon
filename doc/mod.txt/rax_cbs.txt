SYNOPSIS                   *rax_cbs*

     • Manipulate Rackspace Cloud Block Storage Volumes

REQUIREMENTS                   *rax_cbs-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • pyrax

PARAMETERS                   *rax_cbs-parameters*

     Parameter                   Choices/Defaults                                                                              Comments
   api_key                                                        Rackspace API key, overrides credentials.
   -                                                              aliases: password
   auth_endpoint  Default:                                        The URI of the authentication service.
   -              "https://identity.api.rackspacecloud.com/v2.0/"
   credentials                                                    File to find the Rackspace credentials in. Ignored if api_key and username are provided.
   -                                                              aliases: creds_file
   description                                                    Description to give the volume being created
   -
   env                                                            Environment as configured in ~/.pyrax.cfg, see
   -                                                              https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration.
   identity_type  Default:                                        Authentication mechanism to use, such as rackspace or keystone.
   -              "rackspace"
   image                                                          image to use for bootable volumes. Can be an id, human_id or name. This option requires pyrax>=1.9.3
   -
   meta                                                           A hash of metadata to associate with the volume
   -
   name                                                           Name to give the volume being created
   - / required
   region         Default:                                        Region to create an instance in.
   -              "DFW"
   size           Default:                                        Size of the volume to create in Gigabytes
   - / required   100
   snapshot_id                                                    The id of the snapshot to create the volume from
   -
   state            Choices:
   - / required     • present ←                                   Indicate desired state of the resource
                    • absent
   tenant_id                                                      The tenant ID used for authentication.
   -
   tenant_name                                                    The tenant name used for authentication.
   -
   username                                                       Rackspace username, overrides credentials.
   -
   validate_certs   Choices:                                      Whether or not to require SSL validation of API endpoints.
   boolean          • no                                          aliases: verify_ssl
                    • yes
   volume_type      Choices:
   - / required     • SATA ←                                      Type of the volume being created
                    • SSD
   wait             Choices:
   boolean          • no ←                                        wait for the volume to be in state 'available' before returning
                    • yes
   wait_timeout   Default:                                        how long before wait gives up, in seconds
   -              300

NOTES                   *rax_cbs-notes*

   Note

     • The following environment variables can be used, RAX_USERNAME, RAX_API_KEY, RAX_CREDS_FILE, RAX_CREDENTIALS, RAX_REGION.
     • RAX_CREDENTIALS and RAX_CREDS_FILE points to a credentials file appropriate for pyrax. See https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
     • RAX_USERNAME and RAX_API_KEY obviate the use of a credentials file
     • RAX_REGION defines a Rackspace Public Cloud region (DFW, ORD, LON, …)

EXAMPLES                   *rax_cbs-examples*

 - name: Build a Block Storage Volume
   gather_facts: False
   hosts: local
   connection: local
   tasks:
     - name: Storage volume create request
       local_action:
         module: rax_cbs
         credentials: ~/.raxpub
         name: my-volume
         description: My Volume
         volume_type: SSD
         size: 150
         region: DFW
         wait: yes
         state: present
         meta:
           app: my-cool-app
       register: my_volume

STATUS                   *rax_cbs-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Christopher H. Laco (@claco)
     • Matt Martz (@sivel)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *rax_cbs-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/rax_cbs_module.html
