SYNOPSIS                   *netconf_config*

     • Netconf is a network management protocol developed and standardized by the IETF. It is documented in RFC 6241.
     • This module allows the user to send a configuration XML file to a netconf device, and detects if there was a configuration change.

REQUIREMENTS                   *netconf_config-requirements*

   The below requirements are needed on the host that executes this module.

     • ncclient

PARAMETERS                   *netconf_config-parameters*

       Parameter       Choices/Defaults                                                                             Comments
   backup              Choices:            This argument will cause the module to create a full backup of the current running-config from the remote device before any changes are made. If the
   boolean             • no ←              backup_options value is not given, the backup file is written to the backup folder in the playbook root directory or role root directory, if playbook is
   added in 2.7        • yes               part of an ansible role. If the directory does not exist, it is created.
   backup_options                          This is a dict object containing configurable options related to backup file path. The value of this option is read only when backup is set to yes, if
   dictionary                              backup is set to no this option will be silently ignored.
   added in 2.8
                                           This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist it will be
         dir_path                          first created and the filename is either the value of filename or default filename as described in filename options description. If the path value is not
         path                              given in that case a backup directory will be created in the current working directory and backup configuration will be copied in filename within backup
                                           directory.
         filename                          The filename to be used to store the backup configuration. If the the filename is not given it will be generated based on the hostname, current time and
         -                                 date in format defined by <hostname>_config.<current-date>@<current-time>
   commit              Choices:            This boolean flag controls if the configuration changes should be committed or not after editing the candidate datastore. This option is supported only if
   boolean             • no                remote Netconf server supports :candidate capability. If the value is set to False commit won't be issued after edit-config operation and user needs to
   added in 2.7        • yes ←             handle commit or discard-changes explicitly.
   confirm           Default:              This argument will configure a timeout value for the commit to be confirmed before it is automatically rolled back. If the confirm_commit argument is set
   -                 0                     to False, this argument is silently ignored. If the value of this argument is set to 0, the commit is confirmed immediately. The remote host MUST support
   added in 2.7                            :candidate and :confirmed-commit capability for this option to .
   confirm_commit      Choices:
   boolean             • no ←              This argument will execute commit operation on remote device. It can be used to confirm a previous commit.
   added in 2.7        • yes
   content                                 The configuration data as defined by the device's data models, the value can be either in xml string format or text format. The format of the
   -                                       configuration should be supported by remote Netconf server
                                           aliases: xml
   default_operation   Choices:            The default operation for <edit-config> rpc, valid values are merge, replace and none. If the default value is merge, the configuration data in the
   -                   • merge             content option is merged at the corresponding level in the target datastore. If the value is replace the data in the content option completely replaces
   added in 2.7        • replace           the configuration in the target datastore. If the value is none the target datastore is unaffected by the configuration in the config option, unless and
                       • none              until the incoming configuration data uses the operation operation to request a different operation.
   delete              Choices:
   boolean             • no ←              It instructs the module to delete the configuration from value mentioned in target datastore.
   added in 2.7        • yes
                                           This option controls the netconf server action after an error occurs while editing the configuration.
   error_option        Choices:            If error_option=stop-on-error, abort the config edit on first error.
   -                   • stop-on-error ←   If error_option=continue-on-error, continue to process configuration data on error. The error is recorded and negative response is generated if any errors
   added in 2.7        • continue-on-error occur.
                       • rollback-on-error If error_option=rollback-on-error, rollback to the original configuration if any error occurs. This requires the remote Netconf server to support the
                                           error_option=rollback-on-error capability.
   format              Choices:            The format of the configuration provided as value of content. Accepted values are xml and text and the given configuration format should be supported by
   -                   • xml ←             remote Netconf server.
   added in 2.7        • text
   host                                    Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination
   string / required                       address for the transport.
   hostkey_verify      Choices:
   boolean             • no                If set to yes, the ssh host key of the device must match a ssh key present on the host if set to no, the ssh host key of the device is not checked.
                       • yes ←
   lock                Choices:            Instructs the module to explicitly lock the datastore specified as target. By setting the option value always is will explicitly lock the datastore
   -                   • never             mentioned in target option. It the value is never it will not lock the target datastore. The value if-supported lock the target datastore only if it is
   added in 2.7        • always ←          supported by the remote Netconf server.
                       • if-supported
   look_for_keys       Choices:
   boolean             • no                Enables looking in the usual locations for the ssh keys (e.g. :file:`~/.ssh/id_"`)
                       • yes ←
   password                                Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
   string                                  specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
   port              Default:              Specifies the port to use when building the connection to the remote device. The port value will default to port 830.
   integer           830
   save                Choices:            The save argument instructs the module to save the configuration in target datastore to the startup-config if changed and if :startup capability is
   boolean             • no ←              supported by Netconf server.
   added in 2.4        • yes
   source_datastore                        Name of the configuration datastore to use as the source to copy the configuration to the datastore mentioned by target option. The values can be either
   -                                       running, candidate, startup or a remote URL
   added in 2.7                            aliases: source
   src                                     Specifies the source path to the xml file that contains the configuration or configuration template to load. The path to the source file can either be the
   -                                       full path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with xml.
   added in 2.4
   ssh_keyfile                             Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session.
   path                                    If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
   target            Default:              Name of the configuration datastore to be edited. - auto, uses candidate and fallback to running - candidate, edit <candidate/> datastore and then commit
   -                 "auto"                - running, edit <running/> datastore directly
   added in 2.4                            aliases: datastore
   timeout           Default:              Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before
   integer           10                    the operation is completed, the module will error.
   username                                Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is
   string                                  not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   validate            Choices:            This boolean flag if set validates the content of datastore given in target option. For this option to work remote Netconf server should support :validate
   boolean             • no ←              capability.
   added in 2.7        • yes

NOTES                   *netconf_config-notes*

   Note

     • This module requires the netconf system service be enabled on the remote device being managed.
     • This module supports devices with and without the candidate and confirmed-commit capabilities. It will always use the safer feature.
     • This module supports the use of connection=netconf
     • For information on using netconf see the Platform Options guide using Netconf
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • This module is supported on ansible_network_os network platforms. See the Network Platform Options for details.

EXAMPLES                   *netconf_config-examples*

 - name: use lookup filter to provide xml configuration
   netconf_config:
     content: "{{ lookup('file', './config.xml') }}"

 - name: set ntp server in the device
   netconf_config:
     content: |
         <config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
             <system xmlns="urn:ietf:params:xml:ns:yang:ietf-system">
                 <ntp>
                     <enabled>true</enabled>
                     <server>
                         <name>ntp1</name>
                         <udp><address>127.0.0.1</address></udp>
                     </server>
                 </ntp>
             </system>
         </config>

 - name: wipe ntp configuration
   netconf_config:
     content: |
         <config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
             <system xmlns="urn:ietf:params:xml:ns:yang:ietf-system">
                 <ntp>
                     <enabled>false</enabled>
                     <server operation="remove">
                         <name>ntp1</name>
                     </server>
                 </ntp>
             </system>
         </config>

 - name: configure interface while providing different private key file path (for connection=netconf)
   netconf_config:
     backup: yes
   register: backup_junos_location
   vars:
     ansible_private_key_file: /home/admin/.ssh/newprivatekeyfile

 - name: configurable backup path
   netconf_config:
     backup: yes
     backup_options:
       filename: backup.cfg
       dir_path: /home/user

RETURN VALUES                   *netconf_config-return values*

   Common return values are documented here, the following are the fields unique to this module:

           Key         Returned                                                                              Description
   backup_path         when     The full path to the backup file
   string              backup   Sample:
                       is yes   /playbooks/ansible/backup/[email protected]:28:34
                       when     If --diff option in enabled while running, the before and after configuration change are returned as part of before and after key.
   diff                diff is  Sample:
   dictionary          enabled  {'after': '<rpc-reply> <data> <configuration> <version>17.3R1.10</version>...<--snip-->', 'before': '<rpc-reply> <data> <configuration>
                                <version>17.3R1.10</version>...<--snip-->'}
   server_capabilities          list of capabilities of the server
   list                success  Sample:
                                ['urn:ietf:params:netconf:base:1.1', 'urn:ietf:params:netconf:capability:confirmed-commit:1.0', 'urn:ietf:params:netconf:capability:candidate:1.0']

STATUS                   *netconf_config-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *netconf_config-red hat support*

     • Leandro Lisboa Penz (@lpenz)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *netconf_config-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/netconf_config_module.html
