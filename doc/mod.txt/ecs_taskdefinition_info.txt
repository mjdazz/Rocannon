SYNOPSIS                   *ecs_taskdefinition_info*

     • Describes a task definition in ecs.

   Aliases: ecs_taskdefinition_facts

REQUIREMENTS                   *ecs_taskdefinition_info-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • botocore
     • json
     • python >= 2.6

PARAMETERS                   *ecs_taskdefinition_info-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   task_definition                               The name of the task definition to get details for
   - / required
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *ecs_taskdefinition_info-notes*

   Note

     • for details of the parameters and returns see http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.describe_task_definition
     • This module was called ecs_taskdefinition_facts before Ansible 2.9. The usage did not change.
     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *ecs_taskdefinition_info-examples*

 # Note: These examples do not set authentication details, see the AWS Guide for details.

 - ecs_taskdefinition_info:
     task_definition: test-td

RETURN VALUES                   *ecs_taskdefinition_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

             Key                Returned                                                                           Description
   container_definitions    success          Returns a list of complex objects representing the containers
   complex
     command                when present     The command that is passed to the container.
     string
     cpu                    always           The number of cpu units reserved for the container.
     integer
     disableNetworking      when present     When this parameter is true, networking is disabled within the container.
     boolean
     dnsSearchDomains       when present     A list of DNS search domains that are presented to the container.
     string
     dnsServers             when present     A list of DNS servers that are presented to the container.
     string
     dockerLabels           when present     A key/value map of labels to add to the container.
     string
     dockerSecurityOptions  when present     A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems.
     string
     entryPoint             when present     The entry point that is passed to the container.
     string
     environment            always           The environment variables to pass to a container.
     complex
          name              when present     The name of the environment variable.
          string
          value             when present     The value of the environment variable.
          string
     essential              always           Whether this is an essential container or not.
     boolean
     extraHosts             when present     A list of hostnames and IP address mappings to append to the /etc/hosts file on the container.
     complex
          hostname          when present     The hostname to use in the /etc/hosts entry.
          string
          ipAddress         when present     The IP address to use in the /etc/hosts entry.
          string
     hostname               when present     The hostname to use for your container.
     string
     image                  always           The image used to start a container.
     string
     links                  when present     Links to other containers.
     string
     logConfiguration       when present     The log configuration specification for the container.
     string
     memoryReservation      when present     The soft limit (in MiB) of memory to reserve for the container.
     integer
     mountPoints            always           The mount points for data volumes in your container.
     complex
          containerPath     when present     The path on the container to mount the host volume at.
          string
          readOnly          when present     If this value is true , the container has read-only access to the volume. If this value is false , then the container can write to the volume.
          boolean
          sourceVolume      when present     The name of the volume to mount.
          string
     name                   always           The name of a container.
     string
     options                when present     The configuration options to send to the log driver.
     string
     portMappings           always           The list of port mappings for the container.
     complex
          containerPort     when present     The port number on the container.
          integer
          hostPort          when present     The port number on the container instance to reserve for your container.
          integer
          protocol          when present     The protocol used for the port mapping.
          string
     privileged             when present     When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user).
     boolean
     readonlyRootFilesystem when present     When this parameter is true, the container is given read-only access to its root file system.
     boolean
     ulimits                when present     A list of ulimits to set in the container.
     complex
          hardLimit         when present     The hard limit for the ulimit type.
          integer
          name              when present     The type of the ulimit .
          string
          softLimit         when present     The soft limit for the ulimit type.
          integer
     user                   when present     The user name to use inside the container.
     string
     volumesFrom            always           Data volumes to mount from another container.
     complex
          readOnly          when present     If this value is true , the container has read-only access to the volume. If this value is false , then the container can write to the volume.
          boolean
          sourceContainer   when present     The name of another container within the same task definition to mount volumes from.
          string
     workingDirectory       when present     The working directory in which to run commands inside the container.
     string
   family                   always           The family of your task definition, used as the definition name
   string
   network_mode             always           Network mode for the containers
   string
   placement_constraints    always           A list of placement constraint objects to use for tasks
   complex
     expression             when present     A cluster query language expression to apply to the constraint.
     string
     type                   when present     The type of constraint.
     string
   requires_attributes      when present     The container instance attributes required by your task
   complex
     name                   when present     The name of the attribute.
     string
     targetId               when present     The ID of the target.
     string
     targetType             when present     The type of the target with which to attach the attribute.
     string
     value                  when present     The value of the attribute.
     string
   revision                 always           Revision number that was queried
   integer
   status                   always           The status of the task definition
   string
   task_definition_arn      always           ARN of the task definition
   string
   task_role_arn            when role is set The ARN of the IAM role that containers in this task can assume
   string
   volumes                  always           The list of volumes in a task
   complex
     host                   when present     The contents of the host parameter determine whether your data volume persists on the host container instance and where it is stored.
     boolean
     name                   when present     The name of the volume.
     string
     source_path            when present     The path on the host container instance that is presented to the container.
     string

STATUS                   *ecs_taskdefinition_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Gustavo Maia (@gurumaia)
     • Mark Chance (@Java1Guy)
     • Darek Kaczynski (@kaczynskid)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *ecs_taskdefinition_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/ecs_taskdefinition_info_module.html
