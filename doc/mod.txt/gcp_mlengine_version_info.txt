SYNOPSIS                   *gcp_mlengine_version_info*

     • Gather info for GCP Version

REQUIREMENTS                   *gcp_mlengine_version_info-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_mlengine_version_info-parameters*

          Parameter          Choices/Defaults                                                                         Comments
                              Choices:
   auth_kind                  • application    The type of credential used.
   string / required          • machineaccount
                              • serviceaccount
   env_type                                    Specifies which Ansible environment you're running this module within.
   string                                      This should not be set unless you know what you're doing.
                                               This only alters the User Agent string for any API requests.
                                               The model that this version belongs to.
   model                                       This field represents a link to a Model resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value
   dictionary / required                       of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_mlengine_model task and then set this model field to "{{
                                               name-of-resource }}"
   project                                     The Google Cloud Platform project to use.
   string
   scopes                                      Array of scopes to be used.
   list
   service_account_contents                    The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                       An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                        The path of a Service Account JSON file if serviceaccount is selected as type.
   path

NOTES                   *gcp_mlengine_version_info-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_mlengine_version_info-examples*

 - name: get info on a version
   gcp_mlengine_version_info:
     model: "{{ model }}"
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"

RETURN VALUES                   *gcp_mlengine_version_info-return values*

   Common return values are documented here, the following are the fields unique to this module:

          Key        Returned                                                                               Description
   resources         always   List of resources
   complex
     autoScaling     success  Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to
     complex                  the model's ability to scale or you will start seeing increases in latency and 429 response codes.
          minNodes   success  The minimum number of nodes to allocate for this mode.
          integer
     createTime      success  The time the version was created.
     string
     deploymentUri   success  The Cloud Storage location of the trained model used to create the version.
     string
     description     success  The description specified for the version when it was created.
     string
     errorMessage    success  The details of a failure or cancellation.
     string
     framework       success  The machine learning framework AI Platform uses to train this version of the model.
     string
     isDefault       success  If true, this version will be used to handle prediction requests that do not specify a version.
     boolean
     labels          success  One or more labels that you can add, to organize your model versions.
     dictionary
     lastUseTime     success  The time the version was last used for prediction.
     string
     machineType     success  The type of machine on which to serve the model. Currently only applies to online prediction service.
     string
     manualScaling            Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is
     complex         success  available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it
                              based on the selected number of nodes.
          nodes      success  The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed.
          integer
     model           success  The model that this version belongs to.
     dictionary
     name            success  The name specified for the version when it was created.
     string                   The version name must be unique within the model it is created in.
     packageUris     success  Cloud Storage paths (gs://…) of packages for custom prediction routines or scikit-learn pipelines with custom code.
     list
     predictionClass success  The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this
     string                   class should be included in a package provided to the packageUris field.
     pythonVersion   success  The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python
     string                   '2.7' works with all supported runtime versions.
     runtimeVersion  success  The AI Platform runtime version to use for this deployment.
     string
     serviceAccount  success  Specifies the service account for resource access control.
     string
     state           success  The state of a version.
     string

STATUS                   *gcp_mlengine_version_info-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_mlengine_version_info-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_mlengine_version_info_module.html
