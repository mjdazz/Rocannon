SYNOPSIS                   *aix_devices*

     • This module discovers, defines, removes and modifies attributes of AIX devices.

Parameters¶

       Parameter     Choices/Defaults                                                                             Comments
   attributes                          A list of device attributes.
   dictionary
   device                              The name of the device.
   string / required                   all is valid to rescan available all devices (AIX cfgmgr command).
   force               Choices:
   boolean             • no ←          Forces action.
                       • yes
   recursive           Choices:
   boolean             • no ←          Removes or defines a device and children devices.
                       • yes
                       Choices:        Controls the device state.
   state               • available ←   available (alias present) rescan a specific device or all devices (when device is not specified).
   string              • defined       removed (alias absent removes a device.
                       • removed       defined changes device to Defined state.

Examples¶

 - name: Scan new devices
   aix_devices:
     device: all
     state: available

 - name: Scan new virtual devices (vio0)
   aix_devices:
     device: vio0
     state: available

 - name: Removing IP alias to en0
   aix_devices:
     device: en0
     attributes:
       delalias4: 10.0.0.100,255.255.255.0

 - name: Removes ent2
   aix_devices:
     device: ent2
     state: removed

 - name: Put device en2 in Defined
   aix_devices:
     device: en2
     state: defined

 - name: Removes ent4 (inexistent).
   aix_devices:
     device: ent4
     state: removed

 - name: Put device en4 in Defined (inexistent)
   aix_devices:
     device: en4
     state: defined

 - name: Put vscsi1 and children devices in Defined state.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: defined

 - name: Removes vscsi1 and children devices.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: removed

 - name: Changes en1 mtu to 9000 and disables arp.
   aix_devices:
     device: en1
     attributes:
       mtu: 900
       arp: off
     state: available

 - name: Configure IP, netmask and set en1 up.
   aix_devices:
     device: en1
     attributes:
       netaddr: 192.168.0.100
       netmask: 255.255.255.0
       state: up
     state: available

 - name: Adding IP alias to en0
   aix_devices:
     device: en0
     attributes:
       alias4: 10.0.0.100,255.255.255.0
     state: available

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

  Authors¶

     • Kairo Araujo (@kairoaraujo)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

REQUIREMENTS                   *aix_devices-requirements*

PARAMETERS                   *aix_devices-parameters*

       Parameter     Choices/Defaults                                                                             Comments
   attributes                          A list of device attributes.
   dictionary
   device                              The name of the device.
   string / required                   all is valid to rescan available all devices (AIX cfgmgr command).
   force               Choices:
   boolean             • no ←          Forces action.
                       • yes
   recursive           Choices:
   boolean             • no ←          Removes or defines a device and children devices.
                       • yes
                       Choices:        Controls the device state.
   state               • available ←   available (alias present) rescan a specific device or all devices (when device is not specified).
   string              • defined       removed (alias absent removes a device.
                       • removed       defined changes device to Defined state.

Examples¶

 - name: Scan new devices
   aix_devices:
     device: all
     state: available

 - name: Scan new virtual devices (vio0)
   aix_devices:
     device: vio0
     state: available

 - name: Removing IP alias to en0
   aix_devices:
     device: en0
     attributes:
       delalias4: 10.0.0.100,255.255.255.0

 - name: Removes ent2
   aix_devices:
     device: ent2
     state: removed

 - name: Put device en2 in Defined
   aix_devices:
     device: en2
     state: defined

 - name: Removes ent4 (inexistent).
   aix_devices:
     device: ent4
     state: removed

 - name: Put device en4 in Defined (inexistent)
   aix_devices:
     device: en4
     state: defined

 - name: Put vscsi1 and children devices in Defined state.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: defined

 - name: Removes vscsi1 and children devices.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: removed

 - name: Changes en1 mtu to 9000 and disables arp.
   aix_devices:
     device: en1
     attributes:
       mtu: 900
       arp: off
     state: available

 - name: Configure IP, netmask and set en1 up.
   aix_devices:
     device: en1
     attributes:
       netaddr: 192.168.0.100
       netmask: 255.255.255.0
       state: up
     state: available

 - name: Adding IP alias to en0
   aix_devices:
     device: en0
     attributes:
       alias4: 10.0.0.100,255.255.255.0
     state: available

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

  Authors¶

     • Kairo Araujo (@kairoaraujo)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

NOTES                   *aix_devices-notes*

EXAMPLES                   *aix_devices-examples*

 - name: Scan new devices
   aix_devices:
     device: all
     state: available

 - name: Scan new virtual devices (vio0)
   aix_devices:
     device: vio0
     state: available

 - name: Removing IP alias to en0
   aix_devices:
     device: en0
     attributes:
       delalias4: 10.0.0.100,255.255.255.0

 - name: Removes ent2
   aix_devices:
     device: ent2
     state: removed

 - name: Put device en2 in Defined
   aix_devices:
     device: en2
     state: defined

 - name: Removes ent4 (inexistent).
   aix_devices:
     device: ent4
     state: removed

 - name: Put device en4 in Defined (inexistent)
   aix_devices:
     device: en4
     state: defined

 - name: Put vscsi1 and children devices in Defined state.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: defined

 - name: Removes vscsi1 and children devices.
   aix_devices:
     device: vscsi1
     recursive: yes
     state: removed

 - name: Changes en1 mtu to 9000 and disables arp.
   aix_devices:
     device: en1
     attributes:
       mtu: 900
       arp: off
     state: available

 - name: Configure IP, netmask and set en1 up.
   aix_devices:
     device: en1
     attributes:
       netaddr: 192.168.0.100
       netmask: 255.255.255.0
       state: up
     state: available

 - name: Adding IP alias to en0
   aix_devices:
     device: en0
     attributes:
       alias4: 10.0.0.100,255.255.255.0
     state: available

Status¶

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

  Authors¶

     • Kairo Araujo (@kairoaraujo)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

RETURN VALUES                   *aix_devices-return values*

STATUS                   *aix_devices-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Kairo Araujo (@kairoaraujo)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aix_devices-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aix_devices_module.html
