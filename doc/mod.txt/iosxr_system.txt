SYNOPSIS                   *iosxr_system*

     • This module provides declarative management of node system attributes on Cisco IOS XR devices. It provides an option to configure host system parameters or remove those parameters from the
       device active configuration.

REQUIREMENTS                   *iosxr_system-requirements*

   The below requirements are needed on the host that executes this module.

     • ncclient >= 0.5.3 when using netconf
     • lxml >= 4.1.1 when using netconf

PARAMETERS                   *iosxr_system-parameters*

     Parameter    Choices/Defaults                                                                              Comments
   domain_name                     Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be appended to the hostname to create a
   -                               fully-qualified domain name.
   domain_search                   Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a list of names and will be
   -                               reconciled with the current active configuration on the running node.
   hostname                        Configure the device hostname parameter. This option takes an ASCII string value.
   -
   lookup_enabled   Choices:       Provides administrative control for enabling or disabling DNS lookups. When this argument is set to True, lookups are performed and when it is set to False,
   boolean          • no           lookups are not performed.
                    • yes
   lookup_source                   The lookup_source argument provides one or more source interfaces to use for performing DNS lookups. The interface provided in lookup_source must be a valid
   -                               interface configured on the device.
   name_servers                    The name_serves argument accepts a list of DNS name servers by way of either FQDN or IP address to use to perform name resolution lookups. This argument accepts
   -                               wither a list of DNS servers See examples.
                                   Deprecated
                                   Starting with Ansible 2.5 we recommend using connection: network_cli.
   provider                        For more information please see the Network Guide.
   dictionary
                                   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                   A dict object containing connection details.
     host                          Specifies the DNS host name or address for connecting to the remote device over the specified transport. The value of host is used as the destination address for
     string /                      the transport.
     required
     password                      Specifies the password to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
     string                        specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead.
     port         Default:         Specifies the port to use when building the connection to the remote device.
     integer      22
     ssh_keyfile                   Specifies the SSH key to use to authenticate the connection to the remote device. This value is the path to the key used to authenticate the SSH session. If the
     path                          value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead.
     timeout      Default:         Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands. If the timeout is exceeded before the
     integer      10               operation is completed, the module will error.
     username                      Configures the username to use to authenticate the connection to the remote device. This value is used to authenticate the SSH session. If the value is not
     string                        specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead.
   state            Choices:       State of the configuration values in the device's current active configuration. When set to present, the values should be configured in the device active
   -                • present ←    configuration and when set to absent the values should not be in the device active configuration
                    • absent
   vrf
   -                               VRF name for domain services
   added in 2.5

NOTES                   *iosxr_system-notes*

   Note

     • This module works with connection network_cli and netconf. See the IOS-XR Platform Options.
     • Tested against IOS XRv 6.1.3
     • name-servers state=absent operation with netconf transport is a success, but with rpc-error. This is due to XR platform issue. Recommended to use ignore_errors option with the task as a
       workaround.
     • For more information on using Ansible to manage network devices see the Ansible Network Guide
     • For more information on using Ansible to manage Cisco devices see the Cisco integration page.

EXAMPLES                   *iosxr_system-examples*

 - name: configure hostname and domain-name (default vrf=default)
   iosxr_system:
     hostname: iosxr01
     domain_name: test.example.com
     domain_search:
       - ansible.com
       - redhat.com
       - cisco.com
 - name: remove configuration
   iosxr_system:
     hostname: iosxr01
     domain_name: test.example.com
     domain_search:
       - ansible.com
       - redhat.com
       - cisco.com
     state: absent
 - name: configure hostname and domain-name with vrf
   iosxr_system:
     hostname: iosxr01
     vrf: nondefault
     domain_name: test.example.com
     domain_search:
       - ansible.com
       - redhat.com
       - cisco.com
 - name: configure DNS lookup sources
   iosxr_system:
     lookup_source: MgmtEth0/0/CPU0/0
     lookup_enabled: True
 - name: configure name servers
   iosxr_system:
     name_servers:
       - 8.8.8.8
       - 8.8.4.4

RETURN VALUES                   *iosxr_system-return values*

   Common return values are documented here, the following are the fields unique to this module:

     Key    Returned                                                                                   Description
   commands          The list of configuration mode commands to send to the device
   list     always   Sample:
                     ['hostname iosxr01', 'ip domain-name test.example.com']
            always
   xml      (empty   NetConf rpc xml sent to device with transport netconf
   list     list     Sample:
   added in when no  ['<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0"> <ip-domain xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ip-domain-cfg"> <vrfs> <vrf> <vrf-name>default</vrf-name>
   2.5      xml rpc  <lists> <list xc:operation="merge"> <order>0</order> <list-name>redhat.com</list-name> </list> </lists> </vrf> </vrfs> </ip-domain> </config>']
            to send)

STATUS                   *iosxr_system-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Network Team. [network]

RED HAT SUPPORT                   *iosxr_system-red hat support*

     • Peter Sprygada (@privateip)
     • Kedar Kekan (@kedarX)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *iosxr_system-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/iosxr_system_module.html
