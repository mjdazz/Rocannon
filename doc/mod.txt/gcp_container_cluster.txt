SYNOPSIS                   *gcp_container_cluster*

     • A Google Container Engine cluster.

REQUIREMENTS                   *gcp_container_cluster-requirements*

   The below requirements are needed on the host that executes this module.

     • python >= 2.6
     • requests >= 2.18.4
     • google-auth >= 1.3.0

PARAMETERS                   *gcp_container_cluster-parameters*

             Parameter             Choices/Defaults                                                                      Comments
   addons_config                                     Configurations for the various addons available to run in the cluster.
   dictionary
    horizontal_pod_autoscaling                       Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has
    dictionary                                       based on the resource usage of the existing pods.
        disabled                    Choices:         Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the
        boolean                     • no             cluster, which is also used by the Cloud Monitoring service.
                                    • yes
    http_load_balancing                              Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
    dictionary
        disabled                    Choices:         Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load
        boolean                     • no             balancers.
                                    • yes
    network_policy_config                            Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is
    dictionary                                       enabled for the nodes.
    added in 2.9
        disabled                    Choices:
        boolean                     • no             Whether NetworkPolicy is enabled for this cluster.
                                    • yes
                                    Choices:
   auth_kind                        • application    The type of credential used.
   string / required                • machineaccount
                                    • serviceaccount
   cluster_ipv4_cidr                                 The IP address range of the container pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have one automatically chosen
   string                                            or specify a /14 block in 10.0.0.0/8.
   default_max_pods_constraint                       The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster.
   dictionary                                        Only honored if cluster created with IP Alias support.
   added in 2.9
    max_pods_per_node                                Constraint enforced on the max num of pods per node.
    string
   description                                       An optional description of this cluster.
   string
   enable_tpu                       Choices:
   boolean                          • no             Enable the ability to use Cloud TPUs in this cluster.
   added in 2.9                     • yes
   env_type                                          Specifies which Ansible environment you're running this module within.
   string                                            This should not be set unless you know what you're doing.
                                                     This only alters the User Agent string for any API requests.
                                                     The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of
   initial_node_count                                instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "nodePool" object,
   integer                                           since this configuration (along with the "nodeConfig") will be used to create a "NodePool" object with an auto-generated name. Do not use this
                                                     and a nodePool at the same time.
                                                     This field has been deprecated. Please use nodePool.initial_node_count instead.
   ip_allocation_policy
   dictionary                                        Configuration for controlling how IPs are allocated in the cluster.
   added in 2.9
                                                     The IP address range for the cluster pod IPs. If this field is set, then cluster.cluster_ipv4_cidr must be left blank.
    cluster_ipv4_cidr_block                          This field is only applicable when useIpAliases is true.
    string                                           Set to blank to have a range chosen with the default size.
                                                     Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
    cluster_secondary_range_name                     The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses.
    string                                           This must be an existing secondary range associated with the cluster subnetwork .
    create_subnetwork               Choices:
    boolean                         • no             Whether a new subnetwork will be created automatically for the cluster.
                                    • yes
                                                     The IP address range of the instance IPs in this cluster.
    node_ipv4_cidr_block                             This is applicable only if createSubnetwork is true.
    string                                           Set to blank to have a range chosen with the default size.
                                                     Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
                                                     The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size.
    services_ipv4_cidr_block                         This field is only applicable when useIpAliases is true.
    string                                           Set to blank to have a range chosen with the default size.
                                                     Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
    services_secondary_range_name                    The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be
    string                                           an existing secondary range associated with the cluster subnetwork.
    subnetwork_name                                  A custom subnetwork name to be used if createSubnetwork is true.
    string                                           If this field is empty, then an automatic name will be chosen for the new subnetwork.
                                                     The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size.
    tpu_ipv4_cidr_block                              This field is only applicable when useIpAliases is true.
    string                                           If unspecified, the range will use the default size.
                                                     Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
    use_ip_aliases                  Choices:
    boolean                         • no             Whether alias IPs will be used for pod IPs in the cluster.
                                    • yes
   kubectl_context
   string                                            The name of the context for the kubectl config file. Will default to the cluster name.
   added in 2.9
   kubectl_path                                      The path that the kubectl config file will be written to.
   string                                            The file will not be created if this path is unset.
   added in 2.9                                      Any existing file at this path will be completely overwritten.
                                                     This requires the PyYaml library.
   legacy_abac
   dictionary                                        Configuration for the legacy ABAC authorization mode.
   added in 2.9
    enabled                         Choices:         Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and
    boolean                         • no             controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
                                    • yes
   location                                          The location where the cluster is deployed.
   string / required                                 aliases: zone
   added in 2.8
   locations                                         The list of Google Compute Engine zones in which the cluster's nodes should be located.
   list                                              aliases: nodeLocations
   added in 2.9
                                                     The logging service the cluster should use to write logs. Currently available options: logging.googleapis.com - the Google Cloud Logging
   logging_service                                   service.
   string                                            none - no logs will be exported from the cluster.
                                                     if left as an empty string,logging.googleapis.com will be used.
                                                     Some valid choices include: "logging.googleapis.com", "none"
   master_auth                                       The authentication information for accessing the master endpoint.
   dictionary
    client_certificate_config                        Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client
    dictionary                                       certificate is issued.
    added in 2.9
        issue_client_certificate    Choices:
        boolean                     • no             Issue a client certificate.
                                    • yes
    password                                         The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create
    string                                           a strong password with a minimum of 16 characters.
    username                                         The username to use for HTTP basic authentication to the master endpoint.
    string
                                                     The monitoring service the cluster should use to write metrics.
   monitoring_service                                Currently available options: monitoring.googleapis.com - the Google Cloud Monitoring service.
   string                                            none - no metrics will be exported from the cluster.
                                                     if left as an empty string, monitoring.googleapis.com will be used.
                                                     Some valid choices include: "monitoring.googleapis.com", "none"
   name                                              The name of this cluster. The name must be unique within this project and location, and can be up to 40 characters. Must be Lowercase letters,
   string                                            numbers, and hyphens only. Must start with a letter. Must end with a number or a letter.
   network                                           The name of the Google Compute Engine network to which the cluster is connected. If left unspecified, the default network will be used.
   string
   network_policy
   dictionary                                        Configuration options for the NetworkPolicy feature.
   added in 2.9
    enabled                         Choices:
    boolean                         • no             Whether network policy is enabled on the cluster.
                                    • yes
    provider                                         The selected network policy provider.
    string                                           Some valid choices include: "PROVIDER_UNSPECIFIED", "CALICO"
                                                     Parameters used in creating the cluster's nodes.
   node_config                                       For requests, this field should only be used in lieu of a "nodePool" object, since this configuration (along with the "initialNodeCount") will
   dictionary                                        be used to create a "NodePool" object with an auto-generated name. Do not use this and a nodePool at the same time. For responses, this field
                                                     will be populated with the node configuration of the first node pool. If unspecified, the defaults are used.
    accelerators                                     A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support
    list                                             for GPUs.
    added in 2.9
        accelerator_count                            The number of accelerator cards exposed to an instance.
        string
        accelerator_type                             The accelerator type resource name.
        string
    disk_size_gb                                     Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
    integer
    disk_type
    string                                           Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd') If unspecified, the default disk type is 'pd-standard' .
    added in 2.9
    image_type                                       The image type to use for this node. Note that for a given image type, the latest version of it will be used.
    string
                                                     The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes
    labels                                           may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume
    dictionary                                       the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see:
                                                     http://kubernetes.io/v1.1/docs/user-guide/labels.html An object containing a list of "key": value pairs.
                                                     Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    local_ssd_count                                  The number of local SSD disks to be attached to the node.
    integer                                          The limit for this value is dependant upon the maximum number of disks available on a machine per zone. See:
                                                     https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits for more information.
    machine_type                                     The name of a Google Compute Engine machine type (e.g.
    string                                           n1-standard-1). If unspecified, the default machine type is n1-standard-1.
                                                     The metadata key/value pairs assigned to instances in the cluster.
                                                     Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata
                                                     server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved
    metadata                                         keys: "instance-template", "kube-env", "startup-script", and "user-data" Values are free-form strings, and only have meaning as interpreted by
    dictionary                                       the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.
                                                     The total size of all keys and values must be less than 512 KB.
                                                     An object containing a list of "key": value pairs.
                                                     Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    min_cpu_platform
    string                                           Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
    added in 2.9
                                                     The set of Google API scopes to be made available on all of the node VMs under the "default" service account.
    oauth_scopes                                     The following scopes are recommended, but not required, and by default are not included: https://www.googleapis.com/auth/compute is required for
    list                                             mounting persistent storage on your nodes.
                                                     https://www.googleapis.com/auth/devstorage.read_only is required for communicating with gcr.io (the Google Container Registry).
                                                     If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
    preemptible                     Choices:         Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information
    boolean                         • no             about preemptible VM instances.
                                    • yes
    service_account                                  The Google Cloud Platform Service Account to be used by the node VMs. If no Service Account is specified, the "default" service account is used.
    string
    tags                                             The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by
    list                                             the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
    taints                                           List of kubernetes taints to be applied to each node.
    list                                             For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ .
    added in 2.9
        effect                                       Effect for taint.
        string                                       Some valid choices include: "EFFECT_UNSPECIFIED", "NO_SCHEDULE", "PREFER_NO_SCHEDULE", "NO_EXECUTE"
        key                                          Key for taint.
        string
        value                                        Value for taint.
        string
   private_cluster_config
   dictionary                                        Configuration for a private cluster.
   added in 2.8
    enable_private_endpoint         Choices:
    boolean                         • no             Whether the master's internal IP address is used as the cluster endpoint.
                                    • yes
    enable_private_nodes            Choices:         Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master
    boolean                         • no             via private networking.
                                    • yes
    master_ipv4_cidr_block                           The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or
    string                                           set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
   project                                           The Google Cloud Platform project to use.
   string
   resource_labels
   dictionary                                        The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
   added in 2.9
   scopes                                            Array of scopes to be used.
   list
   service_account_contents                          The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
   jsonarg
   service_account_email                             An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
   string
   service_account_file                              The path of a Service Account JSON file if serviceaccount is selected as type.
   path
   state                            Choices:
   string                           • present ←      Whether the given object should exist in GCP
                                    • absent
   subnetwork                                        The name of the Google Compute Engine subnetwork to which the cluster is connected.
   string
   tpu_ipv4_cidr_block
   string                                            The IP address range of the Cloud TPUs in this cluster, in CIDR notation.
   added in 2.9

NOTES                   *gcp_container_cluster-notes*

   Note

     • for authentication, you can set service_account_file using the c(gcp_service_account_file) env variable.
     • for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.
     • For authentication, you can set service_account_email using the GCP_SERVICE_ACCOUNT_EMAIL env variable.
     • For authentication, you can set auth_kind using the GCP_AUTH_KIND env variable.
     • For authentication, you can set scopes using the GCP_SCOPES env variable.
     • Environment variables values will only be used if the playbook values are not set.
     • The service_account_email and service_account_file options are mutually exclusive.

EXAMPLES                   *gcp_container_cluster-examples*

 - name: create a cluster
   gcp_container_cluster:
     name: my-cluster
     initial_node_count: 2
     master_auth:
       username: cluster_admin
       password: my-secret-password
     node_config:
       machine_type: n1-standard-4
       disk_size_gb: 500
     location: us-central1-a
     project: test_project
     auth_kind: serviceaccount
     service_account_file: "/tmp/auth.pem"
     state: present

RETURN VALUES                   *gcp_container_cluster-return values*

   Common return values are documented here, the following are the fields unique to this module:

               Key              Returned                                                                         Description
   addonsConfig                 success  Configurations for the various addons available to run in the cluster.
   complex
     horizontalPodAutoscaling   success  Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the
     complex                             resource usage of the existing pods.
         disabled               success  Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is
         boolean                         also used by the Cloud Monitoring service.
     httpLoadBalancing          success  Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
     complex
         disabled               success  Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
         boolean
     networkPolicyConfig        success  Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for
     complex                             the nodes.
         disabled               success  Whether NetworkPolicy is enabled for this cluster.
         boolean
   clusterIpv4Cidr              success  The IP address range of the container pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have one automatically chosen or specify a
   string                                /14 block in 10.0.0.0/8.
   conditions                   success  Which conditions caused the current cluster state.
   complex
     code                       success  Machine-friendly representation of the condition.
     string
     message                    success  Human-friendly representation of the condition.
     string
   createTime                   success  The time the cluster was created, in RFC3339 text format.
   string
   currentMasterVersion         success  The current software version of the master endpoint.
   string
   currentNodeCount             success  The number of nodes currently in the cluster.
   integer
   currentNodeVersion           success  The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this
   string                                reflects the minimum version of all nodes.
   defaultMaxPodsConstraint     success  The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster.
   complex                               Only honored if cluster created with IP Alias support.
     maxPodsPerNode             success  Constraint enforced on the max num of pods per node.
     string
   description                  success  An optional description of this cluster.
   string
   enableTpu                    success  Enable the ability to use Cloud TPUs in this cluster.
   boolean
   endpoint                              The IP address of this cluster's master endpoint.
   string                       success  The endpoint can be accessed from the internet at https://username:[email protected]/ See the masterAuth property of this resource for username and password
                                         information.
   expireTime                   success  The time the cluster will be automatically deleted in RFC3339 text format.
   string
   initialClusterVersion        success  The software version of the master endpoint and kubelets used in the cluster when it was first created. The version can be upgraded over time.
   string
                                         The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must
   initialNodeCount             success  also have available firewall and routes quota. For requests, this field should only be used in lieu of a "nodePool" object, since this configuration (along
   integer                               with the "nodeConfig") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a nodePool at the same time.
                                         This field has been deprecated. Please use nodePool.initial_node_count instead.
   ipAllocationPolicy           success  Configuration for controlling how IPs are allocated in the cluster.
   complex
                                         The IP address range for the cluster pod IPs. If this field is set, then cluster.cluster_ipv4_cidr must be left blank.
     clusterIpv4CidrBlock       success  This field is only applicable when useIpAliases is true.
     string                              Set to blank to have a range chosen with the default size.
                                         Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
     clusterSecondaryRangeName  success  The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses.
     string                              This must be an existing secondary range associated with the cluster subnetwork .
     createSubnetwork           success  Whether a new subnetwork will be created automatically for the cluster.
     boolean
                                         The IP address range of the instance IPs in this cluster.
     nodeIpv4CidrBlock          success  This is applicable only if createSubnetwork is true.
     string                              Set to blank to have a range chosen with the default size.
                                         Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
                                         The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size.
     servicesIpv4CidrBlock      success  This field is only applicable when useIpAliases is true.
     string                              Set to blank to have a range chosen with the default size.
                                         Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
     servicesSecondaryRangeName success  The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing
     string                              secondary range associated with the cluster subnetwork.
     subnetworkName             success  A custom subnetwork name to be used if createSubnetwork is true.
     string                              If this field is empty, then an automatic name will be chosen for the new subnetwork.
                                         The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size.
     tpuIpv4CidrBlock           success  This field is only applicable when useIpAliases is true.
     string                              If unspecified, the range will use the default size.
                                         Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
     useIpAliases               success  Whether alias IPs will be used for pod IPs in the cluster.
     boolean
   kubectlContext               success  The name of the context for the kubectl config file. Will default to the cluster name.
   string
                                         The path that the kubectl config file will be written to.
   kubectlPath                  success  The file will not be created if this path is unset.
   string                                Any existing file at this path will be completely overwritten.
                                         This requires the PyYaml library.
   labelFingerprint             success  The fingerprint of the set of labels for this cluster.
   string
   legacyAbac                   success  Configuration for the legacy ABAC authorization mode.
   complex
     enabled                    success  Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will
     boolean                             have statically granted permissions beyond those provided by the RBAC configuration or IAM.
   location                     success  The location where the cluster is deployed.
   string
   locations                    success  The list of Google Compute Engine zones in which the cluster's nodes should be located.
   list
   loggingService                        The logging service the cluster should use to write logs. Currently available options: logging.googleapis.com - the Google Cloud Logging service.
   string                       success  none - no logs will be exported from the cluster.
                                         if left as an empty string,logging.googleapis.com will be used.
   masterAuth                   success  The authentication information for accessing the master endpoint.
   complex
     clientCertificate          success  Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.
     string
     clientCertificateConfig    success  Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is
     complex                             issued.
         issueClientCertificate success  Issue a client certificate.
         boolean
     clientKey                  success  Base64-encoded private key used by clients to authenticate to the cluster endpoint.
     string
     clusterCaCertificate       success  Base64-encoded public certificate that is the root of trust for the cluster.
     string
     password                   success  The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong
     string                              password with a minimum of 16 characters.
     username                   success  The username to use for HTTP basic authentication to the master endpoint.
     string
                                         The monitoring service the cluster should use to write metrics.
   monitoringService            success  Currently available options: monitoring.googleapis.com - the Google Cloud Monitoring service.
   string                                none - no metrics will be exported from the cluster.
                                         if left as an empty string, monitoring.googleapis.com will be used.
   name                         success  The name of this cluster. The name must be unique within this project and location, and can be up to 40 characters. Must be Lowercase letters, numbers, and
   string                                hyphens only. Must start with a letter. Must end with a number or a letter.
   network                      success  The name of the Google Compute Engine network to which the cluster is connected. If left unspecified, the default network will be used.
   string
   networkPolicy                success  Configuration options for the NetworkPolicy feature.
   complex
     enabled                    success  Whether network policy is enabled on the cluster.
     boolean
     provider                   success  The selected network policy provider.
     string
                                         Parameters used in creating the cluster's nodes.
   nodeConfig                   success  For requests, this field should only be used in lieu of a "nodePool" object, since this configuration (along with the "initialNodeCount") will be used to
   complex                               create a "NodePool" object with an auto-generated name. Do not use this and a nodePool at the same time. For responses, this field will be populated with
                                         the node configuration of the first node pool. If unspecified, the defaults are used.
     accelerators               success  A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
     complex
         acceleratorCount       success  The number of accelerator cards exposed to an instance.
         string
         acceleratorType        success  The accelerator type resource name.
         string
     diskSizeGb                 success  Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
     integer
     diskType                   success  Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd') If unspecified, the default disk type is 'pd-standard' .
     string
     imageType                  success  The image type to use for this node. Note that for a given image type, the latest version of it will be used.
     string
                                         The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to
     labels                              the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined
     dictionary                 success  and conflicts should be avoided. For more information, including usage and the valid values, see: http://kubernetes.io/v1.1/docs/user-guide/labels.html An
                                         object containing a list of "key": value pairs.
                                         Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     localSsdCount                       The number of local SSD disks to be attached to the node.
     integer                    success  The limit for this value is dependant upon the maximum number of disks available on a machine per zone. See:
                                         https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits for more information.
     machineType                success  The name of a Google Compute Engine machine type (e.g.
     string                              n1-standard-1). If unspecified, the default machine type is n1-standard-1.
                                         The metadata key/value pairs assigned to instances in the cluster.
                                         Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server.
                                         Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys:
     metadata                   success  "instance-template", "kube-env", "startup-script", and "user-data" Values are free-form strings, and only have meaning as interpreted by the image running
     dictionary                          in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.
                                         The total size of all keys and values must be less than 512 KB.
                                         An object containing a list of "key": value pairs.
                                         Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     minCpuPlatform             success  Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
     string
                                         The set of Google API scopes to be made available on all of the node VMs under the "default" service account.
     oauthScopes                         The following scopes are recommended, but not required, and by default are not included: https://www.googleapis.com/auth/compute is required for mounting
     list                       success  persistent storage on your nodes.
                                         https://www.googleapis.com/auth/devstorage.read_only is required for communicating with gcr.io (the Google Container Registry).
                                         If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
     preemptible                success  Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about
     boolean                             preemptible VM instances.
     serviceAccount             success  The Google Cloud Platform Service Account to be used by the node VMs. If no Service Account is specified, the "default" service account is used.
     string
     tags                       success  The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client
     list                                during cluster or node pool creation. Each tag within the list must comply with RFC1035.
     taints                     success  List of kubernetes taints to be applied to each node.
     complex                             For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ .
         effect                 success  Effect for taint.
         string
         key                    success  Key for taint.
         string
         value                  success  Value for taint.
         string
   nodeIpv4CidrSize             success  The size of the address space on each node for hosting containers.
   integer                               This is provisioned from within the container_ipv4_cidr range.
   privateClusterConfig         success  Configuration for a private cluster.
   complex
     enablePrivateEndpoint      success  Whether the master's internal IP address is used as the cluster endpoint.
     boolean
     enablePrivateNodes         success  Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private
     boolean                             networking.
     masterIpv4CidrBlock        success  The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of
     string                              masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
     privateEndpoint            success  The internal IP address of this cluster's master endpoint.
     string
     publicEndpoint             success  The external IP address of this cluster's master endpoint.
     string
   resourceLabels               success  The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
   dictionary
   servicesIpv4Cidr             success  The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses are typically put in the last /16
   string                                from the container CIDR.
   status                       success  The current status of this cluster.
   string
   statusMessage                success  Additional information about the current status of this cluster, if available.
   string
   subnetwork                   success  The name of the Google Compute Engine subnetwork to which the cluster is connected.
   string
   tpuIpv4CidrBlock             success  The IP address range of the Cloud TPUs in this cluster, in CIDR notation.
   string

STATUS                   *gcp_container_cluster-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Google Inc. (@googlecloudplatform)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *gcp_container_cluster-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/gcp_container_cluster_module.html
