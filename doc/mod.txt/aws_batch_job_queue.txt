SYNOPSIS                   *aws_batch_job_queue*

     • This module allows the management of AWS Batch Job Queues. It is idempotent and supports “Check” mode. Use module aws_batch_compute_environment to manage the compute environment,
       aws_batch_job_queue to manage job queues, aws_batch_job_definition to manage job definitions.

REQUIREMENTS                   *aws_batch_job_queue-requirements*

   The below requirements are needed on the host that executes this module.

     • boto
     • boto3
     • python >= 2.6

PARAMETERS                   *aws_batch_job_queue-parameters*

            Parameter           Choices/Defaults                                                                       Comments
   aws_access_key                                AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
   string                                        aliases: ec2_access_key, access_key
   aws_secret_key                                AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used.
   string                                        aliases: ec2_secret_key, secret_key
   compute_environment_order                     The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine
   - / required                                  which compute environment should execute a given job. Compute environments must be in the VALID state before you can associate them with a job
                                                 queue. You can associate up to 3 compute environments with a job queue.
   debug_botocore_endpoint_logs   Choices:       Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing the set to the
   boolean                        • no ←         resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The
   added in 2.8                   • yes          ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
   ec2_url                                       Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required.
   string                                        Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
   job_queue_name                                The name for the job queue
   - / required
   job_queue_state                Choices:
   -                              • ENABLED ←    The state of the job queue. If the job queue state is ENABLED , it is able to accept jobs.
                                  • DISABLED
   priority                                      The priority of the job queue. Job queues with a higher priority (or a lower integer value for the priority parameter) are evaluated first when
   - / required                                  associated with same compute environment. Priority is determined in ascending order, for example, a job queue with a priority value of 1 is given
                                                 scheduling preference over a job queue with a priority value of 10.
   profile                                       Uses a boto profile. Only works with boto >= 2.24.0.
   string
   region                                        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
   string                                        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
                                                 aliases: aws_region, ec2_region
   security_token                                AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
   string                                        aliases: access_token
   state                          Choices:
   -                              • present ←    Describes the desired state.
                                  • absent
   validate_certs                 Choices:
   boolean                        • no           When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
                                  • yes ←

NOTES                   *aws_batch_job_queue-notes*

   Note

     • If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence AWS_URL or EC2_URL, AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY or
       EC2_ACCESS_KEY, AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY or EC2_SECRET_KEY, AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN, AWS_REGION or EC2_REGION
     • Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html
     • AWS_REGION or EC2_REGION can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file

EXAMPLES                   *aws_batch_job_queue-examples*

 ---
 - hosts: localhost
   gather_facts: no
   vars:
     state: present
   tasks:
   - name: My Batch Job Queue
     aws_batch_job_queue:
       job_queue_name: jobQueueName
       state: present
       region: us-east-1
       job_queue_state: ENABLED
       priority: 1
       compute_environment_order:
         - order: 1
           compute_environment: my_compute_env1
         - order: 2
           compute_environment: my_compute_env2
     register: batch_job_queue_action

   - name: show results
     debug:
       var: batch_job_queue_action

RETURN VALUES                   *aws_batch_job_queue-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
                       returns what action was taken, whether something was changed, invocation and response
   output     always   Sample:
   dictionary          {'batch_job_queue_action': 'updated', 'changed': False, 'response': {'job_queue_arn': 'arn:aws:batch:....', 'job_queue_name': '<name>', 'priority': 1, 'state': 'DISABLED',
                       'status': 'UPDATING', 'status_reason': 'JobQueue Healthy'}}

STATUS                   *aws_batch_job_queue-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • Jon Meran (@jonmer85)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *aws_batch_job_queue-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/aws_batch_job_queue_module.html
