SYNOPSIS                   *clc_server_snapshot*

     • An Ansible module to Create, Delete and Restore server snapshots in CenturyLink Cloud.

REQUIREMENTS                   *clc_server_snapshot-requirements*

   The below requirements are needed on the host that executes this module.

     • python = 2.7
     • requests >= 2.5.0
     • clc-sdk

PARAMETERS                   *clc_server_snapshot-parameters*

      Parameter    Choices/Defaults                                                                             Comments
   expiration_days Default:         The number of days to keep the server snapshot before it expires.
   -               7
   server_ids                       The list of CLC server Ids.
   - / required
                     Choices:
   state             • present ←    The state to insure that the provided resources are in.
   -                 • absent
                     • restore
   wait              Choices:
   boolean           • no           Whether to wait for the provisioning tasks to finish before returning.
                     • yes ←

NOTES                   *clc_server_snapshot-notes*

   Note

     • To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud - CLC_V2_API_USERNAME, the account login id for the centurylink cloud
       - CLC_V2_API_PASSWORD, the account password for the centurylink cloud
     • Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account login and password via the HTTP api call @
       https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the
       centurylink cloud
     • Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment.

EXAMPLES                   *clc_server_snapshot-examples*

 # Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples

 - name: Create server snapshot
   clc_server_snapshot:
     server_ids:
         - UC1TEST-SVR01
         - UC1TEST-SVR02
     expiration_days: 10
     wait: True
     state: present

 - name: Restore server snapshot
   clc_server_snapshot:
     server_ids:
         - UC1TEST-SVR01
         - UC1TEST-SVR02
     wait: True
     state: restore

 - name: Delete server snapshot
   clc_server_snapshot:
     server_ids:
         - UC1TEST-SVR01
         - UC1TEST-SVR02
     wait: True
     state: absent

RETURN VALUES                   *clc_server_snapshot-return values*

   Common return values are documented here, the following are the fields unique to this module:

      Key     Returned                                                                                  Description
   server_ids          The list of server ids that are changed
   list       success  Sample:
                       ['UC1TEST-SVR01', 'UC1TEST-SVR02']

STATUS                   *clc_server_snapshot-status*

     • This module is not guaranteed to have a backwards compatible interface. [preview]
     • This module is maintained by the Ansible Community. [community]

     • CLC Runner (@clc-runner)

   Hint

   If you notice any issues in this documentation, you can edit this document to improve it.

   ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

MORE INFO                          *clc_server_snapshot-moreinfo*
>
All arguments are omni-completed, but if you really want to see the online docs:
https://docs.ansible.com/ansible/latest/modules/clc_server_snapshot_module.html
